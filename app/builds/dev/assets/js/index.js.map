{"version":3,"file":"index.js","sources":["../../../../src/managers/NavigationManager.ts","../../../../src/config/index.ts","../../../../src/services/SupabaseService.ts","../../../../src/utils/NotificationManager.ts","../../../../src/hooks/useAuth.ts","../../../../src/utils/helpers.ts","../../../../src/components/navigation/ModernNavigation.tsx","../../../../src/components/ui/Preloader.tsx","../../../../src/managers/ContentManager.ts","../../../../src/hooks/useContentManager.ts","../../../../src/services/CalorieCalculatorService.ts","../../../../src/hooks/useCalorieTracker.ts","../../../../src/components/sections/Hero.tsx","../../../../src/utils/nutritionCalculations.ts","../../../../src/pages/AddMeals.tsx","../../../../src/pages/Profile.tsx","../../../../src/config/constants.ts","../../../../src/pages/Journal.tsx","../../../../src/pages/AuthCallback.tsx","../../../../src/components/ui/LoadingSpinner.tsx","../../../../src/components/auth/ProtectedRoute.tsx","../../../../src/hooks/useNavigation.ts","../../../../src/managers/ScrollManager.ts","../../../../src/managers/PerformanceManager.ts","../../../../src/config/AppConfig.ts","../../../../src/App.tsx","../../../../src/main.tsx"],"sourcesContent":["/**\r\n * NavigationManager - Updated for React Router navigation\r\n * Now handles both auth prompts and page navigation\r\n */\r\n\r\nimport type { NavigationState, NavigationConfig, NavigationItem, Position, INavigationManager } from '../types/navigation';\r\n\r\nclass NavigationManager implements INavigationManager {\r\n    private static instance: NavigationManager | null = null;\r\n    private element: HTMLElement | null = null;\r\n    private state: NavigationState;\r\n    private config: NavigationConfig;\r\n    private subscribers: Set<(state: NavigationState) => void> = new Set();\r\n    private keyboardHandler: ((e: KeyboardEvent) => void) | null = null;\r\n    private mouseHandler: ((e: MouseEvent) => void) | null = null;\r\n    private touchHandler: ((e: TouchEvent) => void) | null = null;\r\n    private resizeObserver: ResizeObserver | null = null;\r\n    private isInitialized = false;\r\n    private isAuthenticated = false;\r\n\r\n    private constructor() {\r\n        // UPDATED: Navigation items now use router paths\r\n        this.config = {\r\n            items: [\r\n                {\r\n                    id: 'home',\r\n                    label: 'Home',\r\n                    href: '/',\r\n                    position: 0,\r\n                    disabled: false,\r\n                    requiresAuth: false,\r\n                    ariaLabel: 'Navigate to Home'\r\n                },\r\n                {\r\n                    id: 'add-meals',\r\n                    label: 'Add Meals',\r\n                    href: '/add-meals',\r\n                    position: 1,\r\n                    disabled: false,\r\n                    requiresAuth: true,\r\n                    ariaLabel: 'Navigate to Add Meals'\r\n                },\r\n                {\r\n                    id: 'journal',\r\n                    label: 'Journal',\r\n                    href: '/journal',\r\n                    position: 2,\r\n                    disabled: false,\r\n                    requiresAuth: true,\r\n                    ariaLabel: 'Navigate to Health Journal'\r\n                },\r\n                {\r\n                    id: 'profile',\r\n                    label: 'Profile',\r\n                    href: '/profile',\r\n                    position: 3,\r\n                    disabled: false,\r\n                    requiresAuth: true,\r\n                    ariaLabel: 'Navigate to Profile'\r\n                }\r\n            ],\r\n            animationDuration: 300,\r\n            radius: 120,\r\n            centerSize: 60,\r\n            itemSize: 50,\r\n            autoClose: true,\r\n            closeDelay: 1000,\r\n            enableKeyboard: true,\r\n            enableTouch: true,\r\n            centerIcon: 'menu',\r\n            centerLabel: 'Menu'\r\n        };\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n            activeItem: this.getActiveItemFromPath(),\r\n            hoveredItem: null,\r\n            focusedItem: null,\r\n            keyboardMode: false,\r\n            isAnimating: false\r\n        };\r\n\r\n        this.init();\r\n    }\r\n\r\n    public static getInstance(): NavigationManager {\r\n        if (!NavigationManager.instance) {\r\n            NavigationManager.instance = new NavigationManager();\r\n        }\r\n        return NavigationManager.instance;\r\n    }\r\n\r\n    private init(): void {\r\n        if (this.isInitialized) return;\r\n\r\n        this.setupEventListeners();\r\n        this.setupRouterListeners();\r\n        this.isInitialized = true;\r\n\r\n        console.log('✅ NavigationManager initialized - router-based navigation enabled');\r\n    }\r\n\r\n    /**\r\n     * NEW: Listen for route changes to update active item\r\n     */\r\n    private setupRouterListeners(): void {\r\n        // Listen for popstate (back/forward button)\r\n        window.addEventListener('popstate', () => {\r\n            this.updateActiveItemFromPath();\r\n        });\r\n\r\n        // Listen for pushstate/replacestate (programmatic navigation)\r\n        const originalPushState = history.pushState;\r\n        const originalReplaceState = history.replaceState;\r\n\r\n        history.pushState = (...args) => {\r\n            originalPushState.apply(history, args);\r\n            setTimeout(() => this.updateActiveItemFromPath(), 0);\r\n        };\r\n\r\n        history.replaceState = (...args) => {\r\n            originalReplaceState.apply(history, args);\r\n            setTimeout(() => this.updateActiveItemFromPath(), 0);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * NEW: Get active item based on current path\r\n     */\r\n    private getActiveItemFromPath(): string {\r\n        const path = window.location.pathname;\r\n        const item = this.config.items.find(item => item.href === path);\r\n        return item ? item.id : 'home';\r\n    }\r\n\r\n    /**\r\n     * NEW: Update active item when route changes\r\n     */\r\n    private updateActiveItemFromPath(): void {\r\n        const activeItem = this.getActiveItemFromPath();\r\n        if (this.state.activeItem !== activeItem) {\r\n            this.setState({ activeItem });\r\n        }\r\n    }\r\n\r\n    public updateAuthState(isAuthenticated: boolean): void {\r\n        this.isAuthenticated = isAuthenticated;\r\n        console.log(`🔐 Navigation auth state updated: ${isAuthenticated ? 'authenticated' : 'not authenticated'}`);\r\n        console.log('🔐 All navigation items remain enabled');\r\n    }\r\n\r\n    private setupEventListeners(): void {\r\n        // Keyboard navigation\r\n        this.keyboardHandler = (e: KeyboardEvent) => {\r\n            if (!this.config.enableKeyboard) return;\r\n\r\n            switch (e.key) {\r\n                case 'Escape':\r\n                    if (this.state.isOpen) {\r\n                        this.close();\r\n                        e.preventDefault();\r\n                    }\r\n                    break;\r\n                case 'Tab':\r\n                    this.setState({ keyboardMode: true });\r\n                    break;\r\n                case 'ArrowUp':\r\n                case 'ArrowDown':\r\n                case 'ArrowLeft':\r\n                case 'ArrowRight':\r\n                    if (this.state.isOpen) {\r\n                        this.handleKeyboardNavigation(e.key);\r\n                        e.preventDefault();\r\n                    }\r\n                    break;\r\n                case 'Enter':\r\n                case ' ':\r\n                    if (this.state.focusedItem && this.state.isOpen) {\r\n                        this.navigate(this.state.focusedItem);\r\n                        e.preventDefault();\r\n                    }\r\n                    break;\r\n            }\r\n        };\r\n\r\n        // Mouse events\r\n        this.mouseHandler = (e: MouseEvent) => {\r\n            if (this.state.keyboardMode) {\r\n                this.setState({ keyboardMode: false });\r\n            }\r\n        };\r\n\r\n        // Touch events for mobile\r\n        this.touchHandler = (e: TouchEvent) => {\r\n            if (!this.config.enableTouch) return;\r\n        };\r\n\r\n        document.addEventListener('keydown', this.keyboardHandler);\r\n        document.addEventListener('mousedown', this.mouseHandler);\r\n        document.addEventListener('touchstart', this.touchHandler, { passive: true });\r\n    }\r\n\r\n    private handleKeyboardNavigation(key: string): void {\r\n        const currentIndex = this.config.items.findIndex(item => item.id === this.state.focusedItem);\r\n        let newIndex = currentIndex;\r\n\r\n        switch (key) {\r\n            case 'ArrowUp':\r\n            case 'ArrowLeft':\r\n                newIndex = currentIndex > 0 ? currentIndex - 1 : this.config.items.length - 1;\r\n                break;\r\n            case 'ArrowDown':\r\n            case 'ArrowRight':\r\n                newIndex = currentIndex < this.config.items.length - 1 ? currentIndex + 1 : 0;\r\n                break;\r\n        }\r\n\r\n        const newItem = this.config.items[newIndex];\r\n        if (newItem) {\r\n            this.setState({ focusedItem: newItem.id });\r\n        }\r\n    }\r\n\r\n    public setElement(element: HTMLElement): void {\r\n        this.element = element;\r\n\r\n        if (this.resizeObserver) {\r\n            this.resizeObserver.disconnect();\r\n        }\r\n\r\n        this.resizeObserver = new ResizeObserver(() => {\r\n            this.updateLayout();\r\n        });\r\n\r\n        this.resizeObserver.observe(element);\r\n    }\r\n\r\n    private updateLayout(): void {\r\n        // Handle responsive layout updates if needed\r\n    }\r\n\r\n    public open(): void {\r\n        if (this.state.isOpen || this.state.isAnimating) return;\r\n\r\n        this.setState({\r\n            isOpen: true,\r\n            isAnimating: true,\r\n            focusedItem: this.config.items[0]?.id || null\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.setState({ isAnimating: false });\r\n        }, this.config.animationDuration);\r\n\r\n        this.emitEvent('open', null);\r\n    }\r\n\r\n    public close(): void {\r\n        if (!this.state.isOpen || this.state.isAnimating) return;\r\n\r\n        this.setState({\r\n            isOpen: false,\r\n            isAnimating: true,\r\n            hoveredItem: null,\r\n            focusedItem: null\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.setState({ isAnimating: false });\r\n        }, this.config.animationDuration);\r\n\r\n        this.emitEvent('close', null);\r\n    }\r\n\r\n    public toggle(): void {\r\n        if (this.state.isOpen) {\r\n            this.close();\r\n        } else {\r\n            this.open();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * UPDATED: Handle both auth checking and router navigation\r\n     */\r\n    public navigate(itemId: string): void {\r\n        const item = this.config.items.find(i => i.id === itemId);\r\n\r\n        if (!item) {\r\n            console.warn(`Navigation item \"${itemId}\" not found`);\r\n            return;\r\n        }\r\n\r\n        // Check if item requires auth and user is not authenticated\r\n        if (item.requiresAuth && !this.isAuthenticated) {\r\n            console.log(`🔒 \"${itemId}\" requires authentication - showing login prompt`);\r\n            this.emitEvent('auth-required', item);\r\n            this.showAuthPrompt(item);\r\n            return;\r\n        }\r\n\r\n        // Handle navigation\r\n        if (item.external) {\r\n            window.open(item.href, '_blank', 'noopener,noreferrer');\r\n        } else {\r\n            // Use React Router navigation for internal routes\r\n            this.navigateToRoute(item.href);\r\n        }\r\n\r\n        // Auto-close if enabled\r\n        if (this.config.autoClose) {\r\n            setTimeout(() => {\r\n                this.close();\r\n            }, this.config.closeDelay);\r\n        }\r\n\r\n        this.emitEvent('navigate', item);\r\n    }\r\n\r\n    /**\r\n     * NEW: Navigate to route using React Router\r\n     */\r\n    private navigateToRoute(path: string): void {\r\n        // Check if we're already on this route\r\n        if (window.location.pathname === path) {\r\n            return;\r\n        }\r\n\r\n        // Use pushState for client-side navigation\r\n        window.history.pushState(null, '', path);\r\n\r\n        // Dispatch popstate event to trigger router re-render\r\n        window.dispatchEvent(new PopStateEvent('popstate'));\r\n\r\n        console.log(`🌐 Navigated to: ${path}`);\r\n    }\r\n\r\n    /**\r\n     * Enhanced auth prompt with route information\r\n     */\r\n    private showAuthPrompt(item: NavigationItem): void {\r\n        const existingModal = document.getElementById('auth-prompt-modal');\r\n        if (existingModal) {\r\n            existingModal.remove();\r\n        }\r\n\r\n        const modal = document.createElement('div');\r\n        modal.id = 'auth-prompt-modal';\r\n        modal.style.cssText = `\r\n            position: fixed;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            background: rgba(0, 0, 0, 0.7);\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            z-index: 10000;\r\n            backdrop-filter: blur(4px);\r\n        `;\r\n\r\n        const modalContent = document.createElement('div');\r\n        modalContent.style.cssText = `\r\n            background: var(--gd-surface-raised, white);\r\n            border-radius: var(--gd-radius-2xl, 16px);\r\n            padding: var(--gd-space-8, 2rem);\r\n            max-width: 400px;\r\n            width: 90%;\r\n            text-align: center;\r\n            box-shadow: var(--gd-shadow-2xl, 0 25px 50px -12px rgba(0, 0, 0, 0.25));\r\n            border: 1px solid var(--gd-border-light, #e5e7eb);\r\n        `;\r\n\r\n        modalContent.innerHTML = `\r\n            <h3 style=\"margin: 0 0 1rem 0; color: var(--gd-text-primary, #000); font-size: var(--gd-font-size-xl, 1.25rem);\">\r\n                Sign in to access ${item.label}\r\n            </h3>\r\n            <p style=\"margin: 0 0 1.5rem 0; color: var(--gd-text-secondary, #666); font-size: var(--gd-font-size-base, 1rem);\">\r\n                Please sign in with Google to continue to ${item.label.toLowerCase()}.\r\n            </p>\r\n            <div style=\"display: flex; gap: 1rem; justify-content: center;\">\r\n                <button id=\"google-signin-btn\" style=\"\r\n                    background: #4285f4;\r\n                    color: white;\r\n                    border: none;\r\n                    padding: 0.75rem 1.5rem;\r\n                    border-radius: var(--gd-radius-lg, 8px);\r\n                    font-size: var(--gd-font-size-base, 1rem);\r\n                    font-weight: 500;\r\n                    cursor: pointer;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 0.5rem;\r\n                    transition: background 0.2s;\r\n                \">\r\n                    🔐 Sign in with Google\r\n                </button>\r\n                <button id=\"cancel-btn\" style=\"\r\n                    background: var(--gd-bg-secondary, #f3f4f6);\r\n                    color: var(--gd-text-primary, #000);\r\n                    border: 1px solid var(--gd-border-light, #e5e7eb);\r\n                    padding: 0.75rem 1.5rem;\r\n                    border-radius: var(--gd-radius-lg, 8px);\r\n                    font-size: var(--gd-font-size-base, 1rem);\r\n                    cursor: pointer;\r\n                    transition: background 0.2s;\r\n                \">\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        `;\r\n\r\n        modal.appendChild(modalContent);\r\n        document.body.appendChild(modal);\r\n\r\n        // Add event listeners\r\n        const googleBtn = modal.querySelector('#google-signin-btn') as HTMLButtonElement;\r\n        const cancelBtn = modal.querySelector('#cancel-btn') as HTMLButtonElement;\r\n\r\n        googleBtn?.addEventListener('click', () => {\r\n            this.emitEvent('google-signin-requested', item);\r\n            modal.remove();\r\n        });\r\n\r\n        cancelBtn?.addEventListener('click', () => {\r\n            modal.remove();\r\n        });\r\n\r\n        // Close on backdrop click\r\n        modal.addEventListener('click', (e) => {\r\n            if (e.target === modal) {\r\n                modal.remove();\r\n            }\r\n        });\r\n\r\n        // Close on Escape key\r\n        const handleEscape = (e: KeyboardEvent) => {\r\n            if (e.key === 'Escape') {\r\n                modal.remove();\r\n                document.removeEventListener('keydown', handleEscape);\r\n            }\r\n        };\r\n        document.addEventListener('keydown', handleEscape);\r\n\r\n        // Auto-remove listener when modal is removed\r\n        const observer = new MutationObserver((mutations) => {\r\n            mutations.forEach((mutation) => {\r\n                if (mutation.type === 'childList') {\r\n                    mutation.removedNodes.forEach((node) => {\r\n                        if (node === modal) {\r\n                            document.removeEventListener('keydown', handleEscape);\r\n                            observer.disconnect();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        observer.observe(document.body, { childList: true });\r\n    }\r\n\r\n    public setHoveredItem(itemId: string | null): void {\r\n        if (this.state.hoveredItem !== itemId) {\r\n            this.setState({ hoveredItem: itemId });\r\n\r\n            if (itemId) {\r\n                const item = this.config.items.find(i => i.id === itemId);\r\n                this.emitEvent('hover', item || null);\r\n            }\r\n        }\r\n    }\r\n\r\n    public getItemPosition(position: number): Position {\r\n        const angle = (position * (360 / this.config.items.length) - 90) * (Math.PI / 180);\r\n        const x = Math.cos(angle) * this.config.radius;\r\n        const y = Math.sin(angle) * this.config.radius;\r\n        return { x, y };\r\n    }\r\n\r\n    public getState(): NavigationState {\r\n        return { ...this.state };\r\n    }\r\n\r\n    public getConfig(): NavigationConfig {\r\n        return { ...this.config };\r\n    }\r\n\r\n    public updateConfig(newConfig: Partial<NavigationConfig>): void {\r\n        const { items, ...safeConfig } = newConfig;\r\n\r\n        if (items) {\r\n            console.warn('Navigation items cannot be updated via updateConfig. Use updateAuthState() for auth-related changes.');\r\n        }\r\n\r\n        this.config = {\r\n            ...this.config,\r\n            ...safeConfig\r\n        };\r\n\r\n        this.emitEvent('config-updated', null);\r\n        this.notifySubscribers();\r\n    }\r\n\r\n    public subscribe(callback: (state: NavigationState) => void): () => void {\r\n        this.subscribers.add(callback);\r\n\r\n        return () => {\r\n            this.subscribers.delete(callback);\r\n        };\r\n    }\r\n\r\n    private setState(newState: Partial<NavigationState>): void {\r\n        this.state = { ...this.state, ...newState };\r\n        this.notifySubscribers();\r\n    }\r\n\r\n    private notifySubscribers(): void {\r\n        this.subscribers.forEach(callback => {\r\n            try {\r\n                callback(this.state);\r\n            } catch (error) {\r\n                console.error('Error in navigation subscriber:', error);\r\n            }\r\n        });\r\n    }\r\n\r\n    private emitEvent(type: string, item: NavigationItem | null): void {\r\n        const event = new CustomEvent(`navigation:${type}`, {\r\n            detail: { item, state: this.state },\r\n            bubbles: true\r\n        });\r\n\r\n        document.dispatchEvent(event);\r\n    }\r\n\r\n    public destroy(): void {\r\n        // Clean up event listeners\r\n        if (this.keyboardHandler) {\r\n            document.removeEventListener('keydown', this.keyboardHandler);\r\n        }\r\n        if (this.mouseHandler) {\r\n            document.removeEventListener('mousedown', this.mouseHandler);\r\n        }\r\n        if (this.touchHandler) {\r\n            document.removeEventListener('touchstart', this.touchHandler);\r\n        }\r\n\r\n        // Clean up resize observer\r\n        if (this.resizeObserver) {\r\n            this.resizeObserver.disconnect();\r\n        }\r\n\r\n        // Remove any existing auth prompts\r\n        const existingModal = document.getElementById('auth-prompt-modal');\r\n        if (existingModal) {\r\n            existingModal.remove();\r\n        }\r\n\r\n        // Clear subscribers\r\n        this.subscribers.clear();\r\n\r\n        // Reset instance\r\n        NavigationManager.instance = null;\r\n        this.isInitialized = false;\r\n\r\n        console.log('🧹 NavigationManager destroyed');\r\n    }\r\n}\r\n\r\nexport default NavigationManager;","// config/index.ts - Updated configuration for new Supabase project\r\nexport const config = {\r\n    supabase: {\r\n        url: import.meta.env.VITE_SUPABASE_URL,\r\n        anonKey: import.meta.env.VITE_SUPABASE_ANON_KEY,\r\n        auth: {\r\n            autoRefreshToken: true,\r\n            persistSession: true,\r\n            detectSessionInUrl: true,\r\n            flowType: 'pkce',\r\n            redirectTo: import.meta.env.VITE_OAUTH_REDIRECT_URL || `${window.location.origin}/auth/callback`\r\n        }\r\n    },\r\n\r\n    app: {\r\n        name: import.meta.env.VITE_APP_NAME || 'Health Tracker',\r\n        version: import.meta.env.VITE_APP_VERSION || '1.0.0',\r\n        baseUrl: import.meta.env.VITE_APP_URL || window.location.origin,\r\n        domain: import.meta.env.VITE_APP_DOMAIN || window.location.host\r\n    },\r\n\r\n    api: {\r\n        timeout: 10000,\r\n        retries: 3\r\n    },\r\n\r\n    // Feature flags\r\n    features: {\r\n        enableGoogleAuth: true,\r\n        enableEmailAuth: true,\r\n        enableProfilePictures: true,\r\n        enableNotifications: true\r\n    },\r\n\r\n    // UI Configuration\r\n    ui: {\r\n        theme: 'light',\r\n        language: 'en',\r\n        dateFormat: 'YYYY-MM-DD',\r\n        timeFormat: '24h'\r\n    }\r\n};\r\n\r\n// Validation\r\nconst requiredEnvVars = [\r\n    'VITE_SUPABASE_URL',\r\n    'VITE_SUPABASE_ANON_KEY'\r\n];\r\n\r\nexport const validateConfig = () => {\r\n    const missing = requiredEnvVars.filter(key => !import.meta.env[key]);\r\n\r\n    if (missing.length > 0) {\r\n        throw new Error(`Missing required environment variables: ${missing.join(', ')}`);\r\n    }\r\n\r\n    console.log('✅ Configuration validated');\r\n};\r\n\r\nexport default config;","// services/SupabaseService.ts - Fixed Google OAuth configuration\r\nimport { createClient, SupabaseClient, Session, User, AuthError, AuthChangeEvent } from '@supabase/supabase-js';\r\nimport { config } from '../config';\r\n\r\ninterface AuthResponse {\r\n    data?: any;\r\n    error?: AuthError | null;\r\n}\r\n\r\ninterface GoogleAuthResponse {\r\n    data?: any;\r\n    error?: AuthError | null;\r\n    loading?: boolean;\r\n}\r\n\r\ninterface SessionResponse {\r\n    session: Session | null;\r\n    error?: AuthError | null;\r\n}\r\n\r\ninterface UserResponse {\r\n    user: User | null;\r\n    error?: AuthError | null;\r\n}\r\n\r\nclass SupabaseService {\r\n    private client: SupabaseClient;\r\n\r\n    constructor() {\r\n        this.client = createClient(\r\n            config.supabase.url,\r\n            config.supabase.anonKey,\r\n            {\r\n                auth: {\r\n                    ...config.supabase.auth,\r\n                    flowType: 'pkce',\r\n                    autoRefreshToken: true,\r\n                    persistSession: true,\r\n                    detectSessionInUrl: true\r\n                }\r\n            }\r\n        );\r\n\r\n        console.log('SupabaseService initialized');\r\n        console.log('URL:', config.supabase.url);\r\n        console.log('Redirect URL will be:', config.supabase.auth.redirectTo);\r\n    }\r\n\r\n    // ===== GOOGLE OAUTH WITH POPUP ===== //\r\n    async signInWithGoogle(): Promise<AuthResponse> {\r\n        try {\r\n            console.log('Initiating Google OAuth...');\r\n\r\n            const { data, error } = await this.client.auth.signInWithOAuth({\r\n                provider: 'google',\r\n                options: {\r\n                    redirectTo: `${window.location.origin}/auth/callback`,\r\n                    queryParams: {\r\n                        access_type: 'offline',\r\n                        prompt: 'consent',\r\n                    },\r\n                    scopes: 'openid email profile'\r\n                }\r\n            });\r\n\r\n            if (error) {\r\n                console.error('Google OAuth error:', error);\r\n                return { data, error };\r\n            }\r\n\r\n            console.log('Google OAuth initiated successfully');\r\n            return { data, error };\r\n\r\n        } catch (err) {\r\n            console.error('Google sign-in failed:', err);\r\n            const error = err as AuthError;\r\n            return { data: null, error };\r\n        }\r\n    }\r\n\r\n    // ===== GOOGLE OAUTH WITH POPUP (Safe implementation) ===== //\r\n    async signInWithGooglePopup(): Promise<AuthResponse> {\r\n        try {\r\n            console.log('Initiating Google OAuth via popup...');\r\n\r\n            // Use the standard Supabase OAuth flow which handles COOP correctly\r\n            const { data, error } = await this.client.auth.signInWithOAuth({\r\n                provider: 'google',\r\n                options: {\r\n                    redirectTo: `${window.location.origin}/auth/callback`,\r\n                    queryParams: {\r\n                        access_type: 'offline',\r\n                        prompt: 'consent',\r\n                    },\r\n                    scopes: 'openid email profile'\r\n                }\r\n            });\r\n\r\n            if (error) {\r\n                console.error('Google OAuth popup error:', error);\r\n                return { data, error };\r\n            }\r\n\r\n            console.log('Google OAuth popup initiated successfully');\r\n            return { data, error };\r\n\r\n        } catch (err) {\r\n            console.error('Google popup sign-in failed:', err);\r\n            const error = err as AuthError;\r\n            return { data: null, error };\r\n        }\r\n    }\r\n\r\n    // ===== POPUP CALLBACK HANDLER ===== //\r\n    private async handlePopupCallback(): Promise<AuthResponse> {\r\n        try {\r\n            // Wait a moment for the session to be established\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n            \r\n            const { data, error } = await this.client.auth.getSession();\r\n            \r\n            if (error) {\r\n                return { data: null, error };\r\n            }\r\n            \r\n            if (data.session) {\r\n                return { data: data.session, error: null };\r\n            }\r\n            \r\n            return { \r\n                data: null, \r\n                error: { \r\n                    message: 'No session found after authentication',\r\n                    name: 'NoSession',\r\n                    status: 401\r\n                } as AuthError \r\n            };\r\n        } catch (err) {\r\n            console.error('Popup callback handling failed:', err);\r\n            const error = err as AuthError;\r\n            return { data: null, error };\r\n        }\r\n    }\r\n\r\n    // ===== EMAIL/PASSWORD AUTHENTICATION ===== //\r\n    async signInWithEmail(email: string, password: string, rememberMe: boolean = false): Promise<AuthResponse> {\r\n        try {\r\n            const { data, error } = await this.client.auth.signInWithPassword({\r\n                email,\r\n                password\r\n            });\r\n\r\n            if (!error && data.session && rememberMe) {\r\n                try {\r\n                    await this.extendSessionDuration(data.session);\r\n                } catch (extendError) {\r\n                    console.warn('Failed to extend session duration:', extendError);\r\n                }\r\n            }\r\n\r\n            return { data, error };\r\n\r\n        } catch (err) {\r\n            console.error('Email sign-in failed:', err);\r\n            const error = err as AuthError;\r\n            return { data: null, error };\r\n        }\r\n    }\r\n\r\n    async signUpWithEmail(email: string, password: string): Promise<AuthResponse> {\r\n        try {\r\n            const { data, error } = await this.client.auth.signUp({\r\n                email,\r\n                password,\r\n                options: {\r\n                    emailRedirectTo: config.supabase.auth.redirectTo,\r\n                    data: {\r\n                        email_verify: true\r\n                    }\r\n                }\r\n            });\r\n            return { data, error };\r\n\r\n        } catch (err) {\r\n            console.error('Email sign-up failed:', err);\r\n            const error = err as AuthError;\r\n            return { data: null, error };\r\n        }\r\n    }\r\n\r\n    // ===== SESSION MANAGEMENT ===== //\r\n    async signOut(): Promise<{ error?: AuthError | null }> {\r\n        try {\r\n            this.clearExtendedSession();\r\n            const { error } = await this.client.auth.signOut();\r\n\r\n            if (error) {\r\n                console.error('Sign out error:', error);\r\n            } else {\r\n                console.log('Signed out successfully');\r\n            }\r\n\r\n            return { error };\r\n\r\n        } catch (err) {\r\n            console.error('Sign out failed:', err);\r\n            const error = err as AuthError;\r\n            return { error };\r\n        }\r\n    }\r\n\r\n    async getSession(): Promise<SessionResponse> {\r\n        try {\r\n            const { data: { session }, error } = await this.client.auth.getSession();\r\n            return { session, error };\r\n        } catch (err) {\r\n            console.error('Get session failed:', err);\r\n            const error = err as AuthError;\r\n            return { session: null, error };\r\n        }\r\n    }\r\n\r\n    async getUser(): Promise<UserResponse> {\r\n        try {\r\n            const { data: { user }, error } = await this.client.auth.getUser();\r\n            return { user, error };\r\n        } catch (err) {\r\n            console.error('Get user failed:', err);\r\n            const error = err as AuthError;\r\n            return { user: null, error };\r\n        }\r\n    }\r\n\r\n    async refreshSession(): Promise<SessionResponse> {\r\n        try {\r\n            const { data: { session }, error } = await this.client.auth.refreshSession();\r\n            return { session, error };\r\n        } catch (err) {\r\n            console.error('Refresh session failed:', err);\r\n            const error = err as AuthError;\r\n            return { session: null, error };\r\n        }\r\n    }\r\n\r\n    private async extendSessionDuration(session: Session): Promise<void> {\r\n        try {\r\n            const extendedExpiry = new Date();\r\n            extendedExpiry.setDate(extendedExpiry.getDate() + 30);\r\n\r\n            localStorage.setItem('extended_session', JSON.stringify({\r\n                expiry: extendedExpiry.toISOString(),\r\n                userId: session.user.id\r\n            }));\r\n        } catch (error) {\r\n            console.warn('Failed to set extended session:', error);\r\n        }\r\n    }\r\n\r\n    // ===== PASSWORD RESET ===== //\r\n    async resetPassword(email: string): Promise<AuthResponse> {\r\n        try {\r\n            const { data, error } = await this.client.auth.resetPasswordForEmail(email, {\r\n                redirectTo: `${config.app.baseUrl}/auth/reset-password`\r\n            });\r\n            return { data, error };\r\n        } catch (err) {\r\n            console.error('Password reset failed:', err);\r\n            const error = err as AuthError;\r\n            return { data: null, error };\r\n        }\r\n    }\r\n\r\n    async updatePassword(newPassword: string): Promise<AuthResponse> {\r\n        try {\r\n            const { data, error } = await this.client.auth.updateUser({\r\n                password: newPassword\r\n            });\r\n            return { data, error };\r\n        } catch (err) {\r\n            console.error('Password update failed:', err);\r\n            const error = err as AuthError;\r\n            return { data: null, error };\r\n        }\r\n    }\r\n\r\n    // ===== EMAIL VERIFICATION ===== //\r\n    async resendEmailVerification(email: string): Promise<AuthResponse> {\r\n        try {\r\n            const { data, error } = await this.client.auth.resend({\r\n                type: 'signup',\r\n                email,\r\n                options: {\r\n                    emailRedirectTo: config.supabase.auth.redirectTo\r\n                }\r\n            });\r\n            return { data, error };\r\n        } catch (err) {\r\n            console.error('Email verification resend failed:', err);\r\n            const error = err as AuthError;\r\n            return { data: null, error };\r\n        }\r\n    }\r\n\r\n    // ===== AUTH STATE LISTENER ===== //\r\n    onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void): () => void {\r\n        const { data: { subscription } } = this.client.auth.onAuthStateChange((event, session) => {\r\n            console.log('Auth state changed:', event, session?.user?.email || 'No user');\r\n            callback(event, session);\r\n        });\r\n\r\n        return () => {\r\n            subscription.unsubscribe();\r\n        };\r\n    }\r\n\r\n    // ===== USER REGISTRATION ===== //\r\n    async registerUser(user: User): Promise<{ success: boolean; error?: string }> {\r\n        try {\r\n            console.log('Starting user registration for:', user.email);\r\n\r\n            // Check if user profile already exists\r\n            const { data: existingProfile, error: checkError } = await this.client\r\n                .from('user_profiles')\r\n                .select('id')\r\n                .eq('user_id', user.id)\r\n                .single();\r\n\r\n            if (checkError && checkError.code !== 'PGRST116') { // PGRST116 = no rows returned\r\n                console.error('Error checking existing profile:', checkError);\r\n                return { success: false, error: 'Failed to check existing user profile' };\r\n            }\r\n\r\n            if (existingProfile) {\r\n                console.log('User profile already exists, skipping registration');\r\n                return { success: true };\r\n            }\r\n\r\n            // Create user profile\r\n            const profileData = {\r\n                user_id: user.id,\r\n                full_name: user.user_metadata?.full_name || \r\n                          user.user_metadata?.name || \r\n                          user.email?.split('@')[0],\r\n                avatar_url: user.user_metadata?.avatar_url || \r\n                           user.user_metadata?.picture\r\n            };\r\n\r\n            const { error: profileError } = await this.client\r\n                .from('user_profiles')\r\n                .insert([profileData]);\r\n\r\n            if (profileError) {\r\n                console.error('Failed to create user profile:', profileError);\r\n                return { success: false, error: 'Failed to create user profile' };\r\n            }\r\n\r\n            // Check if user role already exists\r\n            const { data: existingRole, error: roleCheckError } = await this.client\r\n                .from('user_roles')\r\n                .select('id')\r\n                .eq('user_id', user.id)\r\n                .single();\r\n\r\n            if (roleCheckError && roleCheckError.code !== 'PGRST116') {\r\n                console.error('Error checking existing role:', roleCheckError);\r\n                return { success: false, error: 'Failed to check existing user role' };\r\n            }\r\n\r\n            if (!existingRole) {\r\n                // Create user role\r\n                const { error: roleError } = await this.client\r\n                    .from('user_roles')\r\n                    .insert([{\r\n                        user_id: user.id,\r\n                        role: 'user'\r\n                    }]);\r\n\r\n                if (roleError) {\r\n                    console.error('Failed to create user role:', roleError);\r\n                    return { success: false, error: 'Failed to create user role' };\r\n                }\r\n            }\r\n\r\n            console.log('User registration completed successfully');\r\n            return { success: true };\r\n\r\n        } catch (error) {\r\n            console.error('User registration failed:', error);\r\n            return { success: false, error: 'Unexpected error during user registration' };\r\n        }\r\n    }\r\n\r\n    // ===== ADMIN ROLE CHECK ===== //\r\n    async isAdmin(userId: string): Promise<boolean> {\r\n        try {\r\n            const { data, error } = await this.client\r\n                .from('user_roles')\r\n                .select('role')\r\n                .eq('user_id', userId)\r\n                .maybeSingle();\r\n\r\n            if (error) {\r\n                console.warn('Admin check error:', error);\r\n                return false;\r\n            }\r\n\r\n            // Check if user has admin role\r\n            return data?.role === 'admin';\r\n        } catch (error) {\r\n            console.warn('Failed to check admin status:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // ===== USER PROFILE MANAGEMENT ===== //\r\n    async getUserProfile(userId: string): Promise<{ data: any; error?: any }> {\r\n        try {\r\n            const { data, error } = await this.client\r\n                .from('user_profiles')\r\n                .select('*')\r\n                .eq('user_id', userId)\r\n                .single();\r\n\r\n            return { data, error };\r\n        } catch (err) {\r\n            console.error('Get user profile failed:', err);\r\n            return { data: null, error: err };\r\n        }\r\n    }\r\n\r\n    async updateUserProfile(userId: string, updates: {\r\n        height_cm?: number;\r\n        weight_kg?: number;\r\n        target_weight_kg?: number;\r\n        target_duration?: number;\r\n        target_duration_unit?: string;\r\n        goal_weight_kg?: number;\r\n        activity_level?: string;\r\n        health_goals?: string[];\r\n        full_name?: string;\r\n        avatar_url?: string;\r\n        [key: string]: any;\r\n    }): Promise<{ data?: any; error?: any }> {\r\n        try {\r\n            // First check if profile exists\r\n            const { data: existingProfile } = await this.client\r\n                .from('user_profiles')\r\n                .select('id')\r\n                .eq('user_id', userId)\r\n                .single();\r\n\r\n            if (existingProfile) {\r\n                // Profile exists, update it\r\n                const { data, error } = await this.client\r\n                    .from('user_profiles')\r\n                    .update({\r\n                        ...updates,\r\n                        updated_at: new Date().toISOString()\r\n                    })\r\n                    .eq('user_id', userId)\r\n                    .select()\r\n                    .single();\r\n\r\n                return { data, error };\r\n            } else {\r\n                // Profile doesn't exist, insert new one\r\n                const { data, error } = await this.client\r\n                    .from('user_profiles')\r\n                    .insert({\r\n                        user_id: userId,\r\n                        ...updates,\r\n                        updated_at: new Date().toISOString()\r\n                    })\r\n                    .select()\r\n                    .single();\r\n\r\n                return { data, error };\r\n            }\r\n        } catch (err) {\r\n            console.error('Profile update failed:', err);\r\n            return { data: null, error: err };\r\n        }\r\n    }\r\n\r\n    async updateUserMetadata(updates: {\r\n        full_name?: string;\r\n        avatar_url?: string;\r\n        [key: string]: any;\r\n    }): Promise<AuthResponse> {\r\n        try {\r\n            const { data, error } = await this.client.auth.updateUser({\r\n                data: updates\r\n            });\r\n            return { data, error };\r\n        } catch (err) {\r\n            console.error('User metadata update failed:', err);\r\n            const error = err as AuthError;\r\n            return { data: null, error };\r\n        }\r\n    }\r\n\r\n    // ===== UTILITY METHODS ===== //\r\n    getClient(): SupabaseClient {\r\n        return this.client;\r\n    }\r\n\r\n    async checkEmailExists(email: string): Promise<boolean> {\r\n        try {\r\n            // This requires a custom function in your Supabase database\r\n            const { data, error } = await this.client.rpc('check_email_exists', {\r\n                email_input: email\r\n            });\r\n\r\n            return !error && !!data;\r\n        } catch (error) {\r\n            console.warn('Failed to check email existence:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // ===== SESSION HELPERS ===== //\r\n    isSessionValid(session: Session | null): boolean {\r\n        if (!session) return false;\r\n\r\n        const now = new Date().getTime() / 1000;\r\n        return session.expires_at ? session.expires_at > now : false;\r\n    }\r\n\r\n    shouldRefreshSession(session: Session | null): boolean {\r\n        if (!session || !session.expires_at) return false;\r\n\r\n        const now = new Date().getTime() / 1000;\r\n        const timeUntilExpiry = session.expires_at - now;\r\n\r\n        // Refresh if less than 5 minutes remaining\r\n        return timeUntilExpiry < 300;\r\n    }\r\n\r\n    getExtendedSessionInfo(): { isExtended: boolean; expiry: Date | null } {\r\n        try {\r\n            const stored = localStorage.getItem('extended_session');\r\n            if (!stored) return { isExtended: false, expiry: null };\r\n\r\n            const parsed = JSON.parse(stored);\r\n            const expiry = new Date(parsed.expiry);\r\n            const isExtended = expiry > new Date();\r\n\r\n            return { isExtended, expiry: isExtended ? expiry : null };\r\n        } catch (error) {\r\n            console.warn('Failed to get extended session info:', error);\r\n            return { isExtended: false, expiry: null };\r\n        }\r\n    }\r\n\r\n    clearExtendedSession(): void {\r\n        try {\r\n            localStorage.removeItem('extended_session');\r\n        } catch (error) {\r\n            console.warn('Failed to clear extended session:', error);\r\n        }\r\n    }\r\n\r\n    // ===== ORIENTATION MANAGEMENT ===== //\r\n    async getOrientations(applicableFor?: 'weight_loss' | 'weight_gain' | 'both'): Promise<{ data: any[]; error?: any }> {\r\n        try {\r\n            let query = this.client\r\n                .from('orientations')\r\n                .select('*')\r\n                .order('label', { ascending: true });\r\n\r\n            if (applicableFor && applicableFor !== 'both') {\r\n                query = query.or(`applicable_for.eq.${applicableFor},applicable_for.eq.both`);\r\n            }\r\n\r\n            const { data, error } = await query;\r\n\r\n            return { data: data || [], error };\r\n        } catch (err) {\r\n            console.error('Get orientations failed:', err);\r\n            return { data: [], error: err };\r\n        }\r\n    }\r\n\r\n    // ===== MEALS MANAGEMENT ===== //\r\n    async getTodaysMeals(userId: string): Promise<{ data: any[]; error?: any }> {\r\n        try {\r\n            const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\r\n            \r\n            const { data, error } = await this.client\r\n                .from('meals')\r\n                .select('*')\r\n                .eq('user_id', userId)\r\n                .eq('date', today)\r\n                .order('time', { ascending: true });\r\n\r\n            return { data: data || [], error };\r\n        } catch (err) {\r\n            console.error('Get today\\'s meals failed:', err);\r\n            return { data: [], error: err };\r\n        }\r\n    }\r\n\r\n    async getMealsByDateRange(userId: string, startDate: string, endDate: string): Promise<{ data: any[]; error?: any }> {\r\n        try {\r\n            const { data, error } = await this.client\r\n                .from('meals')\r\n                .select('*')\r\n                .eq('user_id', userId)\r\n                .gte('date', startDate)\r\n                .lte('date', endDate)\r\n                .order('date', { ascending: false })\r\n                .order('time', { ascending: true });\r\n\r\n            return { data: data || [], error };\r\n        } catch (err) {\r\n            console.error('Get meals by date range failed:', err);\r\n            return { data: [], error: err };\r\n        }\r\n    }\r\n\r\n    async addMeal(mealData: {\r\n        user_id: string;\r\n        meal_type: string;\r\n        meal_name: string;\r\n        date: string;\r\n        time: string;\r\n        foods: any;\r\n        total_calories: number;\r\n        total_protein_g: number;\r\n        total_carbs_g: number;\r\n        total_fat_g: number;\r\n        total_fiber_g?: number;\r\n        total_sugar_g?: number;\r\n        total_sodium_mg?: number;\r\n        notes?: string;\r\n    }): Promise<{ data?: any; error?: any }> {\r\n        try {\r\n            const { data, error } = await this.client\r\n                .from('meals')\r\n                .insert([mealData])\r\n                .select()\r\n                .single();\r\n\r\n            return { data, error };\r\n        } catch (err) {\r\n            console.error('Add meal failed:', err);\r\n            return { data: null, error: err };\r\n        }\r\n    }\r\n\r\n    async updateMeal(mealId: string, updates: {\r\n        meal_type?: string;\r\n        meal_name?: string;\r\n        date?: string;\r\n        time?: string;\r\n        foods?: any;\r\n        total_calories?: number;\r\n        total_protein_g?: number;\r\n        total_carbs_g?: number;\r\n        total_fat_g?: number;\r\n        total_fiber_g?: number;\r\n        total_sugar_g?: number;\r\n        total_sodium_mg?: number;\r\n        notes?: string;\r\n    }): Promise<{ data?: any; error?: any }> {\r\n        try {\r\n            const { data, error } = await this.client\r\n                .from('meals')\r\n                .update({\r\n                    ...updates,\r\n                    updated_at: new Date().toISOString()\r\n                })\r\n                .eq('id', mealId)\r\n                .select()\r\n                .single();\r\n\r\n            return { data, error };\r\n        } catch (err) {\r\n            console.error('Update meal failed:', err);\r\n            return { data: null, error: err };\r\n        }\r\n    }\r\n\r\n    async deleteMeal(mealId: string): Promise<{ error?: any }> {\r\n        try {\r\n            const { error } = await this.client\r\n                .from('meals')\r\n                .delete()\r\n                .eq('id', mealId);\r\n\r\n            return { error };\r\n        } catch (err) {\r\n            console.error('Delete meal failed:', err);\r\n            return { error: err };\r\n        }\r\n    }\r\n\r\n    // ===== CUSTOM MEALS MANAGEMENT ===== //\r\n    async checkCustomMealExists(userId: string, mealName: string, calories: number, protein: number, carbs: number, fat: number): Promise<{ exists: boolean; error?: any }> {\r\n        try {\r\n            const { data, error } = await this.client\r\n                .from('custom_meals')\r\n                .select('id')\r\n                .eq('submitted_by', userId)\r\n                .eq('name', mealName)\r\n                .eq('calories_per_100g', calories)\r\n                .eq('protein_g', protein)\r\n                .eq('carbohydrates_g', carbs)\r\n                .eq('fats_g', fat)\r\n                .maybeSingle();\r\n\r\n            return { exists: !!data, error };\r\n        } catch (err) {\r\n            console.error('Check custom meal exists failed:', err);\r\n            return { exists: false, error: err };\r\n        }\r\n    }\r\n\r\n    async addCustomMeal(customMealData: {\r\n        name: string;\r\n        calories_per_100g: number;\r\n        protein_g: number;\r\n        carbohydrates_g: number;\r\n        fats_g: number;\r\n        fiber_g?: number;\r\n        free_sugar_g?: number;\r\n        sodium_mg?: number;\r\n        submitted_by: string;\r\n        status: 'pending' | 'approved' | 'rejected';\r\n    }): Promise<{ data?: any; error?: any }> {\r\n        try {\r\n            const { data, error } = await this.client\r\n                .from('custom_meals')\r\n                .insert([customMealData])\r\n                .select()\r\n                .single();\r\n\r\n            return { data, error };\r\n        } catch (err) {\r\n            console.error('Add custom meal failed:', err);\r\n            return { data: null, error: err };\r\n        }\r\n    }\r\n\r\n    // ===== FOOD SEARCH FUNCTIONALITY ===== //\r\n    async searchFoods(query: string, limit: number = 5): Promise<{ data: any[]; error?: any }> {\r\n        try {\r\n            const { data, error } = await this.client\r\n                .from('foods')\r\n                .select('id, name, calories_per_100g, protein_g, carbohydrates_g, fats_g, fiber_g, free_sugar_g, sodium_mg')\r\n                .ilike('name', `%${query}%`)\r\n                .limit(limit)\r\n                .order('name', { ascending: true });\r\n\r\n            return { data: data || [], error };\r\n        } catch (err) {\r\n            console.error('Search foods failed:', err);\r\n            return { data: [], error: err };\r\n        }\r\n    }\r\n\r\n    async searchCustomMeals(userId: string, query: string, limit: number = 5): Promise<{ data: any[]; error?: any }> {\r\n        try {\r\n            const { data, error } = await this.client\r\n                .from('custom_meals')\r\n                .select('id, name, calories_per_100g, protein_g, carbohydrates_g, fats_g, fiber_g, free_sugar_g, sodium_mg')\r\n                .eq('submitted_by', userId)\r\n                .eq('status', 'approved')\r\n                .ilike('name', `%${query}%`)\r\n                .limit(limit)\r\n                .order('name', { ascending: true });\r\n\r\n            return { data: data || [], error };\r\n        } catch (err) {\r\n            console.error('Search custom meals failed:', err);\r\n            return { data: [], error: err };\r\n        }\r\n    }\r\n\r\n    async searchFoodsAndCustomMeals(userId: string, query: string, limit: number = 5): Promise<{ data: any[]; error?: any }> {\r\n        try {\r\n            // Search both tables concurrently\r\n            const [foodsResult, customMealsResult] = await Promise.all([\r\n                this.searchFoods(query, Math.ceil(limit / 2)),\r\n                this.searchCustomMeals(userId, query, Math.ceil(limit / 2))\r\n            ]);\r\n\r\n            if (foodsResult.error && customMealsResult.error) {\r\n                return { data: [], error: foodsResult.error };\r\n            }\r\n\r\n            // Combine results, marking source for UI purposes\r\n            const combinedResults = [\r\n                ...(foodsResult.data || []).map(food => ({ ...food, source: 'foods' })),\r\n                ...(customMealsResult.data || []).map(meal => ({ ...meal, source: 'custom_meals' }))\r\n            ];\r\n\r\n            // Sort by name and limit to requested number\r\n            const sortedResults = combinedResults\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .slice(0, limit);\r\n\r\n            return { data: sortedResults, error: null };\r\n        } catch (err) {\r\n            console.error('Search foods and custom meals failed:', err);\r\n            return { data: [], error: err };\r\n        }\r\n    }\r\n\r\n    // ===== OAUTH CALLBACK HANDLER ===== //\r\n    async handleOAuthCallback(): Promise<{ success: boolean; error?: string }> {\r\n        try {\r\n            const { data, error } = await this.client.auth.getSession();\r\n\r\n            if (error) {\r\n                console.error('OAuth callback error:', error);\r\n                return { success: false, error: error.message };\r\n            }\r\n\r\n            if (data.session) {\r\n                console.log('OAuth callback successful, user signed in:', data.session.user.email);\r\n                \r\n                // If this is in a popup, send message to parent\r\n                if (window.opener && window.opener !== window) {\r\n                    window.opener.postMessage({\r\n                        type: 'SUPABASE_AUTH_SUCCESS',\r\n                        session: data.session\r\n                    }, window.location.origin);\r\n                    window.close();\r\n                }\r\n                \r\n                return { success: true };\r\n            } else {\r\n                // If this is in a popup, send error message to parent\r\n                if (window.opener && window.opener !== window) {\r\n                    window.opener.postMessage({\r\n                        type: 'SUPABASE_AUTH_ERROR',\r\n                        error: { message: 'No session found after OAuth callback' }\r\n                    }, window.location.origin);\r\n                    window.close();\r\n                }\r\n                \r\n                return { success: false, error: 'No session found after OAuth callback' };\r\n            }\r\n        } catch (err) {\r\n            console.error('OAuth callback handling failed:', err);\r\n            \r\n            // If this is in a popup, send error message to parent\r\n            if (window.opener && window.opener !== window) {\r\n                window.opener.postMessage({\r\n                    type: 'SUPABASE_AUTH_ERROR',\r\n                    error: { message: 'Failed to handle OAuth callback' }\r\n                }, window.location.origin);\r\n                window.close();\r\n            }\r\n            \r\n            return { success: false, error: 'Failed to handle OAuth callback' };\r\n        }\r\n    }\r\n}\r\n\r\nexport default new SupabaseService();","// utils/NotificationManager.ts - Simple notification system\r\ninterface Notification {\r\n    id: string;\r\n    message: string;\r\n    type: 'success' | 'error' | 'info' | 'warning';\r\n    duration: number;\r\n    timestamp: number;\r\n}\r\n\r\ntype NotificationSubscriber = (notifications: Notification[]) => void;\r\n\r\nclass NotificationManager {\r\n    private static instance: NotificationManager;\r\n    private notifications: Notification[] = [];\r\n    private subscribers: Set<NotificationSubscriber> = new Set();\r\n    private nextId = 1;\r\n\r\n    static getInstance(): NotificationManager {\r\n        if (!NotificationManager.instance) {\r\n            NotificationManager.instance = new NotificationManager();\r\n        }\r\n        return NotificationManager.instance;\r\n    }\r\n\r\n    show(message: string, type: 'success' | 'error' | 'info' | 'warning' = 'info', duration = 5000): string {\r\n        const notification: Notification = {\r\n            id: `notification-${this.nextId++}`,\r\n            message,\r\n            type,\r\n            duration,\r\n            timestamp: Date.now()\r\n        };\r\n\r\n        this.notifications.push(notification);\r\n        this.notify();\r\n\r\n        // Auto-remove after duration\r\n        if (duration > 0) {\r\n            setTimeout(() => {\r\n                this.remove(notification.id);\r\n            }, duration);\r\n        }\r\n\r\n        return notification.id;\r\n    }\r\n\r\n    remove(id: string): void {\r\n        this.notifications = this.notifications.filter(n => n.id !== id);\r\n        this.notify();\r\n    }\r\n\r\n    clear(): void {\r\n        this.notifications = [];\r\n        this.notify();\r\n    }\r\n\r\n    subscribe(callback: NotificationSubscriber): () => void {\r\n        this.subscribers.add(callback);\r\n        callback(this.notifications); // Send current state\r\n        return () => this.subscribers.delete(callback);\r\n    }\r\n\r\n    private notify(): void {\r\n        this.subscribers.forEach(callback => callback([...this.notifications]));\r\n    }\r\n\r\n    // Helper methods\r\n    success(message: string, duration = 5000): string {\r\n        return this.show(message, 'success', duration);\r\n    }\r\n\r\n    error(message: string, duration = 8000): string {\r\n        return this.show(message, 'error', duration);\r\n    }\r\n\r\n    info(message: string, duration = 5000): string {\r\n        return this.show(message, 'info', duration);\r\n    }\r\n\r\n    warning(message: string, duration = 6000): string {\r\n        return this.show(message, 'warning', duration);\r\n    }\r\n}\r\n\r\nexport default NotificationManager;","// hooks/useAuth.ts - Fixed Supabase integration with proper types and stable hook order\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Session, User, AuthChangeEvent } from '@supabase/supabase-js';\r\nimport SupabaseService from '../services/SupabaseService';\r\nimport NotificationManager from '../utils/NotificationManager';\r\n\r\ninterface AuthState {\r\n    user: User | null;\r\n    session: Session | null;\r\n    loading: boolean;\r\n    isAuthenticated: boolean;\r\n    isAdmin: boolean;\r\n    authLoading: boolean;\r\n}\r\n\r\ninterface AuthResult {\r\n    success: boolean;\r\n    error?: { message: string } | null;\r\n    data?: any;\r\n}\r\n\r\nexport const useAuth = () => {\r\n    // FIXED: Use refs to prevent hook order changes during rapid updates\r\n    const mountedRef = useRef(true);\r\n    const notificationManagerRef = useRef(NotificationManager.getInstance());\r\n\r\n    // Function to check profile setup and redirect if incomplete\r\n    const checkProfileSetupAndRedirect = async (userId: string) => {\r\n        try {\r\n            const { data: profile } = await SupabaseService.getUserProfile(userId);\r\n            \r\n            // Check if essential profile data is missing\r\n            const isSetupIncomplete = !profile || \r\n                !profile.height_cm || \r\n                !profile.weight_kg || \r\n                !profile.activity_level;\r\n\r\n            if (isSetupIncomplete) {\r\n                // Only redirect if not already on profile page\r\n                if (window.location.pathname !== '/profile') {\r\n                    setTimeout(() => {\r\n                        window.location.href = '/profile';\r\n                    }, 1000); // Small delay to let the welcome notification show\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error checking profile setup:', error);\r\n            // On error, redirect to profile to be safe\r\n            if (window.location.pathname !== '/profile') {\r\n                setTimeout(() => {\r\n                    window.location.href = '/profile';\r\n                }, 1000);\r\n            }\r\n        }\r\n    };\r\n\r\n    const [authState, setAuthState] = useState<AuthState>({\r\n        user: null,\r\n        session: null,\r\n        loading: true,\r\n        isAuthenticated: false,\r\n        isAdmin: false,\r\n        authLoading: false\r\n    });\r\n\r\n    // Initialize auth state\r\n    useEffect(() => {\r\n        mountedRef.current = true;\r\n\r\n        const initializeAuth = async () => {\r\n            try {\r\n                const { session, error } = await SupabaseService.getSession();\r\n\r\n                if (mountedRef.current) {\r\n                    if (session?.user) {\r\n                        const adminStatus = await SupabaseService.isAdmin(session.user.id);\r\n                        setAuthState({\r\n                            user: session.user,\r\n                            session,\r\n                            loading: false,\r\n                            isAuthenticated: true,\r\n                            isAdmin: adminStatus,\r\n                            authLoading: false\r\n                        });\r\n                    } else {\r\n                        setAuthState({\r\n                            user: null,\r\n                            session: null,\r\n                            loading: false,\r\n                            isAuthenticated: false,\r\n                            isAdmin: false,\r\n                            authLoading: false\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Auth initialization error:', error);\r\n                if (mountedRef.current) {\r\n                    setAuthState({\r\n                        user: null,\r\n                        session: null,\r\n                        loading: false,\r\n                        isAuthenticated: false,\r\n                        isAdmin: false,\r\n                        authLoading: false\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        initializeAuth();\r\n\r\n        return () => {\r\n            mountedRef.current = false;\r\n        };\r\n    }, []);\r\n\r\n    // Listen for auth changes - FIXED: Stable listener with proper cleanup\r\n    useEffect(() => {\r\n        const unsubscribe = SupabaseService.onAuthStateChange(\r\n            async (event: AuthChangeEvent, session: Session | null) => {\r\n                // FIXED: Check if component is still mounted before state updates\r\n                if (!mountedRef.current) return;\r\n\r\n                console.log('Auth state change:', event);\r\n\r\n                if (session?.user) {\r\n                    const adminStatus = await SupabaseService.isAdmin(session.user.id);\r\n\r\n                    // FIXED: Double-check mounted state after async operation\r\n                    if (mountedRef.current) {\r\n                        setAuthState({\r\n                            user: session.user,\r\n                            session,\r\n                            loading: false,\r\n                            isAuthenticated: true,\r\n                            isAdmin: adminStatus,\r\n                            authLoading: false // Clear auth loading on successful sign in\r\n                        });\r\n\r\n                        // Show welcome notification for sign in events (only if not from a service signup)\r\n                        if (event === 'SIGNED_IN') {\r\n                            const userName = session.user.user_metadata?.full_name ||\r\n                                session.user.user_metadata?.name ||\r\n                                session.user.email?.split('@')[0] ||\r\n                                'User';\r\n\r\n                            // Only show notification if this is a Google sign in (to avoid duplicate with service layer)\r\n                            const provider = session.user.app_metadata?.provider;\r\n                            if (provider === 'google') {\r\n                                notificationManagerRef.current.show(\r\n                                    `Welcome back, ${userName}!`,\r\n                                    'success',\r\n                                    3000\r\n                                );\r\n                            }\r\n\r\n                            // Check if profile setup is complete and redirect if needed\r\n                            checkProfileSetupAndRedirect(session.user.id);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (mountedRef.current) {\r\n                        setAuthState({\r\n                            user: null,\r\n                            session: null,\r\n                            loading: false,\r\n                            isAuthenticated: false,\r\n                            isAdmin: false,\r\n                            authLoading: false\r\n                        });\r\n\r\n                        // Show sign out notification\r\n                        if (event === 'SIGNED_OUT') {\r\n                            notificationManagerRef.current.show(\r\n                                'You have been signed out',\r\n                                'info',\r\n                                2000\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        );\r\n\r\n        // FIXED: Return the unsubscribe function directly\r\n        return unsubscribe;\r\n    }, []); // FIXED: Empty dependency array for stable effect\r\n\r\n    // Google OAuth sign in with popup\r\n    const signInWithGoogle = useCallback(async (): Promise<AuthResult> => {\r\n        try {\r\n            console.log('Starting Google OAuth popup sign in...');\r\n            \r\n            // Set loading state\r\n            if (mountedRef.current) {\r\n                setAuthState(prevState => ({\r\n                    ...prevState,\r\n                    authLoading: true\r\n                }));\r\n            }\r\n\r\n            const { data, error } = await SupabaseService.signInWithGooglePopup();\r\n\r\n            if (error) {\r\n                console.error('Google OAuth popup error:', error);\r\n                \r\n                // Clear loading state only on error\r\n                if (mountedRef.current) {\r\n                    setAuthState(prevState => ({\r\n                        ...prevState,\r\n                        authLoading: false\r\n                    }));\r\n                }\r\n                \r\n                notificationManagerRef.current.show(\r\n                    error.message || 'Google sign in failed',\r\n                    'error',\r\n                    5000\r\n                );\r\n                return { success: false, error };\r\n            }\r\n\r\n            if (data) {\r\n                console.log('Google OAuth popup initiated successfully');\r\n                // Don't clear loading here - let auth state change handle it\r\n                // The loading will be cleared when SIGNED_IN event fires\r\n                return { success: true, data };\r\n            }\r\n\r\n            // Clear loading state if no data and no error (cancelled)\r\n            if (mountedRef.current) {\r\n                setAuthState(prevState => ({\r\n                    ...prevState,\r\n                    authLoading: false\r\n                }));\r\n            }\r\n            return { success: false, error: { message: 'Authentication was cancelled' } };\r\n\r\n        } catch (error: any) {\r\n            console.error('Google popup sign in error:', error);\r\n            \r\n            // Clear loading state on exception\r\n            if (mountedRef.current) {\r\n                setAuthState(prevState => ({\r\n                    ...prevState,\r\n                    authLoading: false\r\n                }));\r\n            }\r\n            \r\n            const errorMessage = error?.message || 'Google sign in failed';\r\n            notificationManagerRef.current.show(errorMessage, 'error', 5000);\r\n            return { success: false, error: { message: errorMessage } };\r\n        }\r\n    }, []);\r\n\r\n    // Email/password sign in\r\n    const signInWithEmail = useCallback(async (\r\n        email: string,\r\n        password: string,\r\n        rememberMe: boolean = false\r\n    ): Promise<AuthResult> => {\r\n        try {\r\n            const { data, error } = await SupabaseService.signInWithEmail(email, password, rememberMe);\r\n\r\n            if (error) {\r\n                notificationManagerRef.current.show(\r\n                    error.message || 'Sign in failed',\r\n                    'error',\r\n                    5000\r\n                );\r\n                return { success: false, error };\r\n            }\r\n\r\n            return { success: true, data };\r\n\r\n        } catch (error: any) {\r\n            console.error('Email sign in error:', error);\r\n            const errorMessage = error?.message || 'Sign in failed';\r\n            notificationManagerRef.current.show(errorMessage, 'error', 5000);\r\n            return { success: false, error: { message: errorMessage } };\r\n        }\r\n    }, []);\r\n\r\n    // Email/password sign up\r\n    const signUpWithEmail = useCallback(async (\r\n        email: string,\r\n        password: string\r\n    ): Promise<AuthResult> => {\r\n        try {\r\n            const { data, error } = await SupabaseService.signUpWithEmail(email, password);\r\n\r\n            if (error) {\r\n                notificationManagerRef.current.show(\r\n                    error.message || 'Sign up failed',\r\n                    'error',\r\n                    5000\r\n                );\r\n                return { success: false, error };\r\n            }\r\n\r\n            notificationManagerRef.current.show(\r\n                'Account created! Please check your email to verify.',\r\n                'success',\r\n                7000\r\n            );\r\n\r\n            return { success: true, data };\r\n\r\n        } catch (error: any) {\r\n            console.error('Email sign up error:', error);\r\n            const errorMessage = error?.message || 'Sign up failed';\r\n            notificationManagerRef.current.show(errorMessage, 'error', 5000);\r\n            return { success: false, error: { message: errorMessage } };\r\n        }\r\n    }, []);\r\n\r\n    // Sign out\r\n    const signOut = useCallback(async (): Promise<AuthResult> => {\r\n        try {\r\n            const { error } = await SupabaseService.signOut();\r\n\r\n            if (error) {\r\n                notificationManagerRef.current.show(\r\n                    error.message || 'Sign out failed',\r\n                    'error',\r\n                    5000\r\n                );\r\n                return { success: false, error };\r\n            }\r\n\r\n            return { success: true };\r\n\r\n        } catch (error: any) {\r\n            console.error('Sign out error:', error);\r\n            const errorMessage = error?.message || 'Sign out failed';\r\n            notificationManagerRef.current.show(errorMessage, 'error', 5000);\r\n            return { success: false, error: { message: errorMessage } };\r\n        }\r\n    }, []);\r\n\r\n    // Handle OAuth callback\r\n    const handleOAuthCallback = useCallback(async (): Promise<{ success: boolean; error?: string }> => {\r\n        try {\r\n            console.log('Handling OAuth callback...');\r\n            const result = await SupabaseService.handleOAuthCallback();\r\n\r\n            if (result.success) {\r\n                notificationManagerRef.current.show(\r\n                    'Successfully signed in with Google!',\r\n                    'success',\r\n                    3000\r\n                );\r\n            } else {\r\n                notificationManagerRef.current.show(\r\n                    result.error || 'OAuth authentication failed',\r\n                    'error',\r\n                    5000\r\n                );\r\n            }\r\n\r\n            return result;\r\n\r\n        } catch (error: any) {\r\n            console.error('OAuth callback error:', error);\r\n            const errorMessage = error?.message || 'OAuth callback failed';\r\n            notificationManagerRef.current.show(errorMessage, 'error', 5000);\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    }, []);\r\n\r\n    return {\r\n        ...authState,\r\n        signInWithGoogle,\r\n        signInWithEmail,\r\n        signUpWithEmail,\r\n        signOut,\r\n        handleOAuthCallback\r\n    };\r\n};","/**\r\n * Utility functions for GamingDronzz application\r\n * General purpose utilities - theme functions are in utils/themeHelper.ts\r\n */\r\n\r\n// Debounce function for performance optimization\r\nexport const debounce = <T extends (...args: any[]) => any>(\r\n    func: T,\r\n    wait: number,\r\n    immediate = false\r\n): T => {\r\n    let timeout: NodeJS.Timeout | null = null;\r\n\r\n    return ((...args: Parameters<T>) => {\r\n        const later = () => {\r\n            timeout = null;\r\n            if (!immediate) func(...args);\r\n        };\r\n\r\n        const callNow = immediate && !timeout;\r\n\r\n        if (timeout) clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n\r\n        if (callNow) func(...args);\r\n    }) as T;\r\n};\r\n\r\n// Throttle function for scroll events\r\nexport const throttle = <T extends (...args: any[]) => any>(\r\n    func: T,\r\n    limit: number\r\n): T => {\r\n    let inThrottle: boolean;\r\n\r\n    return ((...args: Parameters<T>) => {\r\n        if (!inThrottle) {\r\n            func(...args);\r\n            inThrottle = true;\r\n            setTimeout(() => inThrottle = false, limit);\r\n        }\r\n    }) as T;\r\n};\r\n\r\n// Check if user prefers reduced motion\r\nexport const prefersReducedMotion = (): boolean => {\r\n    if (typeof window === 'undefined') return false;\r\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\r\n};\r\n\r\n// Get viewport dimensions\r\nexport const getViewportDimensions = () => ({\r\n    width: window.innerWidth || document.documentElement.clientWidth,\r\n    height: window.innerHeight || document.documentElement.clientHeight\r\n});\r\n\r\n// Check if element is in viewport\r\nexport const isInViewport = (element: HTMLElement, threshold = 0): boolean => {\r\n    const rect = element.getBoundingClientRect();\r\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight;\r\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth;\r\n\r\n    return (\r\n        rect.top >= -threshold &&\r\n        rect.left >= -threshold &&\r\n        rect.bottom <= windowHeight + threshold &&\r\n        rect.right <= windowWidth + threshold\r\n    );\r\n};\r\n\r\n// Generate unique IDs\r\nexport const generateId = (prefix = 'gd'): string => {\r\n    return `${prefix}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n};\r\n\r\n// Format numbers with commas\r\nexport const formatNumber = (num: number): string => {\r\n    return new Intl.NumberFormat().format(num);\r\n};\r\n\r\n// Clamp value between min and max\r\nexport const clamp = (value: number, min: number, max: number): number => {\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\n// Linear interpolation\r\nexport const lerp = (start: number, end: number, factor: number): number => {\r\n    return start + (end - start) * factor;\r\n};\r\n\r\n// Convert hex to rgba\r\nexport const hexToRgba = (hex: string, alpha = 1): string => {\r\n    const r = parseInt(hex.slice(1, 3), 16);\r\n    const g = parseInt(hex.slice(3, 5), 16);\r\n    const b = parseInt(hex.slice(5, 7), 16);\r\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n};\r\n\r\n// Create CSS custom properties object\r\nexport const createCSSVariables = (variables: Record<string, string | number>) => {\r\n    return Object.entries(variables).reduce((acc, [key, value]) => {\r\n        acc[`--${key}`] = typeof value === 'number' ? `${value}px` : value;\r\n        return acc;\r\n    }, {} as Record<string, string>);\r\n};","import { useEffect, useRef, useState, useMemo, useCallback } from 'react';\r\nimport NavigationManager from '../../managers/NavigationManager';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { prefersReducedMotion } from '../../utils/helpers';\r\nimport './ModernNavigation.css';\r\n\r\ninterface ModernNavigationProps {\r\n    className?: string;\r\n    position?: 'top' | 'bottom' | 'fixed-top' | 'fixed-bottom';\r\n    onNavigate?: (itemId: string) => void;\r\n    brand?: string;\r\n    brandHref?: string;\r\n}\r\n\r\ninterface NavigationState {\r\n    isOpen: boolean;\r\n    activeItem: string | null;\r\n    hoveredItem: string | null;\r\n    focusedItem: string | null;\r\n    keyboardMode: boolean;\r\n}\r\n\r\nconst ModernNavigation: React.FC<ModernNavigationProps> = ({\r\n    className = '',\r\n    position = 'fixed-top',\r\n    onNavigate,\r\n    brand = 'Health Tracker',\r\n    brandHref = '#home'\r\n}) => {\r\n    const navRef = useRef<HTMLDivElement>(null);\r\n    const onNavigateRef = useRef(onNavigate);\r\n    const managerRef = useRef<NavigationManager>();\r\n\r\n    // Get auth state\r\n    const { isAuthenticated, loading: authLoading } = useAuth();\r\n\r\n    onNavigateRef.current = onNavigate;\r\n\r\n    if (!managerRef.current) {\r\n        managerRef.current = NavigationManager.getInstance();\r\n    }\r\n\r\n    const [config, setConfig] = useState(() => managerRef.current?.getConfig() ?? { items: [] });\r\n    const [navState, setNavState] = useState<NavigationState>(() => ({\r\n        isOpen: false,\r\n        activeItem: managerRef.current?.getState().activeItem || 'home',\r\n        hoveredItem: null,\r\n        focusedItem: null,\r\n        keyboardMode: false\r\n    }));\r\n\r\n    const [isScrolled, setIsScrolled] = useState(false);\r\n\r\n    const reducedMotion = useMemo(() => prefersReducedMotion(), []);\r\n\r\n    // Handle scroll effect for navbar styling\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            setIsScrolled(window.scrollY > 50);\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll, { passive: true });\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    // Initialize navigation manager\r\n    useEffect(() => {\r\n        const manager = managerRef.current!;\r\n\r\n        if (navRef.current) {\r\n            manager.setElement(navRef.current);\r\n        }\r\n\r\n        const unsubscribe = manager.subscribe(setNavState);\r\n        setConfig(manager.getConfig());\r\n\r\n        // Update auth state\r\n        if (!authLoading) {\r\n            manager.updateAuthState(isAuthenticated);\r\n        }\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [isAuthenticated, authLoading]);\r\n\r\n\r\n\r\n    // Updated: All items are always clickable now\r\n    const handleItemClick = useCallback((itemId: string) => {\r\n        onNavigateRef.current?.(itemId);\r\n        managerRef.current!.navigate(itemId);\r\n    }, []);\r\n\r\n    const handleItemKeyDown = useCallback((e: React.KeyboardEvent, itemId: string) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n            e.preventDefault();\r\n            handleItemClick(itemId);\r\n        }\r\n    }, [handleItemClick]);\r\n\r\n    const handleItemMouseEnter = useCallback((itemId: string) => {\r\n        managerRef.current!.setHoveredItem(itemId);\r\n    }, []);\r\n\r\n    const handleItemMouseLeave = useCallback(() => {\r\n        managerRef.current!.setHoveredItem(null);\r\n    }, []);\r\n\r\n\r\n    const handleBrandClick = useCallback(() => {\r\n        if (brandHref.startsWith('#')) {\r\n            const homeItem = config.items.find(item => item.href === brandHref);\r\n            if (homeItem) {\r\n                handleItemClick(homeItem.id);\r\n            }\r\n        } else {\r\n            window.location.href = brandHref;\r\n        }\r\n    }, [brandHref, config.items, handleItemClick]);\r\n\r\n    const getItemIcon = useCallback((itemId: string) => {\r\n        const iconMap: { [key: string]: string } = {\r\n            'home': '🏠',\r\n            'add-meals': '🍽️',\r\n            'journal': '📔'\r\n        };\r\n        return iconMap[itemId] || '📄';\r\n    }, []);\r\n\r\n\r\n    const navClasses = useMemo(() => [\r\n        'modern-nav',\r\n        `modern-nav--${position}`,\r\n        className,\r\n        navState.keyboardMode && 'modern-nav--keyboard',\r\n        reducedMotion && 'modern-nav--reduced-motion',\r\n        isScrolled && 'modern-nav--scrolled'\r\n    ].filter(Boolean).join(' '), [\r\n        position,\r\n        className,\r\n        navState.keyboardMode,\r\n        reducedMotion,\r\n        isScrolled\r\n    ]);\r\n\r\n    return (\r\n        <nav\r\n            ref={navRef}\r\n            className={navClasses}\r\n            aria-label=\"Main navigation\"\r\n            role=\"navigation\"\r\n        >\r\n            <div className=\"modern-nav__container\">\r\n                {/* Brand/Logo */}\r\n                <button\r\n                    className=\"modern-nav__brand\"\r\n                    onClick={handleBrandClick}\r\n                    aria-label={`Go to ${brand} home page`}\r\n                    type=\"button\"\r\n                >\r\n                    {brand}\r\n                </button>\r\n\r\n                {/* Desktop Navigation - Centered */}\r\n                <ul className=\"modern-nav__list\" role=\"menubar\">\r\n                    {config.items.map((item) => {\r\n                        const isActive = navState.activeItem === item.id;\r\n                        const isHovered = navState.hoveredItem === item.id;\r\n                        const isFocused = navState.focusedItem === item.id;\r\n\r\n                        // All items are now always enabled\r\n                        const itemClasses = [\r\n                            'modern-nav__item',\r\n                            isActive && 'modern-nav__item--active',\r\n                            isHovered && 'modern-nav__item--hovered',\r\n                            isFocused && 'modern-nav__item--focused'\r\n                        ].filter(Boolean).join(' ');\r\n\r\n                        return (\r\n                            <li key={item.id} className={itemClasses}>\r\n                                <button\r\n                                    className=\"modern-nav__link\"\r\n                                    data-nav-item={item.id}\r\n                                    onClick={() => handleItemClick(item.id)}\r\n                                    onKeyDown={(e) => handleItemKeyDown(e, item.id)}\r\n                                    onMouseEnter={() => handleItemMouseEnter(item.id)}\r\n                                    onMouseLeave={handleItemMouseLeave}\r\n                                    role=\"menuitem\"\r\n                                    aria-current={isActive ? 'page' : undefined}\r\n                                    aria-label={item.ariaLabel || `Navigate to ${item.label}`}\r\n                                    type=\"button\"\r\n                                >\r\n                                    <span className=\"modern-nav__icon\">\r\n                                        {getItemIcon(item.id)}\r\n                                    </span>\r\n                                    <span className=\"modern-nav__label\">{item.label}</span>\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n\r\n                </ul>\r\n\r\n                {/* Right side - empty for balance */}\r\n                <div className=\"modern-nav__right\">\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default ModernNavigation;","import { useEffect, useState, useMemo } from 'react';\r\nimport './Preloader.css';\r\n\r\ninterface PreloaderProps {\r\n    onComplete?: () => void;\r\n    duration?: number;\r\n    minDisplayTime?: number;\r\n    className?: string;\r\n}\r\n\r\nconst Preloader: React.FC<PreloaderProps> = ({\r\n    onComplete,\r\n    duration = 800,\r\n    minDisplayTime = 600,\r\n    className = ''\r\n}) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [isVisible, setIsVisible] = useState(true);\r\n    const [isExiting, setIsExiting] = useState(false);\r\n    const [currentPhase, setCurrentPhase] = useState<'loading' | 'complete' | 'exiting'>('loading');\r\n\r\n    // Health tracker themed loading messages\r\n    const loadingMessages = useMemo(() => [\r\n        'Initializing Health Hub...',\r\n        'Loading Wellness Modules...',\r\n        'Syncing Health Data...',\r\n        'Preparing Your Dashboard...',\r\n        'Ready to Track Your Journey!'\r\n    ], []);\r\n\r\n    const [currentMessage, setCurrentMessage] = useState(loadingMessages[0]);\r\n\r\n    useEffect(() => {\r\n        const startTime = Date.now();\r\n        let animationFrame: number;\r\n        let messageIndex = 0;\r\n\r\n        const updateProgress = () => {\r\n            const elapsed = Date.now() - startTime;\r\n            const newProgress = Math.min((elapsed / duration) * 100, 100);\r\n\r\n            setProgress(newProgress);\r\n\r\n            // Update loading message based on progress\r\n            const expectedMessageIndex = Math.floor((newProgress / 100) * (loadingMessages.length - 1));\r\n            if (expectedMessageIndex !== messageIndex && expectedMessageIndex < loadingMessages.length) {\r\n                messageIndex = expectedMessageIndex;\r\n                setCurrentMessage(loadingMessages[messageIndex]);\r\n            }\r\n\r\n            if (newProgress < 100) {\r\n                animationFrame = requestAnimationFrame(updateProgress);\r\n            } else {\r\n                setCurrentPhase('complete');\r\n                setCurrentMessage('Welcome to Your Health Journey!');\r\n\r\n                // Ensure minimum display time without hardcoded delays\r\n                const totalElapsed = Date.now() - startTime;\r\n                const remainingTime = Math.max(0, minDisplayTime - totalElapsed);\r\n\r\n                setTimeout(() => {\r\n                    setCurrentPhase('exiting');\r\n                    setIsExiting(true);\r\n                    setTimeout(() => {\r\n                        setIsVisible(false);\r\n                        onComplete?.();\r\n                    }, 300);\r\n                }, remainingTime);\r\n            }\r\n        };\r\n\r\n        animationFrame = requestAnimationFrame(updateProgress);\r\n\r\n        return () => {\r\n            if (animationFrame) {\r\n                cancelAnimationFrame(animationFrame);\r\n            }\r\n        };\r\n    }, [duration, minDisplayTime, onComplete, loadingMessages]);\r\n\r\n    const progressClasses = useMemo(() => [\r\n        'preloader',\r\n        `preloader--${currentPhase}`,\r\n        isExiting && 'preloader--exiting',\r\n        className\r\n    ].filter(Boolean).join(' '), [currentPhase, isExiting, className]);\r\n\r\n    if (!isVisible) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={progressClasses}>\r\n            {/* Modern Geometric Background */}\r\n            <div className=\"preloader__bg\">\r\n                <div className=\"preloader__grid\"></div>\r\n                <div className=\"preloader__orbs\">\r\n                    <div className=\"preloader__orb preloader__orb--1\"></div>\r\n                    <div className=\"preloader__orb preloader__orb--2\"></div>\r\n                    <div className=\"preloader__orb preloader__orb--3\"></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"preloader__content\">\r\n                {/* Health Tracker Brand Logo */}\r\n                <div className=\"preloader__brand\">\r\n                    <div className=\"preloader__logo\">\r\n                        <div className=\"preloader__logo-icon\">\r\n                            <div className=\"preloader__health-icon\">\r\n                                <div className=\"preloader__heart\">\r\n                                    <div className=\"preloader__heart-beat\"></div>\r\n                                </div>\r\n                                <div className=\"preloader__pulse-rings\">\r\n                                    <div className=\"preloader__pulse-ring preloader__pulse-ring--1\"></div>\r\n                                    <div className=\"preloader__pulse-ring preloader__pulse-ring--2\"></div>\r\n                                    <div className=\"preloader__pulse-ring preloader__pulse-ring--3\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"preloader__brand-text\">\r\n                            Health<span className=\"preloader__brand-accent\">Tracker</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Status Message */}\r\n                <div className=\"preloader__status\">\r\n                    <div className=\"preloader__message\">{currentMessage}</div>\r\n                </div>\r\n\r\n                {/* Modern Progress Indicator */}\r\n                <div className=\"preloader__progress-section\">\r\n                    <div className=\"preloader__progress-ring\">\r\n                        <svg className=\"preloader__ring-svg\" viewBox=\"0 0 120 120\">\r\n                            <circle\r\n                                className=\"preloader__ring-bg\"\r\n                                cx=\"60\"\r\n                                cy=\"60\"\r\n                                r=\"50\"\r\n                                fill=\"none\"\r\n                                strokeWidth=\"4\"\r\n                            />\r\n                            <circle\r\n                                className=\"preloader__ring-progress\"\r\n                                cx=\"60\"\r\n                                cy=\"60\"\r\n                                r=\"50\"\r\n                                fill=\"none\"\r\n                                strokeWidth=\"4\"\r\n                                style={{\r\n                                    strokeDasharray: 314,\r\n                                    strokeDashoffset: 314 - (progress * 314) / 100\r\n                                }}\r\n                            />\r\n                        </svg>\r\n                        <div className=\"preloader__percentage\">\r\n                            {Math.round(progress)}%\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Pulse Bars */}\r\n                    <div className=\"preloader__pulse-bars\">\r\n                        <div className=\"preloader__bar\"></div>\r\n                        <div className=\"preloader__bar\"></div>\r\n                        <div className=\"preloader__bar\"></div>\r\n                        <div className=\"preloader__bar\"></div>\r\n                        <div className=\"preloader__bar\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Success Animation */}\r\n            {currentPhase === 'complete' && (\r\n                <div className=\"preloader__success\">\r\n                    <div className=\"preloader__success-ring\">\r\n                        <svg viewBox=\"0 0 52 52\" className=\"preloader__success-svg\">\r\n                            <circle\r\n                                className=\"preloader__success-circle\"\r\n                                cx=\"26\"\r\n                                cy=\"26\"\r\n                                r=\"20\"\r\n                                fill=\"none\"\r\n                            />\r\n                            <path\r\n                                className=\"preloader__success-check\"\r\n                                fill=\"none\"\r\n                                d=\"M14,27 L22,35 L38,19\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","interface ContentState {\r\n    isLoaded: boolean;\r\n    currentSection: string;\r\n    lazyImages: Map<string, boolean>;\r\n    seoData: Record<string, any>;\r\n}\r\n\r\ninterface ContentConfig {\r\n    enableLazyLoading: boolean;\r\n    imageFormats: string[];\r\n    seoEnabled: boolean;\r\n}\r\n\r\ninterface ContentSubscriber {\r\n    (state: ContentState): void;\r\n}\r\n\r\nclass ContentManager {\r\n    private state: ContentState;\r\n    private config: ContentConfig;\r\n    private subscribers: Set<ContentSubscriber>;\r\n    private intersectionObserver: IntersectionObserver | null;\r\n\r\n    constructor(config: Partial<ContentConfig> = {}) {\r\n        this.config = {\r\n            enableLazyLoading: true,\r\n            imageFormats: ['webp', 'jpg', 'png'],\r\n            seoEnabled: true,\r\n            ...config\r\n        };\r\n\r\n        this.state = this.getInitialState();\r\n        this.subscribers = new Set();\r\n        this.intersectionObserver = null;\r\n        this.init();\r\n    }\r\n\r\n    private getInitialState(): ContentState {\r\n        return {\r\n            isLoaded: false,\r\n            currentSection: 'hero',\r\n            lazyImages: new Map(),\r\n            seoData: {}\r\n        };\r\n    }\r\n\r\n    private init(): void {\r\n        if (this.config.enableLazyLoading) {\r\n            this.setupLazyLoading();\r\n        }\r\n        this.setState({ isLoaded: true });\r\n    }\r\n\r\n    private setupLazyLoading(): void {\r\n        if (!('IntersectionObserver' in window)) return;\r\n\r\n        this.intersectionObserver = new IntersectionObserver(\r\n            (entries) => {\r\n                entries.forEach((entry) => {\r\n                    if (entry.isIntersecting) {\r\n                        const img = entry.target as HTMLImageElement;\r\n                        this.loadImage(img);\r\n                        this.intersectionObserver?.unobserve(img);\r\n                    }\r\n                });\r\n            },\r\n            { rootMargin: '50px' }\r\n        );\r\n    }\r\n\r\n    private loadImage(img: HTMLImageElement): void {\r\n        const src = img.dataset.src;\r\n        if (src) {\r\n            img.src = src;\r\n            img.classList.add('loaded');\r\n            this.updateImageState(img.dataset.id || src, true);\r\n        }\r\n    }\r\n\r\n    private updateImageState(id: string, loaded: boolean): void {\r\n        const newLazyImages = new Map(this.state.lazyImages);\r\n        newLazyImages.set(id, loaded);\r\n        this.setState({ lazyImages: newLazyImages });\r\n    }\r\n\r\n    public observeImage(img: HTMLImageElement): void {\r\n        if (this.intersectionObserver && img) {\r\n            this.intersectionObserver.observe(img);\r\n        }\r\n    }\r\n\r\n    public setCurrentSection(section: string): void {\r\n        if (section !== this.state.currentSection) {\r\n            this.setState({ currentSection: section });\r\n        }\r\n    }\r\n\r\n    public setSeoData(data: Record<string, any>): void {\r\n        this.setState({ seoData: { ...this.state.seoData, ...data } });\r\n    }\r\n\r\n    public getState(): ContentState {\r\n        return { ...this.state };\r\n    }\r\n\r\n    private setState(newState: Partial<ContentState>): void {\r\n        this.state = { ...this.state, ...newState };\r\n        this.notify();\r\n    }\r\n\r\n    public subscribe(callback: ContentSubscriber): () => void {\r\n        this.subscribers.add(callback);\r\n        return () => this.subscribers.delete(callback);\r\n    }\r\n\r\n    private notify(): void {\r\n        this.subscribers.forEach(callback => callback(this.state));\r\n    }\r\n\r\n    public destroy(): void {\r\n        if (this.intersectionObserver) {\r\n            this.intersectionObserver.disconnect();\r\n        }\r\n        this.subscribers.clear();\r\n    }\r\n}\r\n\r\nexport default ContentManager;","import { useState, useEffect, useCallback } from 'react';\r\nimport ContentManager from '../managers/ContentManager';\r\n\r\ninterface ContentState {\r\n    isLoaded: boolean;\r\n    currentSection: string;\r\n    lazyImages: Map<string, boolean>;\r\n    seoData: Record<string, any>;\r\n}\r\n\r\nlet contentManagerInstance: ContentManager | null = null;\r\n\r\nexport const useContentManager = () => {\r\n    const [state, setState] = useState<ContentState>({\r\n        isLoaded: false,\r\n        currentSection: 'hero',\r\n        lazyImages: new Map(),\r\n        seoData: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!contentManagerInstance) {\r\n            contentManagerInstance = new ContentManager();\r\n        }\r\n\r\n        const unsubscribe = contentManagerInstance.subscribe(setState);\r\n\r\n        // Set initial state\r\n        setState(contentManagerInstance.getState());\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    const setCurrentSection = useCallback((section: string) => {\r\n        contentManagerInstance?.setCurrentSection(section);\r\n    }, []);\r\n\r\n    const setSeoData = useCallback((data: Record<string, any>) => {\r\n        contentManagerInstance?.setSeoData(data);\r\n    }, []);\r\n\r\n    const observeImage = useCallback((img: HTMLImageElement) => {\r\n        contentManagerInstance?.observeImage(img);\r\n    }, []);\r\n\r\n    return {\r\n        ...state,\r\n        setCurrentSection,\r\n        setSeoData,\r\n        observeImage\r\n    };\r\n};","interface UserProfile {\r\n    height_cm: number;\r\n    weight_kg: number;\r\n    target_weight_kg: number;\r\n    target_duration: number;\r\n    target_duration_unit: 'days' | 'weeks' | 'months';\r\n    activity_level: 'sedentary' | 'light' | 'moderate' | 'active' | 'very_active';\r\n    age?: number;\r\n    gender?: 'male' | 'female';\r\n    orientation?: string;\r\n}\r\n\r\ninterface CalorieCalculation {\r\n    bmr: number;\r\n    tdee: number;\r\n    targetCalories: number;\r\n    weightChangePerWeek: number;\r\n    dailyCalorieDeficit: number;\r\n}\r\n\r\ninterface MacroRatios {\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n}\r\n\r\nclass CalorieCalculatorService {\r\n    private static readonly ACTIVITY_MULTIPLIERS = {\r\n        sedentary: 1.05,\r\n        light: 1.2,\r\n        moderate: 1.375,\r\n        active: 1.55,\r\n        very_active: 1.725\r\n    } as const;\r\n\r\n    private static readonly CALORIES_PER_KG = 7700;\r\n\r\n    static calculateBMR(profile: UserProfile): number {\r\n        const { height_cm, weight_kg, age = 30, gender = 'male' } = profile;\r\n\r\n        if (gender === 'male') {\r\n            return (5 * weight_kg) + (6.25 * height_cm) - (5 * age) + 5;\r\n        } else {\r\n            return (5 * weight_kg) + (6.25 * height_cm) - (5 * age) - 161;\r\n        }\r\n    }\r\n\r\n    static calculateTDEE(bmr: number, activityLevel: UserProfile['activity_level']): number {\r\n        const multiplier = this.ACTIVITY_MULTIPLIERS[activityLevel] || 1.55;\r\n        return Math.round(bmr * multiplier);\r\n    }\r\n\r\n    private static convertDurationToWeeks(duration: number, unit: UserProfile['target_duration_unit']): number {\r\n        switch (unit) {\r\n            case 'days':\r\n                return duration / 7;\r\n            case 'weeks':\r\n                return duration;\r\n            case 'months':\r\n                return duration * 4.33;\r\n            default:\r\n                return duration;\r\n        }\r\n    }\r\n\r\n    static calculateTargetCalories(profile: UserProfile): CalorieCalculation {\r\n        const bmr = this.calculateBMR(profile);\r\n        const tdee = this.calculateTDEE(bmr, profile.activity_level);\r\n\r\n        const { weight_kg, target_weight_kg, target_duration, target_duration_unit } = profile;\r\n\r\n        const weightChangeKg = target_weight_kg - weight_kg;\r\n        const durationWeeks = this.convertDurationToWeeks(target_duration, target_duration_unit);\r\n\r\n        const weightChangePerWeek = durationWeeks > 0 ? weightChangeKg / durationWeeks : 0;\r\n\r\n        const dailyCalorieDeficit = (weightChangePerWeek * this.CALORIES_PER_KG) / 7;\r\n\r\n        let targetCalories = tdee + dailyCalorieDeficit;\r\n\r\n        const minCalories = profile.gender === 'male' ? 1300 : 1100;\r\n        if (targetCalories < minCalories) {\r\n            targetCalories = minCalories;\r\n        }\r\n\r\n        return {\r\n            bmr: Math.round(bmr),\r\n            tdee,\r\n            targetCalories: Math.round(targetCalories),\r\n            weightChangePerWeek: Math.round(weightChangePerWeek * 100) / 100,\r\n            dailyCalorieDeficit: Math.round(dailyCalorieDeficit)\r\n        };\r\n    }\r\n\r\n    static getCalorieRecommendation(calculation: CalorieCalculation): {\r\n        message: string;\r\n        type: 'gain' | 'loss' | 'maintain';\r\n        weeklyGoal: string;\r\n    } {\r\n        const { weightChangePerWeek, targetCalories, tdee } = calculation;\r\n\r\n        if (weightChangePerWeek > 0) {\r\n            return {\r\n                message: `To gain ${Math.abs(weightChangePerWeek)}kg per week, aim for ${targetCalories} calories daily`,\r\n                type: 'gain',\r\n                weeklyGoal: `+${Math.abs(weightChangePerWeek)}kg per week`\r\n            };\r\n        } else if (weightChangePerWeek < 0) {\r\n            return {\r\n                message: `To lose ${Math.abs(weightChangePerWeek)}kg per week, aim for ${targetCalories} calories daily`,\r\n                type: 'loss',\r\n                weeklyGoal: `-${Math.abs(weightChangePerWeek)}kg per week`\r\n            };\r\n        } else {\r\n            return {\r\n                message: `To maintain your current weight, aim for ${tdee} calories daily`,\r\n                type: 'maintain',\r\n                weeklyGoal: 'Maintain current weight'\r\n            };\r\n        }\r\n    }\r\n\r\n    static getMacroRatios(orientation?: string): MacroRatios {\r\n        if (!orientation) {\r\n            // Default ratios if no orientation is specified\r\n            return { protein: 0.3, carbs: 0.45, fat: 0.25 };\r\n        }\r\n\r\n        switch (orientation) {\r\n            case 'energy_focused':\r\n            case 'energetic_bulking':\r\n                // Energy focused/Energetic bulking: 20% protein, 40% carbs, 40% fats\r\n                return { protein: 0.2, carbs: 0.4, fat: 0.4 };\r\n            \r\n            case 'lean_muscle_building':\r\n            case 'muscle_preservation':\r\n                // Lean muscle building/Muscle preservation: 30% protein, 35% carbs, 35% fats\r\n                return { protein: 0.3, carbs: 0.35, fat: 0.35 };\r\n            \r\n            default:\r\n                // Default ratios for unknown orientations\r\n                return { protein: 0.3, carbs: 0.45, fat: 0.25 };\r\n        }\r\n    }\r\n\r\n    static validateProfile(profile: UserProfile): { isValid: boolean; errors: string[] } {\r\n        const errors: string[] = [];\r\n\r\n        if (!profile.height_cm || profile.height_cm <= 0) {\r\n            errors.push('Height is required');\r\n        }\r\n\r\n        if (!profile.weight_kg || profile.weight_kg <= 0) {\r\n            errors.push('Current weight is required');\r\n        }\r\n\r\n        if (!profile.target_weight_kg || profile.target_weight_kg <= 0) {\r\n            errors.push('Target weight is required');\r\n        }\r\n\r\n        if (!profile.target_duration || profile.target_duration <= 0) {\r\n            errors.push('Target duration is required');\r\n        }\r\n\r\n        return {\r\n            isValid: errors.length === 0,\r\n            errors\r\n        };\r\n    }\r\n}\r\n\r\nexport default CalorieCalculatorService;\r\nexport type { UserProfile, CalorieCalculation, MacroRatios };","import { useState, useEffect, useMemo } from 'react';\r\nimport { useAuth } from './useAuth';\r\nimport SupabaseService from '../services/SupabaseService';\r\nimport CalorieCalculatorService, { CalorieCalculation, UserProfile } from '../services/CalorieCalculatorService';\r\n\r\ninterface CalorieTrackerData {\r\n    targetCalories: number;\r\n    currentCalories: number;\r\n    remainingCalories: number;\r\n    percentageConsumed: number;\r\n    calculation?: CalorieCalculation;\r\n    recommendation?: {\r\n        message: string;\r\n        type: 'gain' | 'loss' | 'maintain';\r\n        weeklyGoal: string;\r\n    };\r\n    hasProfile: boolean;\r\n    isLoading: boolean;\r\n}\r\n\r\ninterface MealData {\r\n    id: string;\r\n    name: string;\r\n    calories: number;\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n    mealType: 'breakfast' | 'lunch' | 'dinner' | 'snack';\r\n    time: string;\r\n}\r\n\r\ninterface DatabaseMeal {\r\n    id: string;\r\n    user_id: string;\r\n    meal_type: string;\r\n    meal_name: string;\r\n    date: string;\r\n    time: string;\r\n    foods: any; // JSONB field\r\n    total_calories: number;\r\n    total_protein_g: number;\r\n    total_carbs_g: number;\r\n    total_fat_g: number;\r\n    total_fiber_g?: number;\r\n    total_sugar_g?: number;\r\n    total_sodium_mg?: number;\r\n    notes?: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n}\r\n\r\nexport const useCalorieTracker = () => {\r\n    const { user } = useAuth();\r\n    const [profile, setProfile] = useState<UserProfile | null>(null);\r\n    const [todaysMeals, setTodaysMeals] = useState<MealData[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const loadProfile = async () => {\r\n        if (!user) {\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const { data } = await SupabaseService.getUserProfile(user.id);\r\n            \r\n            let additionalData = { target_weight_kg: 0, target_duration: 0, target_duration_unit: 'weeks' as const, orientation: '' };\r\n            try {\r\n                const stored = localStorage.getItem(`profile_extra_${user.id}`);\r\n                if (stored) {\r\n                    additionalData = JSON.parse(stored);\r\n                }\r\n            } catch (e) {\r\n                console.warn('Failed to load additional profile data:', e);\r\n            }\r\n\r\n            if (data && data.height_cm && data.weight_kg && additionalData.target_weight_kg && additionalData.target_duration) {\r\n                const userProfile: UserProfile = {\r\n                    height_cm: data.height_cm,\r\n                    weight_kg: data.weight_kg,\r\n                    target_weight_kg: additionalData.target_weight_kg,\r\n                    target_duration: additionalData.target_duration,\r\n                    target_duration_unit: additionalData.target_duration_unit,\r\n                    activity_level: data.activity_level || 'moderate',\r\n                    age: 30, \r\n                    gender: 'male',\r\n                    orientation: additionalData.orientation || ''\r\n                };\r\n                \r\n                setProfile(userProfile);\r\n            } else {\r\n                setProfile(null);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading profile:', error);\r\n            setProfile(null);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const loadTodaysMeals = async () => {\r\n        if (!user) {\r\n            setTodaysMeals([]);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const { data, error } = await SupabaseService.getTodaysMeals(user.id);\r\n            \r\n            if (error) {\r\n                console.error('Error loading today\\'s meals:', error);\r\n                setTodaysMeals([]);\r\n                return;\r\n            }\r\n\r\n            // Transform database meal data to match the MealData interface\r\n            const transformedMeals: MealData[] = data.map((meal: DatabaseMeal) => ({\r\n                id: meal.id,\r\n                name: meal.meal_name,\r\n                calories: meal.total_calories,\r\n                protein: meal.total_protein_g,\r\n                carbs: meal.total_carbs_g,\r\n                fat: meal.total_fat_g,\r\n                mealType: meal.meal_type as 'breakfast' | 'lunch' | 'dinner' | 'snack',\r\n                time: meal.time ? new Date(`1970-01-01T${meal.time}`).toLocaleTimeString('en-US', { \r\n                    hour: 'numeric', \r\n                    minute: '2-digit',\r\n                    hour12: true \r\n                }) : 'Not specified'\r\n            }));\r\n\r\n            setTodaysMeals(transformedMeals);\r\n        } catch (error) {\r\n            console.error('Failed to load today\\'s meals:', error);\r\n            setTodaysMeals([]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProfile();\r\n        loadTodaysMeals();\r\n    }, [user]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const calorieData: CalorieTrackerData = useMemo(() => {\r\n        if (!profile) {\r\n            return {\r\n                targetCalories: 0,\r\n                currentCalories: 0,\r\n                remainingCalories: 0,\r\n                percentageConsumed: 0,\r\n                hasProfile: false,\r\n                isLoading\r\n            };\r\n        }\r\n\r\n        const validation = CalorieCalculatorService.validateProfile(profile);\r\n        if (!validation.isValid) {\r\n            return {\r\n                targetCalories: 0,\r\n                currentCalories: 0,\r\n                remainingCalories: 0,\r\n                percentageConsumed: 0,\r\n                hasProfile: false,\r\n                isLoading\r\n            };\r\n        }\r\n\r\n        const calculation = CalorieCalculatorService.calculateTargetCalories(profile);\r\n        const recommendation = CalorieCalculatorService.getCalorieRecommendation(calculation);\r\n        \r\n        const currentCalories = todaysMeals.reduce((sum, meal) => sum + meal.calories, 0);\r\n        const remainingCalories = calculation.targetCalories - currentCalories;\r\n        const percentageConsumed = calculation.targetCalories > 0 \r\n            ? Math.round((currentCalories / calculation.targetCalories) * 100)\r\n            : 0;\r\n\r\n        return {\r\n            targetCalories: calculation.targetCalories,\r\n            currentCalories,\r\n            remainingCalories,\r\n            percentageConsumed,\r\n            calculation,\r\n            recommendation,\r\n            hasProfile: true,\r\n            isLoading\r\n        };\r\n    }, [profile, todaysMeals, isLoading]);\r\n\r\n    const refreshData = async () => {\r\n        await loadProfile();\r\n        await loadTodaysMeals();\r\n    };\r\n\r\n    return {\r\n        calorieData,\r\n        todaysMeals,\r\n        profile,\r\n        refreshData\r\n    };\r\n};","import React, { useCallback, useEffect, useRef, useState, useMemo } from 'react';\r\nimport { useContentManager } from '../../hooks/useContentManager';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { useCalorieTracker } from '../../hooks/useCalorieTracker';\r\nimport CalorieCalculatorService from '../../services/CalorieCalculatorService';\r\nimport './Hero.css';\r\n\r\ninterface HeroProps {\r\n    title?: string;\r\n    subtitle?: string;\r\n    description?: string;\r\n    primaryCtaText?: string;\r\n    secondaryCtaText?: string;\r\n    onPrimaryCtaClick?: () => void;\r\n    onSecondaryCtaClick?: () => void;\r\n    showParticles?: boolean;\r\n    showAchievements?: boolean;\r\n    autoScroll?: boolean;\r\n}\r\n\r\n\r\ninterface MousePosition {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ninterface ParticleData {\r\n    id: number;\r\n    delay: number;\r\n    duration: number;\r\n    x: number;\r\n    y: number;\r\n    size: number;\r\n}\r\n\r\nconst Hero: React.FC<HeroProps> = ({\r\n    title = \"Your Health Journey Starts Here\",\r\n    subtitle = \"Track nutrition, monitor wellness, achieve your goals\",\r\n    description = \"Take control of your health with comprehensive meal tracking, nutrition insights, and personalized wellness monitoring.\",\r\n    primaryCtaText = \"Sign In to Get Started\",\r\n    secondaryCtaText = \"\",\r\n    onPrimaryCtaClick,\r\n    onSecondaryCtaClick,\r\n    showParticles = false,\r\n    showAchievements = false,\r\n    autoScroll = false\r\n}) => {\r\n    // Refs\r\n    const heroRef = useRef<HTMLElement>(null);\r\n    const contentRef = useRef<HTMLDivElement>(null);\r\n    const particleSystemRef = useRef<HTMLDivElement>(null);\r\n    const animationFrameRef = useRef<number>();\r\n\r\n    // State\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [mousePosition, setMousePosition] = useState<MousePosition>({ x: 0, y: 0 });\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [reducedMotion, setReducedMotion] = useState(false);\r\n\r\n    // Hooks\r\n    const { setCurrentSection } = useContentManager();\r\n    const { isAuthenticated, user } = useAuth();\r\n    const { calorieData, todaysMeals, profile } = useCalorieTracker();\r\n\r\n    // Calculate nutrition summary from real data\r\n    const nutritionSummary = useMemo(() => {\r\n        const totals = todaysMeals.reduce(\r\n            (acc, meal) => ({\r\n                calories: acc.calories + meal.calories,\r\n                protein: acc.protein + meal.protein,\r\n                carbs: acc.carbs + meal.carbs,\r\n                fat: acc.fat + meal.fat\r\n            }),\r\n            { calories: 0, protein: 0, carbs: 0, fat: 0 }\r\n        );\r\n        \r\n        // Get macro ratios based on user's orientation\r\n        const macroRatios = CalorieCalculatorService.getMacroRatios(profile?.orientation);\r\n        \r\n        return {\r\n            ...totals,\r\n            goalCalories: calorieData.targetCalories,\r\n            goalProtein: Math.round(calorieData.targetCalories * macroRatios.protein / 4), // protein has 4 calories per gram\r\n            goalCarbs: Math.round(calorieData.targetCalories * macroRatios.carbs / 4), // carbs has 4 calories per gram\r\n            goalFat: Math.round(calorieData.targetCalories * macroRatios.fat / 9) // fat has 9 calories per gram\r\n        };\r\n    }, [todaysMeals, calorieData.targetCalories, profile?.orientation]);\r\n\r\n    // Generate particles data\r\n    const particlesData: ParticleData[] = useMemo(() => {\r\n        if (!showParticles) return [];\r\n\r\n        return Array.from({ length: 30 }, (_, i) => ({\r\n            id: i,\r\n            delay: Math.random() * 4,\r\n            duration: 4 + Math.random() * 3,\r\n            x: Math.random() * 100,\r\n            y: Math.random() * 100,\r\n            size: 2 + Math.random() * 3\r\n        }));\r\n    }, [showParticles]);\r\n\r\n    // Check for reduced motion preference\r\n    useEffect(() => {\r\n        const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n        setReducedMotion(mediaQuery.matches);\r\n\r\n        const handleChange = (e: MediaQueryListEvent) => {\r\n            setReducedMotion(e.matches);\r\n        };\r\n\r\n        mediaQuery.addEventListener('change', handleChange);\r\n        return () => mediaQuery.removeEventListener('change', handleChange);\r\n    }, []);\r\n\r\n    // Intersection Observer for visibility\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                if (entry.isIntersecting) {\r\n                    setCurrentSection('hero');\r\n                    setIsVisible(true);\r\n\r\n                    // Add animation classes with reduced motion support\r\n                    if (!reducedMotion) {\r\n                        heroRef.current?.classList.add('hero--animate-in');\r\n                        contentRef.current?.classList.add('hero__content--stagger');\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                threshold: 0.3,\r\n                rootMargin: '0px 0px -10% 0px'\r\n            }\r\n        );\r\n\r\n        if (heroRef.current) {\r\n            observer.observe(heroRef.current);\r\n        }\r\n\r\n        return () => observer.disconnect();\r\n    }, [setCurrentSection, reducedMotion]);\r\n\r\n    // Mouse move handler with throttling for performance\r\n    const handleMouseMove = useCallback((e: MouseEvent) => {\r\n        if (!heroRef.current || reducedMotion) return;\r\n\r\n        const rect = heroRef.current.getBoundingClientRect();\r\n        const newPosition = {\r\n            x: ((e.clientX - rect.left) / rect.width) * 100,\r\n            y: ((e.clientY - rect.top) / rect.height) * 100\r\n        };\r\n\r\n        setMousePosition(newPosition);\r\n    }, [reducedMotion]);\r\n\r\n    // Throttled mouse move effect\r\n    useEffect(() => {\r\n        if (!heroRef.current || reducedMotion) return;\r\n\r\n        let timeoutId: NodeJS.Timeout;\r\n\r\n        const throttledMouseMove = (e: MouseEvent) => {\r\n            clearTimeout(timeoutId);\r\n            timeoutId = setTimeout(() => handleMouseMove(e), 16); // ~60fps\r\n        };\r\n\r\n        const heroElement = heroRef.current;\r\n        heroElement.addEventListener('mousemove', throttledMouseMove);\r\n        heroElement.addEventListener('mouseenter', () => setIsHovered(true));\r\n        heroElement.addEventListener('mouseleave', () => setIsHovered(false));\r\n\r\n        return () => {\r\n            heroElement.removeEventListener('mousemove', throttledMouseMove);\r\n            heroElement.removeEventListener('mouseenter', () => setIsHovered(true));\r\n            heroElement.removeEventListener('mouseleave', () => setIsHovered(false));\r\n            clearTimeout(timeoutId);\r\n        };\r\n    }, [handleMouseMove, reducedMotion]);\r\n\r\n    // CTA Click Handlers\r\n    const handlePrimaryCtaClick = useCallback((): void => {\r\n        if (onPrimaryCtaClick) {\r\n            onPrimaryCtaClick();\r\n        } else {\r\n            const contactSection = document.getElementById('contact');\r\n            contactSection?.scrollIntoView({\r\n                behavior: reducedMotion ? 'auto' : 'smooth',\r\n                block: 'start'\r\n            });\r\n        }\r\n    }, [onPrimaryCtaClick, reducedMotion]);\r\n\r\n    const handleSecondaryCtaClick = useCallback((): void => {\r\n        if (onSecondaryCtaClick) {\r\n            onSecondaryCtaClick();\r\n        } else {\r\n            const projectsSection = document.getElementById('projects');\r\n            projectsSection?.scrollIntoView({\r\n                behavior: reducedMotion ? 'auto' : 'smooth',\r\n                block: 'start'\r\n            });\r\n        }\r\n    }, [onSecondaryCtaClick, reducedMotion]);\r\n\r\n    // Keyboard navigation for accessibility\r\n    const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n            e.preventDefault();\r\n\r\n            if (autoScroll) {\r\n                const aboutSection = document.getElementById('about');\r\n                aboutSection?.scrollIntoView({\r\n                    behavior: reducedMotion ? 'auto' : 'smooth',\r\n                    block: 'start'\r\n                });\r\n            }\r\n        }\r\n    }, [autoScroll, reducedMotion]);\r\n\r\n    // Auto-scroll to next section\r\n    const handleScrollIndicatorClick = useCallback(() => {\r\n        const aboutSection = document.getElementById('about');\r\n        aboutSection?.scrollIntoView({\r\n            behavior: reducedMotion ? 'auto' : 'smooth',\r\n            block: 'start'\r\n        });\r\n    }, [reducedMotion]);\r\n\r\n\r\n    return (\r\n        <section\r\n            ref={heroRef}\r\n            id=\"hero\"\r\n            className=\"hero\"\r\n            aria-label=\"Hero section - Health Tracker\"\r\n            role=\"banner\"\r\n        >\r\n            <div className=\"hero__container\">\r\n                <div className=\"hero__content-wrapper\" ref={contentRef}>\r\n                    {!isAuthenticated ? (\r\n                        // Not signed in - Show simple sign in interface\r\n                        <div className=\"hero__auth-content\">\r\n                            <div className=\"hero__auth-visual\">\r\n                                <div className=\"hero__health-icon\">🍎</div>\r\n                            </div>\r\n\r\n                            <div className=\"hero__auth-text\">\r\n                                <h1 className=\"hero__title\">{title}</h1>\r\n                                <h2 className=\"hero__subtitle\">{subtitle}</h2>\r\n                                <p className=\"hero__description\">{description}</p>\r\n\r\n                                <div className=\"hero__cta-group\">\r\n                                    <button\r\n                                        className=\"hero__cta hero__cta--primary\"\r\n                                        onClick={handlePrimaryCtaClick}\r\n                                        aria-label=\"Sign in to start tracking your health\"\r\n                                        type=\"button\"\r\n                                    >\r\n                                        <span className=\"hero__cta-icon\">🔑</span>\r\n                                        <span className=\"hero__cta-text\">{primaryCtaText}</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        // Signed in - Show personalized dashboard with meals visualization\r\n                        <div className=\"hero__dashboard-content\">\r\n                            <div className=\"hero__welcome\">\r\n                                <p className=\"hero__dashboard-greeting\">\r\n                                    Welcome back, {user?.user_metadata?.full_name || user?.email?.split('@')[0] || 'there'}! 👋\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className=\"hero__nutrition-dashboard\">\r\n                                {/* Main Calorie Progress Section */}\r\n                                <div className=\"hero__calorie-progress-section\">\r\n                                    <div className=\"hero__calorie-status\">\r\n                                        <div className=\"hero__calorie-current\">\r\n                                            <span className=\"hero__calorie-number\">{nutritionSummary.calories}</span>\r\n                                            <span className=\"hero__calorie-unit\">cal</span>\r\n                                        </div>\r\n                                        <div className=\"hero__calorie-divider\">of</div>\r\n                                        <div className=\"hero__calorie-target\">\r\n                                            <span className=\"hero__calorie-number\">{nutritionSummary.goalCalories}</span>\r\n                                            <span className=\"hero__calorie-unit\">cal</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    {/* Enhanced Progress Bar */}\r\n                                    <div className=\"hero__progress-container\">\r\n                                        <div className=\"hero__progress-bar\">\r\n                                            <div \r\n                                                className={`hero__progress-fill ${\r\n                                                    nutritionSummary.calories > nutritionSummary.goalCalories ? 'hero__progress-fill--over' : ''\r\n                                                }`}\r\n                                                style={{ \r\n                                                    width: `${Math.min((nutritionSummary.calories / nutritionSummary.goalCalories) * 100, 100)}%` \r\n                                                }}\r\n                                            ></div>\r\n                                            {nutritionSummary.calories > nutritionSummary.goalCalories && (\r\n                                                <div \r\n                                                    className=\"hero__progress-overflow\"\r\n                                                    style={{ \r\n                                                        width: `${Math.min(((nutritionSummary.calories - nutritionSummary.goalCalories) / nutritionSummary.goalCalories) * 100, 50)}%` \r\n                                                    }}\r\n                                                ></div>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"hero__progress-labels\">\r\n                                            <span className=\"hero__progress-label hero__progress-label--start\">0</span>\r\n                                            <span className=\"hero__progress-label hero__progress-label--target\">Target</span>\r\n                                            {nutritionSummary.calories > nutritionSummary.goalCalories && (\r\n                                                <span className=\"hero__progress-label hero__progress-label--over\">+{nutritionSummary.calories - nutritionSummary.goalCalories}</span>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    {/* Calorie Status Message */}\r\n                                    <div className={`hero__calorie-status-message ${\r\n                                        nutritionSummary.calories < nutritionSummary.goalCalories * 0.8 ? 'hero__calorie-status--low' :\r\n                                        nutritionSummary.calories > nutritionSummary.goalCalories * 1.1 ? 'hero__calorie-status--high' :\r\n                                        'hero__calorie-status--good'\r\n                                    }`}>\r\n                                        {nutritionSummary.calories < nutritionSummary.goalCalories * 0.8 && (\r\n                                            <>\r\n                                                <span className=\"hero__status-icon\">🟡</span>\r\n                                                <span>Need {nutritionSummary.goalCalories - nutritionSummary.calories} more calories</span>\r\n                                            </>\r\n                                        )}\r\n                                        {nutritionSummary.calories > nutritionSummary.goalCalories * 1.1 && (\r\n                                            <>\r\n                                                <span className=\"hero__status-icon\">🔴</span>\r\n                                                <span>{nutritionSummary.calories - nutritionSummary.goalCalories} calories over target</span>\r\n                                            </>\r\n                                        )}\r\n                                        {nutritionSummary.calories >= nutritionSummary.goalCalories * 0.8 && \r\n                                         nutritionSummary.calories <= nutritionSummary.goalCalories * 1.1 && (\r\n                                            <>\r\n                                                <span className=\"hero__status-icon\">🟢</span>\r\n                                                <span>On track with your calorie goals!</span>\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Smart Macro Cards */}\r\n                                <div className=\"hero__macro-cards\">\r\n                                    <div className=\"hero__macro-card hero__macro-card--protein\">\r\n                                        <div className=\"hero__macro-header\">\r\n                                            <span className=\"hero__macro-icon\">💪</span>\r\n                                            <span className=\"hero__macro-name\">Protein</span>\r\n                                        </div>\r\n                                        <div className=\"hero__macro-values\">\r\n                                            <span className=\"hero__macro-current\">{nutritionSummary.protein}g</span>\r\n                                            <span className=\"hero__macro-target\">/ {nutritionSummary.goalProtein}g</span>\r\n                                        </div>\r\n                                        <div className=\"hero__macro-progress\">\r\n                                            <div \r\n                                                className=\"hero__macro-progress-bar hero__macro-progress-bar--protein\"\r\n                                                style={{ width: `${Math.min((nutritionSummary.protein / nutritionSummary.goalProtein) * 100, 100)}%` }}\r\n                                            ></div>\r\n                                        </div>\r\n                                        <div className=\"hero__macro-percentage\">\r\n                                            {Math.round((nutritionSummary.protein / nutritionSummary.goalProtein) * 100)}%\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"hero__macro-card hero__macro-card--carbs\">\r\n                                        <div className=\"hero__macro-header\">\r\n                                            <span className=\"hero__macro-icon\">🍞</span>\r\n                                            <span className=\"hero__macro-name\">Carbs</span>\r\n                                        </div>\r\n                                        <div className=\"hero__macro-values\">\r\n                                            <span className=\"hero__macro-current\">{nutritionSummary.carbs}g</span>\r\n                                            <span className=\"hero__macro-target\">/ {nutritionSummary.goalCarbs}g</span>\r\n                                        </div>\r\n                                        <div className=\"hero__macro-progress\">\r\n                                            <div \r\n                                                className=\"hero__macro-progress-bar hero__macro-progress-bar--carbs\"\r\n                                                style={{ width: `${Math.min((nutritionSummary.carbs / nutritionSummary.goalCarbs) * 100, 100)}%` }}\r\n                                            ></div>\r\n                                        </div>\r\n                                        <div className=\"hero__macro-percentage\">\r\n                                            {Math.round((nutritionSummary.carbs / nutritionSummary.goalCarbs) * 100)}%\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"hero__macro-card hero__macro-card--fat\">\r\n                                        <div className=\"hero__macro-header\">\r\n                                            <span className=\"hero__macro-icon\">🥑</span>\r\n                                            <span className=\"hero__macro-name\">Fat</span>\r\n                                        </div>\r\n                                        <div className=\"hero__macro-values\">\r\n                                            <span className=\"hero__macro-current\">{nutritionSummary.fat}g</span>\r\n                                            <span className=\"hero__macro-target\">/ {nutritionSummary.goalFat}g</span>\r\n                                        </div>\r\n                                        <div className=\"hero__macro-progress\">\r\n                                            <div \r\n                                                className=\"hero__macro-progress-bar hero__macro-progress-bar--fat\"\r\n                                                style={{ width: `${Math.min((nutritionSummary.fat / nutritionSummary.goalFat) * 100, 100)}%` }}\r\n                                            ></div>\r\n                                        </div>\r\n                                        <div className=\"hero__macro-percentage\">\r\n                                            {Math.round((nutritionSummary.fat / nutritionSummary.goalFat) * 100)}%\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {/* Goal Recommendation */}\r\n                                {calorieData.recommendation && (\r\n                                    <div className={`hero__goal-recommendation hero__goal-recommendation--${calorieData.recommendation.type}`}>\r\n                                        <span className=\"hero__recommendation-icon\">\r\n                                            {calorieData.recommendation.type === 'loss' && '📉'}\r\n                                            {calorieData.recommendation.type === 'gain' && '📈'}\r\n                                            {calorieData.recommendation.type === 'maintain' && '⚖️'}\r\n                                        </span>\r\n                                        <span className=\"hero__recommendation-text\">\r\n                                            {calorieData.recommendation.message}\r\n                                        </span>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Today's Meals List */}\r\n                                <div className=\"hero__meals-list\">\r\n                                    <h3 className=\"hero__meals-title\">Today's Meals</h3>\r\n                                    {todaysMeals.length > 0 ? (\r\n                                        <div className=\"hero__meals-grid\">\r\n                                            {todaysMeals.map((meal, index) => (\r\n                                                <div key={meal.id} className=\"hero__meal-card hero__meal-card--compact\">\r\n                                                    <div className=\"hero__meal-header\">\r\n                                                        <span className=\"hero__meal-type\">\r\n                                                            {meal.mealType === 'breakfast' && '🌅'}\r\n                                                            {meal.mealType === 'lunch' && '☀️'}\r\n                                                            {meal.mealType === 'dinner' && '🌙'}\r\n                                                            {meal.mealType === 'snack' && '🍿'}\r\n                                                            {meal.mealType}\r\n                                                        </span>\r\n                                                        <span className=\"hero__meal-calories\">{meal.calories} cal</span>\r\n                                                    </div>\r\n                                                    <div className=\"hero__meal-name\">{meal.name}</div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"hero__no-meals\">\r\n                                            <p>No meals tracked today yet</p>\r\n                                            <button\r\n                                                className=\"hero__add-meal-btn\"\r\n                                                onClick={() => onPrimaryCtaClick?.()}\r\n                                            >\r\n                                                Add Your First Meal\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {calorieData.hasProfile ? (\r\n                                <div className=\"hero__calorie-tracking\">\r\n                                    {/* Innovative Metabolic Dashboard */}\r\n                                    <div className=\"hero__metabolic-dashboard\">\r\n                                        <div className=\"hero__metabolic-header\">\r\n                                            <h4 className=\"hero__metabolic-title\">📊 Your Metabolic Profile</h4>\r\n                                            <p className=\"hero__metabolic-subtitle\">Understanding your body's energy needs</p>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"hero__metabolic-visual\">\r\n                                            {/* Interactive Energy Flow */}\r\n                                            <div className=\"hero__energy-flow\">\r\n                                                <div className=\"hero__energy-node hero__energy-node--bmr\">\r\n                                                    <div className=\"hero__energy-pulse\"></div>\r\n                                                    <div className=\"hero__energy-icon\">🔥</div>\r\n                                                    <div className=\"hero__energy-label\">BMR</div>\r\n                                                    <div className=\"hero__energy-value\">{Math.round(calorieData.calculation?.bmr || 0)}</div>\r\n                                                </div>\r\n                                                \r\n                                                <div className=\"hero__energy-arrow\">\r\n                                                    <div className=\"hero__energy-line\"></div>\r\n                                                    <div className=\"hero__energy-tip\"></div>\r\n                                                    <span className=\"hero__energy-multiplier\">x {(calorieData.calculation?.tdee && calorieData.calculation?.bmr ? (calorieData.calculation.tdee / calorieData.calculation.bmr).toFixed(2) : '1.0')}</span>\r\n                                                </div>\r\n                                                \r\n                                                <div className=\"hero__energy-node hero__energy-node--tdee\">\r\n                                                    <div className=\"hero__energy-pulse hero__energy-pulse--delayed\"></div>\r\n                                                    <div className=\"hero__energy-icon\">⚡</div>\r\n                                                    <div className=\"hero__energy-label\">TDEE</div>\r\n                                                    <div className=\"hero__energy-value\">{Math.round(calorieData.calculation?.tdee || 0)}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            {/* Metabolic Insights */}\r\n                                            <div className=\"hero__metabolic-insights\">\r\n                                                <div className=\"hero__insight-item\">\r\n                                                    <span className=\"hero__insight-icon\">🛌</span>\r\n                                                    <span className=\"hero__insight-text\">At rest: {Math.round(calorieData.calculation?.bmr || 0)} cal/day</span>\r\n                                                </div>\r\n                                                <div className=\"hero__insight-item\">\r\n                                                    <span className=\"hero__insight-icon\">🏃‍♂️</span>\r\n                                                    <span className=\"hero__insight-text\">Active: +{Math.round((calorieData.calculation?.tdee || 0) - (calorieData.calculation?.bmr || 0))} cal/day</span>\r\n                                                </div>\r\n                                                <div className=\"hero__insight-item\">\r\n                                                    <span className=\"hero__insight-icon\">🎯</span>\r\n                                                    <span className=\"hero__insight-text\">Target: {calorieData.targetCalories} cal/day</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"hero__calorie-overview\">\r\n                                        <div className=\"hero__calorie-card hero__calorie-card--target\">\r\n                                            <div className=\"hero__calorie-label\">Target Calories</div>\r\n                                            <div className=\"hero__calorie-value\">{calorieData.targetCalories.toLocaleString()}</div>\r\n                                            <div className=\"hero__calorie-subtext\">\r\n                                                {calorieData.recommendation?.weeklyGoal}\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"hero__calorie-card hero__calorie-card--current\">\r\n                                            <div className=\"hero__calorie-label\">Current Intake</div>\r\n                                            <div className=\"hero__calorie-value\">{calorieData.currentCalories.toLocaleString()}</div>\r\n                                            <div className=\"hero__calorie-subtext\">\r\n                                                {calorieData.remainingCalories > 0 \r\n                                                    ? `${calorieData.remainingCalories} remaining`\r\n                                                    : `${Math.abs(calorieData.remainingCalories)} over`\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"hero__calorie-card hero__calorie-card--progress\">\r\n                                            <div className=\"hero__calorie-label\">Progress</div>\r\n                                            <div className=\"hero__calorie-value\">{calorieData.percentageConsumed}%</div>\r\n                                            <div className=\"hero__calorie-progress-bar\">\r\n                                                <div \r\n                                                    className=\"hero__calorie-progress-fill\"\r\n                                                    style={{ width: `${Math.min(calorieData.percentageConsumed, 100)}%` }}\r\n                                                ></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"hero__setup-profile\">\r\n                                    <div className=\"hero__setup-icon\">⚙️</div>\r\n                                    <p className=\"hero__setup-message\">\r\n                                        Complete your profile to see personalized calorie targets\r\n                                    </p>\r\n                                    <button\r\n                                        className=\"hero__setup-btn\"\r\n                                        onClick={() => window.location.href = '/profile'}\r\n                                    >\r\n                                        Setup Profile\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Hero;","export interface UserProfile {\r\n    age: number;\r\n    gender: 'male' | 'female';\r\n    weight: number; // kg\r\n    height: number; // cm\r\n    activityLevel: 'sedentary' | 'lightly_active' | 'moderately_active' | 'very_active' | 'extremely_active';\r\n    goal: 'lose_weight' | 'maintain_weight' | 'gain_weight';\r\n}\r\n\r\nexport interface NutritionGoals {\r\n    goalCalories: number;\r\n    goalProtein: number;\r\n    goalCarbs: number;\r\n    goalFat: number;\r\n}\r\n\r\nconst ACTIVITY_MULTIPLIERS = {\r\n    sedentary: 1.2,\r\n    lightly_active: 1.375,\r\n    moderately_active: 1.55,\r\n    very_active: 1.725,\r\n    extremely_active: 1.9\r\n} as const;\r\n\r\nconst GOAL_MULTIPLIERS = {\r\n    lose_weight: 0.8,\r\n    maintain_weight: 1.0,\r\n    gain_weight: 1.2\r\n} as const;\r\n\r\nexport const calculateBMR = (profile: Pick<UserProfile, 'age' | 'gender' | 'weight' | 'height'>): number => {\r\n    const { age, gender, weight, height } = profile;\r\n    \r\n    if (gender === 'male') {\r\n        return 88.362 + (13.397 * weight) + (4.799 * height) - (5.677 * age);\r\n    } else {\r\n        return 447.593 + (9.247 * weight) + (3.098 * height) - (4.330 * age);\r\n    }\r\n};\r\n\r\nexport const calculateTDEE = (profile: UserProfile): number => {\r\n    const bmr = calculateBMR(profile);\r\n    return bmr * ACTIVITY_MULTIPLIERS[profile.activityLevel];\r\n};\r\n\r\nexport const calculateNutritionGoals = (profile: UserProfile): NutritionGoals => {\r\n    const tdee = calculateTDEE(profile);\r\n    const goalCalories = Math.round(tdee * GOAL_MULTIPLIERS[profile.goal]);\r\n    \r\n    const proteinCaloriesPerKg = profile.goal === 'gain_weight' ? 2.2 : 1.6;\r\n    const goalProtein = Math.round(profile.weight * proteinCaloriesPerKg);\r\n    \r\n    const fatPercentage = 0.25;\r\n    const goalFat = Math.round((goalCalories * fatPercentage) / 9);\r\n    \r\n    const proteinCalories = goalProtein * 4;\r\n    const fatCalories = goalFat * 9;\r\n    const remainingCalories = goalCalories - proteinCalories - fatCalories;\r\n    const goalCarbs = Math.round(remainingCalories / 4);\r\n    \r\n    return {\r\n        goalCalories,\r\n        goalProtein,\r\n        goalCarbs,\r\n        goalFat\r\n    };\r\n};\r\n\r\nexport const getDefaultUserProfile = (): UserProfile => ({\r\n    age: 30,\r\n    gender: 'male',\r\n    weight: 70,\r\n    height: 175,\r\n    activityLevel: 'moderately_active',\r\n    goal: 'maintain_weight'\r\n});\r\n\r\nexport const getProgressPercentage = (current: number, goal: number): number => {\r\n    return Math.min((current / goal) * 100, 100);\r\n};\r\n\r\nexport const calculateMacroRatio = (macro: number, totalCalories: number): number => {\r\n    const macroCalories = macro * (macro === totalCalories ? 1 : 4);\r\n    return totalCalories > 0 ? Math.round((macroCalories / totalCalories) * 100) : 0;\r\n};\r\n\r\nexport const calculateAverageCaloriesPerMeal = (totalCalories: number, mealCount: number): number => {\r\n    return mealCount > 0 ? Math.round(totalCalories / mealCount) : 0;\r\n};\r\n\r\nexport const calculateCaloriesFromMacros = (protein: number, carbs: number, fat: number, sugar: number = 0): number => {\r\n    const proteinCalories = protein * 4;\r\n    const carbCalories = carbs * 4;\r\n    const fatCalories = fat * 9;\r\n    const sugarCalories = sugar * 4;\r\n    return Math.round(proteinCalories + carbCalories + fatCalories + sugarCalories);\r\n};","import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useContentManager } from '../hooks/useContentManager';\r\nimport { useCalorieTracker } from '../hooks/useCalorieTracker';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport SupabaseService from '../services/SupabaseService';\r\nimport { calculateCaloriesFromMacros } from '../utils/nutritionCalculations';\r\nimport './AddMeals.css';\r\n\r\ninterface MealEntry {\r\n    id: string;\r\n    name: string;\r\n    calories: number;\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n    mealType: 'breakfast' | 'lunch' | 'dinner' | 'snack';\r\n    time: string;\r\n}\r\n\r\ninterface NutritionSummary {\r\n    totalCalories: number;\r\n    totalProtein: number;\r\n    totalCarbs: number;\r\n    totalFat: number;\r\n    goalCalories: number;\r\n    goalProtein: number;\r\n    goalCarbs: number;\r\n    goalFat: number;\r\n}\r\n\r\ninterface QuickAddFood {\r\n    name: string;\r\n    calories: number;\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n}\r\n\r\ninterface SearchResult {\r\n    id: string;\r\n    name: string;\r\n    calories_per_100g: number;\r\n    protein_g: number;\r\n    carbohydrates_g: number;\r\n    fats_g: number;\r\n    fiber_g?: number;\r\n    free_sugar_g?: number;\r\n    sodium_mg?: number;\r\n    source: 'foods' | 'custom_meals';\r\n}\r\n\r\nconst AddMeals: React.FC = () => {\r\n    const pageRef = useRef<HTMLElement>(null);\r\n    const { setCurrentSection } = useContentManager();\r\n    const { todaysMeals, calorieData, refreshData } = useCalorieTracker();\r\n    const { user } = useAuth();\r\n\r\n    // State management\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [selectedMealType, setSelectedMealType] = useState<MealEntry['mealType']>('breakfast');\r\n    const [showQuickAdd, setShowQuickAdd] = useState(false);\r\n    const [showCustomEntry, setShowCustomEntry] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [submitMessage, setSubmitMessage] = useState<{ text: string; type: 'success' | 'error' | 'info' } | null>(null);\r\n\r\n    // Autocomplete search state\r\n    const [autocompleteQuery, setAutocompleteQuery] = useState('');\r\n    const [searchResults, setSearchResults] = useState<SearchResult[]>([]);\r\n    const [showAutocomplete, setShowAutocomplete] = useState(false);\r\n    const [selectedMealTypeForSearch, setSelectedMealTypeForSearch] = useState<MealEntry['mealType']>('breakfast');\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const autocompleteRef = useRef<HTMLDivElement>(null);\r\n\r\n    // Custom entry form state\r\n    const [customMealForm, setCustomMealForm] = useState({\r\n        mealName: '',\r\n        mealType: 'breakfast' as MealEntry['mealType'],\r\n        calories: '',\r\n        protein: '',\r\n        carbs: '',\r\n        fat: '',\r\n        fiber: '',\r\n        sugar: '',\r\n        sodium: '',\r\n        notes: '',\r\n        time: '',\r\n        saveMeal: false\r\n    });\r\n\r\n    // Nutrition summary derived from calorieData\r\n    const nutritionSummary: NutritionSummary = {\r\n        totalCalories: calorieData.currentCalories,\r\n        totalProtein: todaysMeals.reduce((sum, meal) => sum + meal.protein, 0),\r\n        totalCarbs: todaysMeals.reduce((sum, meal) => sum + meal.carbs, 0),\r\n        totalFat: todaysMeals.reduce((sum, meal) => sum + meal.fat, 0),\r\n        goalCalories: calorieData.targetCalories,\r\n        goalProtein: Math.round(calorieData.targetCalories * 0.3 / 4), // 30% of calories from protein\r\n        goalCarbs: Math.round(calorieData.targetCalories * 0.45 / 4), // 45% of calories from carbs\r\n        goalFat: Math.round(calorieData.targetCalories * 0.25 / 9)    // 25% of calories from fat\r\n    };\r\n\r\n    // Quick add foods for demo\r\n    const quickAddFoods: QuickAddFood[] = [\r\n        { name: 'Banana', calories: 105, protein: 1.3, carbs: 27, fat: 0.4 },\r\n        { name: 'Chicken Breast (100g)', calories: 165, protein: 31, carbs: 0, fat: 3.6 },\r\n        { name: 'Brown Rice (1 cup)', calories: 216, protein: 5, carbs: 45, fat: 1.8 },\r\n        { name: 'Greek Yogurt', calories: 100, protein: 17, carbs: 6, fat: 0 },\r\n        { name: 'Almonds (28g)', calories: 164, protein: 6, carbs: 6, fat: 14 },\r\n        { name: 'Avocado (half)', calories: 160, protein: 2, carbs: 8.5, fat: 15 },\r\n        { name: 'Oatmeal (1 cup)', calories: 154, protein: 6, carbs: 28, fat: 3 },\r\n        { name: 'Apple', calories: 95, protein: 0.5, carbs: 25, fat: 0.3 }\r\n    ];\r\n\r\n    // Set current section on mount\r\n    useEffect(() => {\r\n        setCurrentSection('add-meals');\r\n    }, [setCurrentSection]);\r\n\r\n    // Debounced search function\r\n    const debouncedSearch = useCallback(\r\n        async (query: string) => {\r\n            if (!query.trim() || !user) {\r\n                setSearchResults([]);\r\n                setShowAutocomplete(false);\r\n                return;\r\n            }\r\n\r\n            setIsSearching(true);\r\n            try {\r\n                const { data, error } = await SupabaseService.searchFoodsAndCustomMeals(user.id, query.trim(), 5);\r\n                \r\n                if (error) {\r\n                    console.error('Search error:', error);\r\n                    setSearchResults([]);\r\n                } else {\r\n                    setSearchResults(data);\r\n                    setShowAutocomplete(data.length > 0);\r\n                }\r\n            } catch (error) {\r\n                console.error('Search failed:', error);\r\n                setSearchResults([]);\r\n            } finally {\r\n                setIsSearching(false);\r\n            }\r\n        },\r\n        [user]\r\n    );\r\n\r\n    // Debounce effect for search\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (autocompleteQuery.length >= 2) {\r\n                debouncedSearch(autocompleteQuery);\r\n            } else {\r\n                setSearchResults([]);\r\n                setShowAutocomplete(false);\r\n            }\r\n        }, 300);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [autocompleteQuery, debouncedSearch]);\r\n\r\n    // Handle click outside autocomplete\r\n    useEffect(() => {\r\n        const handleClickOutside = (event: MouseEvent) => {\r\n            if (autocompleteRef.current && !autocompleteRef.current.contains(event.target as Node)) {\r\n                setShowAutocomplete(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    // Auto-calculate calories when macronutrients change\r\n    useEffect(() => {\r\n        const protein = parseFloat(customMealForm.protein) || 0;\r\n        const carbs = parseFloat(customMealForm.carbs) || 0;\r\n        const fat = parseFloat(customMealForm.fat) || 0;\r\n        const sugar = parseFloat(customMealForm.sugar) || 0;\r\n\r\n        // Only auto-calculate if at least one macro has a value and calories field is empty or was auto-calculated\r\n        if ((protein > 0 || carbs > 0 || fat > 0 || sugar > 0)) {\r\n            const calculatedCalories = calculateCaloriesFromMacros(protein, carbs, fat, sugar);\r\n            setCustomMealForm(prev => ({\r\n                ...prev, \r\n                calories: calculatedCalories.toString()\r\n            }));\r\n        }\r\n    }, [customMealForm.protein, customMealForm.carbs, customMealForm.fat, customMealForm.sugar]);\r\n\r\n\r\n    // Add meal function - TODO: Implement actual database insertion\r\n    const addMeal = async (food: QuickAddFood) => {\r\n        // TODO: Add meal to database via SupabaseService\r\n        console.log('Adding meal to database:', {\r\n            name: food.name,\r\n            calories: food.calories,\r\n            protein: food.protein,\r\n            carbs: food.carbs,\r\n            fat: food.fat,\r\n            mealType: selectedMealType\r\n        });\r\n        \r\n        // Refresh data after adding\r\n        await refreshData();\r\n        setShowQuickAdd(false);\r\n    };\r\n\r\n    // Add meal from search result\r\n    const addMealFromSearch = async (searchResult: SearchResult) => {\r\n        if (!user) return;\r\n\r\n        try {\r\n            const currentDate = new Date();\r\n            const dateStr = currentDate.toISOString().split('T')[0];\r\n            const timeStr = currentDate.toTimeString().split(' ')[0].substring(0, 5);\r\n\r\n            // Convert from per 100g to actual serving (assuming 100g serving for now)\r\n            const calories = Math.round(searchResult.calories_per_100g);\r\n            const protein = searchResult.protein_g;\r\n            const carbs = searchResult.carbohydrates_g;\r\n            const fat = searchResult.fats_g;\r\n            const fiber = searchResult.fiber_g || 0;\r\n            const sugar = searchResult.free_sugar_g || 0;\r\n            const sodium = searchResult.sodium_mg || 0;\r\n\r\n            const mealData = {\r\n                user_id: user.id,\r\n                meal_type: selectedMealTypeForSearch,\r\n                meal_name: searchResult.name,\r\n                date: dateStr,\r\n                time: timeStr,\r\n                foods: {\r\n                    [searchResult.source]: {\r\n                        id: searchResult.id,\r\n                        name: searchResult.name,\r\n                        calories: calories,\r\n                        protein: protein,\r\n                        carbs: carbs,\r\n                        fat: fat,\r\n                        fiber: fiber,\r\n                        sugar: sugar,\r\n                        sodium: sodium,\r\n                        serving: '100g'\r\n                    }\r\n                },\r\n                total_calories: calories,\r\n                total_protein_g: protein,\r\n                total_carbs_g: carbs,\r\n                total_fat_g: fat,\r\n                total_fiber_g: fiber,\r\n                total_sugar_g: sugar,\r\n                total_sodium_mg: sodium\r\n            };\r\n\r\n            const { error } = await SupabaseService.addMeal(mealData);\r\n            \r\n            if (error) {\r\n                console.error('Error adding meal from search:', error);\r\n                setSubmitMessage({ text: 'Failed to add meal. Please try again.', type: 'error' });\r\n            } else {\r\n                setSubmitMessage({ text: `${searchResult.name} added successfully!`, type: 'success' });\r\n                setAutocompleteQuery('');\r\n                setShowAutocomplete(false);\r\n                await refreshData();\r\n\r\n                // Auto-hide success message after 3 seconds\r\n                setTimeout(() => {\r\n                    setSubmitMessage(null);\r\n                }, 3000);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding meal from search:', error);\r\n            setSubmitMessage({ text: 'An unexpected error occurred. Please try again.', type: 'error' });\r\n        }\r\n    };\r\n\r\n    // Remove meal function - TODO: Implement actual database deletion\r\n    const removeMeal = async (mealId: string) => {\r\n        // TODO: Remove meal from database via SupabaseService\r\n        console.log('Removing meal from database:', mealId);\r\n        \r\n        // Refresh data after removing\r\n        await refreshData();\r\n    };\r\n\r\n    // Filter foods based on search\r\n    const filteredFoods = quickAddFoods.filter(food =>\r\n        food.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    // Get meals by type for today from database data\r\n    const getMealsByType = (type: MealEntry['mealType']) => {\r\n        return todaysMeals.filter(meal => meal.mealType === type);\r\n    };\r\n\r\n    // Calculate progress percentage\r\n    const getProgressPercentage = (current: number, goal: number) => {\r\n        return Math.min((current / goal) * 100, 100);\r\n    };\r\n\r\n    // Custom meal form submission\r\n    const handleCustomMealSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        \r\n        if (!user) {\r\n            setSubmitMessage({ text: 'Please log in to add meals', type: 'error' });\r\n            return;\r\n        }\r\n\r\n        // Validate required fields\r\n        if (!customMealForm.mealName.trim() || !customMealForm.calories) {\r\n            setSubmitMessage({ text: 'Please fill in meal name and calories', type: 'error' });\r\n            return;\r\n        }\r\n\r\n        setIsSubmitting(true);\r\n        setSubmitMessage(null);\r\n\r\n        try {\r\n            const calories = parseFloat(customMealForm.calories) || 0;\r\n            const protein = parseFloat(customMealForm.protein) || 0;\r\n            const carbs = parseFloat(customMealForm.carbs) || 0;\r\n            const fat = parseFloat(customMealForm.fat) || 0;\r\n            const fiber = parseFloat(customMealForm.fiber) || 0;\r\n            const sugar = parseFloat(customMealForm.sugar) || 0;\r\n            const sodium = parseFloat(customMealForm.sodium) || 0;\r\n\r\n            // Prepare meal data for meals table\r\n            const currentDate = new Date();\r\n            const dateStr = currentDate.toISOString().split('T')[0];\r\n            const timeStr = customMealForm.time || currentDate.toTimeString().split(' ')[0].substring(0, 5);\r\n\r\n            const mealData = {\r\n                user_id: user.id,\r\n                meal_type: customMealForm.mealType,\r\n                meal_name: customMealForm.mealName.trim(),\r\n                date: dateStr,\r\n                time: timeStr,\r\n                foods: {\r\n                    custom: {\r\n                        name: customMealForm.mealName.trim(),\r\n                        calories,\r\n                        protein,\r\n                        carbs,\r\n                        fat,\r\n                        fiber,\r\n                        sugar,\r\n                        sodium,\r\n                        notes: customMealForm.notes\r\n                    }\r\n                },\r\n                total_calories: Math.round(calories),\r\n                total_protein_g: protein,\r\n                total_carbs_g: carbs,\r\n                total_fat_g: fat,\r\n                total_fiber_g: fiber,\r\n                total_sugar_g: sugar,\r\n                total_sodium_mg: sodium,\r\n                notes: customMealForm.notes\r\n            };\r\n\r\n            // Add meal to meals table\r\n            const { error: mealError } = await SupabaseService.addMeal(mealData);\r\n            \r\n            if (mealError) {\r\n                console.error('Error adding meal:', mealError);\r\n                setSubmitMessage({ text: 'Failed to add meal. Please try again.', type: 'error' });\r\n                return;\r\n            }\r\n\r\n            // If \"save meal for future references\" is checked, also add to custom_meals table\r\n            if (customMealForm.saveMeal) {\r\n                // First check if this custom meal already exists for this user\r\n                const { exists, error: checkError } = await SupabaseService.checkCustomMealExists(\r\n                    user.id,\r\n                    customMealForm.mealName.trim(),\r\n                    calories,\r\n                    protein,\r\n                    carbs,\r\n                    fat\r\n                );\r\n\r\n                if (checkError) {\r\n                    console.error('Error checking custom meal existence:', checkError);\r\n                    setSubmitMessage({ text: 'Meal added, but failed to save for future reference', type: 'info' });\r\n                } else if (exists) {\r\n                    setSubmitMessage({ text: 'Meal added! This meal is already saved for future reference.', type: 'success' });\r\n                } else {\r\n                    // Add to custom_meals table\r\n                    const customMealData = {\r\n                        name: customMealForm.mealName.trim(),\r\n                        calories_per_100g: calories,\r\n                        protein_g: protein,\r\n                        carbohydrates_g: carbs,\r\n                        fats_g: fat,\r\n                        fiber_g: fiber,\r\n                        free_sugar_g: sugar,\r\n                        sodium_mg: sodium,\r\n                        submitted_by: user.id,\r\n                        status: 'pending' as const\r\n                    };\r\n\r\n                    const { error: customMealError } = await SupabaseService.addCustomMeal(customMealData);\r\n                    \r\n                    if (customMealError) {\r\n                        console.error('Error adding custom meal:', customMealError);\r\n                        setSubmitMessage({ text: 'Meal added, but failed to save for future reference', type: 'info' });\r\n                    } else {\r\n                        setSubmitMessage({ text: 'Meal added successfully and saved for future reference!', type: 'success' });\r\n                    }\r\n                }\r\n            } else {\r\n                setSubmitMessage({ text: 'Meal added successfully!', type: 'success' });\r\n            }\r\n\r\n            // Reset form\r\n            setCustomMealForm({\r\n                mealName: '',\r\n                mealType: 'breakfast',\r\n                calories: '',\r\n                protein: '',\r\n                carbs: '',\r\n                fat: '',\r\n                fiber: '',\r\n                sugar: '',\r\n                sodium: '',\r\n                notes: '',\r\n                time: '',\r\n                saveMeal: false\r\n            });\r\n\r\n            // Refresh data to show the new meal\r\n            await refreshData();\r\n\r\n            // Auto-hide success message after 3 seconds\r\n            setTimeout(() => {\r\n                setSubmitMessage(null);\r\n            }, 3000);\r\n\r\n        } catch (error) {\r\n            console.error('Error submitting custom meal:', error);\r\n            setSubmitMessage({ text: 'An unexpected error occurred. Please try again.', type: 'error' });\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section ref={pageRef} id=\"add-meals\" className=\"add-meals\">\r\n            <div className=\"add-meals__container\">\r\n\r\n                {/* Autocomplete Search Bar */}\r\n                <div className=\"add-meals__search-section\">\r\n                    <div className=\"add-meals__search-container\" ref={autocompleteRef}>\r\n                        <div className=\"add-meals__search-input-row\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search foods and meals...\"\r\n                                value={autocompleteQuery}\r\n                                onChange={(e) => {\r\n                                    setAutocompleteQuery(e.target.value);\r\n                                    if (e.target.value.length >= 2) {\r\n                                        setShowAutocomplete(true);\r\n                                    }\r\n                                }}\r\n                                onFocus={() => {\r\n                                    if (autocompleteQuery.length >= 2 && searchResults.length > 0) {\r\n                                        setShowAutocomplete(true);\r\n                                    }\r\n                                }}\r\n                                className=\"add-meals__autocomplete-input\"\r\n                            />\r\n                            <select\r\n                                value={selectedMealTypeForSearch}\r\n                                onChange={(e) => setSelectedMealTypeForSearch(e.target.value as MealEntry['mealType'])}\r\n                                className=\"add-meals__meal-type-select\"\r\n                            >\r\n                                <option value=\"breakfast\">🌅 Breakfast</option>\r\n                                <option value=\"lunch\">☀️ Lunch</option>\r\n                                <option value=\"dinner\">🌙 Dinner</option>\r\n                                <option value=\"snack\">🍿 Snack</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        {/* Autocomplete Dropdown */}\r\n                        {showAutocomplete && (\r\n                            <div className=\"add-meals__autocomplete-dropdown\">\r\n                                {isSearching ? (\r\n                                    <div className=\"add-meals__autocomplete-loading\">\r\n                                        <span>Searching...</span>\r\n                                    </div>\r\n                                ) : searchResults.length > 0 ? (\r\n                                    searchResults.map((result) => (\r\n                                        <div\r\n                                            key={`${result.source}-${result.id}`}\r\n                                            className=\"add-meals__autocomplete-item\"\r\n                                            onClick={() => addMealFromSearch(result)}\r\n                                        >\r\n                                            <div className=\"add-meals__autocomplete-item-content\">\r\n                                                <div className=\"add-meals__autocomplete-item-header\">\r\n                                                    <span className=\"add-meals__autocomplete-item-name\">{result.name}</span>\r\n                                                    <span className=\"add-meals__autocomplete-item-source\">\r\n                                                        {result.source === 'custom_meals' ? '👤 Custom' : '🍎 Standard'}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className=\"add-meals__autocomplete-item-nutrition\">\r\n                                                    <span>{Math.round(result.calories_per_100g)} cal</span>\r\n                                                    <span>{result.protein_g}g protein</span>\r\n                                                    <span>{result.carbohydrates_g}g carbs</span>\r\n                                                    <span>{result.fats_g}g fat</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <button className=\"add-meals__autocomplete-add-btn\">\r\n                                                +\r\n                                            </button>\r\n                                        </div>\r\n                                    ))\r\n                                ) : autocompleteQuery.length >= 2 ? (\r\n                                    <div className=\"add-meals__autocomplete-empty\">\r\n                                        <span>No foods found for \"{autocompleteQuery}\"</span>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Display any messages */}\r\n                    {submitMessage && (\r\n                        <div className={`add-meals__message add-meals__message--${submitMessage.type}`}>\r\n                            {submitMessage.text}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Quick Actions */}\r\n                <div className=\"add-meals__quick-actions\">\r\n                    <button\r\n                        className=\"add-meals__quick-btn add-meals__quick-btn--primary\"\r\n                        onClick={() => setShowQuickAdd(!showQuickAdd)}\r\n                    >\r\n                        🍎 Quick Add Food\r\n                    </button>\r\n                    <button \r\n                        className=\"add-meals__quick-btn\"\r\n                        onClick={() => setShowCustomEntry(!showCustomEntry)}\r\n                    >\r\n                        📊 Custom Entry\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Nutrition Summary */}\r\n                <div className=\"add-meals__nutrition-summary\">\r\n                    <h2 className=\"add-meals__section-title\">Today's Nutrition</h2>\r\n                    <div className=\"add-meals__nutrition-visual\">\r\n                        {/* Calories Circle */}\r\n                        <div className=\"add-meals__macro-circle\">\r\n                            <div className=\"add-meals__circle-container\">\r\n                                <svg className=\"add-meals__circle-svg\" width=\"100\" height=\"100\" viewBox=\"0 0 36 36\">\r\n                                    <path className=\"add-meals__circle-bg\"\r\n                                        d=\"M18 2.0845\r\n                                           a 15.9155 15.9155 0 0 1 0 31.831\r\n                                           a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <path className=\"add-meals__circle-progress add-meals__circle-progress--calories\"\r\n                                        strokeDasharray={`${getProgressPercentage(nutritionSummary.totalCalories, nutritionSummary.goalCalories)}, 100`}\r\n                                        d=\"M18 2.0845\r\n                                           a 15.9155 15.9155 0 0 1 0 31.831\r\n                                           a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                </svg>\r\n                                <div className=\"add-meals__circle-content\">\r\n                                    <div className=\"add-meals__circle-icon\">🔥</div>\r\n                                    <div className=\"add-meals__circle-value\">{Math.round(nutritionSummary.totalCalories)}</div>\r\n                                    <div className=\"add-meals__circle-label\">Calories</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Protein Circle */}\r\n                        <div className=\"add-meals__macro-circle\">\r\n                            <div className=\"add-meals__circle-container\">\r\n                                <svg className=\"add-meals__circle-svg\" width=\"100\" height=\"100\" viewBox=\"0 0 36 36\">\r\n                                    <path className=\"add-meals__circle-bg\"\r\n                                        d=\"M18 2.0845\r\n                                           a 15.9155 15.9155 0 0 1 0 31.831\r\n                                           a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <path className=\"add-meals__circle-progress add-meals__circle-progress--protein\"\r\n                                        strokeDasharray={`${getProgressPercentage(nutritionSummary.totalProtein, nutritionSummary.goalProtein)}, 100`}\r\n                                        d=\"M18 2.0845\r\n                                           a 15.9155 15.9155 0 0 1 0 31.831\r\n                                           a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                </svg>\r\n                                <div className=\"add-meals__circle-content\">\r\n                                    <div className=\"add-meals__circle-icon\">💪</div>\r\n                                    <div className=\"add-meals__circle-value\">{Math.round(nutritionSummary.totalProtein)}g</div>\r\n                                    <div className=\"add-meals__circle-label\">Protein</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Carbs Circle */}\r\n                        <div className=\"add-meals__macro-circle\">\r\n                            <div className=\"add-meals__circle-container\">\r\n                                <svg className=\"add-meals__circle-svg\" width=\"100\" height=\"100\" viewBox=\"0 0 36 36\">\r\n                                    <path className=\"add-meals__circle-bg\"\r\n                                        d=\"M18 2.0845\r\n                                           a 15.9155 15.9155 0 0 1 0 31.831\r\n                                           a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <path className=\"add-meals__circle-progress add-meals__circle-progress--carbs\"\r\n                                        strokeDasharray={`${getProgressPercentage(nutritionSummary.totalCarbs, nutritionSummary.goalCarbs)}, 100`}\r\n                                        d=\"M18 2.0845\r\n                                           a 15.9155 15.9155 0 0 1 0 31.831\r\n                                           a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                </svg>\r\n                                <div className=\"add-meals__circle-content\">\r\n                                    <div className=\"add-meals__circle-icon\">🌾</div>\r\n                                    <div className=\"add-meals__circle-value\">{Math.round(nutritionSummary.totalCarbs)}g</div>\r\n                                    <div className=\"add-meals__circle-label\">Carbs</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Fat Circle */}\r\n                        <div className=\"add-meals__macro-circle\">\r\n                            <div className=\"add-meals__circle-container\">\r\n                                <svg className=\"add-meals__circle-svg\" width=\"100\" height=\"100\" viewBox=\"0 0 36 36\">\r\n                                    <path className=\"add-meals__circle-bg\"\r\n                                        d=\"M18 2.0845\r\n                                           a 15.9155 15.9155 0 0 1 0 31.831\r\n                                           a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <path className=\"add-meals__circle-progress add-meals__circle-progress--fat\"\r\n                                        strokeDasharray={`${getProgressPercentage(nutritionSummary.totalFat, nutritionSummary.goalFat)}, 100`}\r\n                                        d=\"M18 2.0845\r\n                                           a 15.9155 15.9155 0 0 1 0 31.831\r\n                                           a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                </svg>\r\n                                <div className=\"add-meals__circle-content\">\r\n                                    <div className=\"add-meals__circle-icon\">🥑</div>\r\n                                    <div className=\"add-meals__circle-value\">{Math.round(nutritionSummary.totalFat)}g</div>\r\n                                    <div className=\"add-meals__circle-label\">Fat</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Quick Add Panel */}\r\n                {showQuickAdd && (\r\n                    <div className=\"add-meals__quick-add-panel\">\r\n                        <div className=\"add-meals__panel-header\">\r\n                            <h3 className=\"add-meals__panel-title\">Quick Add Foods</h3>\r\n                            <button\r\n                                className=\"add-meals__close-btn\"\r\n                                onClick={() => setShowQuickAdd(false)}\r\n                            >\r\n                                ✕\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"add-meals__meal-type-selector\">\r\n                            <label className=\"add-meals__meal-label\">Meal Type:</label>\r\n                            <select\r\n                                value={selectedMealType}\r\n                                onChange={(e) => setSelectedMealType(e.target.value as MealEntry['mealType'])}\r\n                                className=\"add-meals__meal-select\"\r\n                            >\r\n                                <option value=\"breakfast\">🌅 Breakfast</option>\r\n                                <option value=\"lunch\">☀️ Lunch</option>\r\n                                <option value=\"dinner\">🌙 Dinner</option>\r\n                                <option value=\"snack\">🍿 Snack</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"add-meals__search-box\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search foods...\"\r\n                                value={searchQuery}\r\n                                onChange={(e) => setSearchQuery(e.target.value)}\r\n                                className=\"add-meals__search-input\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"add-meals__foods-grid\">\r\n                            {filteredFoods.map((food, index) => (\r\n                                <div key={index} className=\"add-meals__food-card\">\r\n                                    <div className=\"add-meals__food-info\">\r\n                                        <h4 className=\"add-meals__food-name\">{food.name}</h4>\r\n                                        <div className=\"add-meals__food-nutrition\">\r\n                                            <span>{food.calories} cal</span>\r\n                                            <span>{food.protein}g protein</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button\r\n                                        className=\"add-meals__add-food-btn\"\r\n                                        onClick={() => addMeal(food)}\r\n                                    >\r\n                                        +\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Custom Entry Panel */}\r\n                {showCustomEntry && (\r\n                    <div className=\"add-meals__custom-entry-panel\">\r\n                        <div className=\"add-meals__panel-header\">\r\n                            <h3 className=\"add-meals__panel-title\">Custom Meal Entry</h3>\r\n                            <button\r\n                                className=\"add-meals__close-btn\"\r\n                                onClick={() => setShowCustomEntry(false)}\r\n                            >\r\n                                ✕\r\n                            </button>\r\n                        </div>\r\n\r\n                        <form className=\"add-meals__custom-form\" onSubmit={handleCustomMealSubmit}>\r\n                            {submitMessage && (\r\n                                <div className={`add-meals__message add-meals__message--${submitMessage.type}`}>\r\n                                    {submitMessage.text}\r\n                                </div>\r\n                            )}\r\n                            \r\n                            <div className=\"add-meals__form-group\">\r\n                                <label className=\"add-meals__form-label\">Meal Name *</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"add-meals__form-input\"\r\n                                    value={customMealForm.mealName}\r\n                                    onChange={(e) => setCustomMealForm(prev => ({...prev, mealName: e.target.value}))}\r\n                                    placeholder=\"Enter meal name\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"add-meals__form-group\">\r\n                                <label className=\"add-meals__form-label\">Meal Type *</label>\r\n                                <select\r\n                                    className=\"add-meals__form-select\"\r\n                                    value={customMealForm.mealType}\r\n                                    onChange={(e) => setCustomMealForm(prev => ({...prev, mealType: e.target.value as MealEntry['mealType']}))}\r\n                                >\r\n                                    <option value=\"breakfast\">🌅 Breakfast</option>\r\n                                    <option value=\"lunch\">☀️ Lunch</option>\r\n                                    <option value=\"dinner\">🌙 Dinner</option>\r\n                                    <option value=\"snack\">🍿 Snack</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"add-meals__form-group\">\r\n                                <label className=\"add-meals__form-label\">Time</label>\r\n                                <input\r\n                                    type=\"time\"\r\n                                    className=\"add-meals__form-input\"\r\n                                    value={customMealForm.time}\r\n                                    onChange={(e) => setCustomMealForm(prev => ({...prev, time: e.target.value}))}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"add-meals__form-row\">\r\n                                <div className=\"add-meals__form-group add-meals__form-group--half\">\r\n                                    <label className=\"add-meals__form-label\">\r\n                                        Calories * \r\n                                        <span className=\"add-meals__form-label-note\">\r\n                                            (auto-calculated from macros)\r\n                                        </span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        className=\"add-meals__form-input add-meals__form-input--auto-calculated\"\r\n                                        value={customMealForm.calories}\r\n                                        onChange={(e) => setCustomMealForm(prev => ({...prev, calories: e.target.value}))}\r\n                                        placeholder=\"Enter macros to auto-calculate\"\r\n                                        min=\"0\"\r\n                                        step=\"1\"\r\n                                        required\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"add-meals__form-group add-meals__form-group--half\">\r\n                                    <label className=\"add-meals__form-label\">Protein (g)</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        className=\"add-meals__form-input\"\r\n                                        value={customMealForm.protein}\r\n                                        onChange={(e) => setCustomMealForm(prev => ({...prev, protein: e.target.value}))}\r\n                                        placeholder=\"0\"\r\n                                        min=\"0\"\r\n                                        step=\"0.1\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"add-meals__form-row\">\r\n                                <div className=\"add-meals__form-group add-meals__form-group--half\">\r\n                                    <label className=\"add-meals__form-label\">Carbs (g)</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        className=\"add-meals__form-input\"\r\n                                        value={customMealForm.carbs}\r\n                                        onChange={(e) => setCustomMealForm(prev => ({...prev, carbs: e.target.value}))}\r\n                                        placeholder=\"0\"\r\n                                        min=\"0\"\r\n                                        step=\"0.1\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"add-meals__form-group add-meals__form-group--half\">\r\n                                    <label className=\"add-meals__form-label\">Fat (g)</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        className=\"add-meals__form-input\"\r\n                                        value={customMealForm.fat}\r\n                                        onChange={(e) => setCustomMealForm(prev => ({...prev, fat: e.target.value}))}\r\n                                        placeholder=\"0\"\r\n                                        min=\"0\"\r\n                                        step=\"0.1\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"add-meals__form-row\">\r\n                                <div className=\"add-meals__form-group add-meals__form-group--half\">\r\n                                    <label className=\"add-meals__form-label\">Fiber (g)</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        className=\"add-meals__form-input\"\r\n                                        value={customMealForm.fiber}\r\n                                        onChange={(e) => setCustomMealForm(prev => ({...prev, fiber: e.target.value}))}\r\n                                        placeholder=\"0\"\r\n                                        min=\"0\"\r\n                                        step=\"0.1\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"add-meals__form-group add-meals__form-group--half\">\r\n                                    <label className=\"add-meals__form-label\">Sugar (g)</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        className=\"add-meals__form-input\"\r\n                                        value={customMealForm.sugar}\r\n                                        onChange={(e) => setCustomMealForm(prev => ({...prev, sugar: e.target.value}))}\r\n                                        placeholder=\"0\"\r\n                                        min=\"0\"\r\n                                        step=\"0.1\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"add-meals__form-group\">\r\n                                <label className=\"add-meals__form-label\">Sodium (mg)</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"add-meals__form-input\"\r\n                                    value={customMealForm.sodium}\r\n                                    onChange={(e) => setCustomMealForm(prev => ({...prev, sodium: e.target.value}))}\r\n                                    placeholder=\"0\"\r\n                                    min=\"0\"\r\n                                    step=\"0.1\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"add-meals__form-group\">\r\n                                <label className=\"add-meals__form-label\">Notes</label>\r\n                                <textarea\r\n                                    className=\"add-meals__form-textarea\"\r\n                                    value={customMealForm.notes}\r\n                                    onChange={(e) => setCustomMealForm(prev => ({...prev, notes: e.target.value}))}\r\n                                    placeholder=\"Additional notes about the meal...\"\r\n                                    rows={3}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"add-meals__form-group\">\r\n                                <label className=\"add-meals__form-checkbox-label\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"add-meals__form-checkbox\"\r\n                                        checked={customMealForm.saveMeal}\r\n                                        onChange={(e) => setCustomMealForm(prev => ({...prev, saveMeal: e.target.checked}))}\r\n                                    />\r\n                                    <span className=\"add-meals__form-checkbox-text\">\r\n                                        Save meal for future references\r\n                                    </span>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className=\"add-meals__form-actions\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"add-meals__add-meal-btn add-meals__add-meal-btn--primary\"\r\n                                    disabled={isSubmitting}\r\n                                >\r\n                                    {isSubmitting ? 'Adding Meal...' : 'Add Meal'}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Meals by Type */}\r\n                <div className=\"add-meals__meals-section\">\r\n                    <h2 className=\"add-meals__section-title\">Today's Meals</h2>\r\n\r\n                    {(['breakfast', 'lunch', 'dinner', 'snack'] as const).map(mealType => {\r\n                        const typeMeals = getMealsByType(mealType);\r\n                        const typeCalories = typeMeals.reduce((sum, meal) => sum + meal.calories, 0);\r\n\r\n                        return (\r\n                            <div key={mealType} className=\"add-meals__meal-type-section\">\r\n                                <div className=\"add-meals__meal-type-header\">\r\n                                    <h3 className=\"add-meals__meal-type-title\">\r\n                                        {mealType === 'breakfast' && '🌅'}\r\n                                        {mealType === 'lunch' && '☀️'}\r\n                                        {mealType === 'dinner' && '🌙'}\r\n                                        {mealType === 'snack' && '🍿'}\r\n                                        {mealType.charAt(0).toUpperCase() + mealType.slice(1)}\r\n                                    </h3>\r\n                                    <span className=\"add-meals__meal-type-calories\">\r\n                                        {Math.round(typeCalories)} calories\r\n                                    </span>\r\n                                </div>\r\n\r\n                                {typeMeals.length > 0 ? (\r\n                                    <div className=\"add-meals__meal-list\">\r\n                                        {typeMeals.map(meal => (\r\n                                            <div key={meal.id} className=\"add-meals__meal-item\">\r\n                                                <div className=\"add-meals__meal-info\">\r\n                                                    <span className=\"add-meals__meal-name\">{meal.name}</span>\r\n                                                    <span className=\"add-meals__meal-nutrition\">\r\n                                                        {meal.calories} cal • {meal.protein}g protein • {meal.carbs}g carbs • {meal.fat}g fat\r\n                                                    </span>\r\n                                                </div>\r\n                                                <button\r\n                                                    className=\"add-meals__remove-btn\"\r\n                                                    onClick={() => removeMeal(meal.id)}\r\n                                                >\r\n                                                    🗑️\r\n                                                </button>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"add-meals__empty-meal-type\">\r\n                                        <p>No {mealType} entries yet</p>\r\n                                        <button\r\n                                            className=\"add-meals__add-meal-btn\"\r\n                                            onClick={() => {\r\n                                                setSelectedMealType(mealType);\r\n                                                setShowQuickAdd(true);\r\n                                            }}\r\n                                        >\r\n                                            + Add {mealType}\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddMeals;","import { useState, useCallback, useEffect } from 'react';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport SupabaseService from '../services/SupabaseService';\r\nimport NotificationManager from '../utils/NotificationManager';\r\nimport './Profile.css';\r\n\r\ninterface UserProfileData {\r\n    height_cm: number;\r\n    weight_kg: number;\r\n    target_weight_kg: number;\r\n    target_duration: number;\r\n    target_duration_unit: string;\r\n    activity_level: string;\r\n    orientation: string;\r\n    age: number;\r\n    gender: string;\r\n}\r\n\r\ntype HeightUnit = 'cm' | 'ft';\r\ntype WeightUnit = 'kg' | 'lbs';\r\ntype DurationUnit = 'days' | 'weeks' | 'months';\r\n\r\nconst Profile: React.FC = () => {\r\n    const { user, signOut } = useAuth();\r\n    \r\n    const [profileData, setProfileData] = useState<UserProfileData>({\r\n        height_cm: 0,\r\n        weight_kg: 0,\r\n        target_weight_kg: 0,\r\n        target_duration: 0,\r\n        target_duration_unit: 'weeks',\r\n        activity_level: 'moderate',\r\n        orientation: '',\r\n        age: 0,\r\n        gender: ''\r\n    });\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [heightUnit, setHeightUnit] = useState<HeightUnit>('cm');\r\n    const [weightUnit, setWeightUnit] = useState<WeightUnit>('kg');\r\n    const [targetWeightUnit, setTargetWeightUnit] = useState<WeightUnit>('kg');\r\n    const [heightFeet, setHeightFeet] = useState(0);\r\n    const [heightInches, setHeightInches] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [hasProfile, setHasProfile] = useState(false);\r\n    const [orientationOptions, setOrientationOptions] = useState<{ value: string; label: string }[]>([]);\r\n\r\n    const getUserName = useCallback(() => {\r\n        if (!user) return '';\r\n        return user.user_metadata?.full_name ||\r\n            user.user_metadata?.name ||\r\n            user.email?.split('@')[0] ||\r\n            'User';\r\n    }, [user]);\r\n\r\n    const getUserInitials = useCallback(() => {\r\n        if (!user?.email) return 'U';\r\n\r\n        const email = user.email;\r\n        const name = user.user_metadata?.full_name || user.user_metadata?.name;\r\n\r\n        if (name) {\r\n            const nameParts = name.trim().split(' ');\r\n            if (nameParts.length >= 2) {\r\n                return (nameParts[0][0] + nameParts[nameParts.length - 1][0]).toUpperCase();\r\n            }\r\n            return name[0].toUpperCase();\r\n        }\r\n\r\n        return email[0].toUpperCase();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        loadUserProfile();\r\n        loadOrientations();\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        loadOrientations();\r\n    }, [profileData.weight_kg, profileData.target_weight_kg]);\r\n\r\n    const loadUserProfile = async () => {\r\n        if (!user) return;\r\n        \r\n        try {\r\n            const { data } = await SupabaseService.getUserProfile(user.id);\r\n            \r\n            if (data) {\r\n                setProfileData({\r\n                    height_cm: data.height_cm || 0,\r\n                    weight_kg: data.weight_kg || 0,\r\n                    target_weight_kg: data.target_weight_kg || 0,\r\n                    target_duration: data.target_duration || 0,\r\n                    target_duration_unit: data.target_duration_unit || 'weeks',\r\n                    activity_level: data.activity_level || 'moderate',\r\n                    orientation: data.orientation || '',\r\n                    age: data.age || 0,\r\n                    gender: data.gender || ''\r\n                });\r\n                setHasProfile(true);\r\n                \r\n                if (data.height_cm) {\r\n                    const feet = Math.floor(data.height_cm / 30.48);\r\n                    const inches = Math.round((data.height_cm % 30.48) / 2.54);\r\n                    setHeightFeet(feet);\r\n                    setHeightInches(inches);\r\n                }\r\n            } else {\r\n                setIsEditing(true); // Auto-edit if no profile exists\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading profile:', error);\r\n        }\r\n    };\r\n\r\n    const loadOrientations = async () => {\r\n        try {\r\n            const currentWeight = profileData.weight_kg;\r\n            const targetWeight = profileData.target_weight_kg;\r\n            \r\n            let applicableFor: 'weight_loss' | 'weight_gain' | 'both' = 'both';\r\n            \r\n            if (currentWeight > 0 && targetWeight > 0) {\r\n                if (targetWeight < currentWeight) {\r\n                    applicableFor = 'weight_loss';\r\n                } else if (targetWeight > currentWeight) {\r\n                    applicableFor = 'weight_gain';\r\n                }\r\n            }\r\n            \r\n            const { data, error } = await SupabaseService.getOrientations(applicableFor);\r\n            \r\n            if (error) {\r\n                console.error('Error loading orientations:', error);\r\n                // Fallback to hardcoded values if database fetch fails\r\n                setOrientationOptions(getOrientationOptionsFallback(applicableFor));\r\n            } else {\r\n                setOrientationOptions(data.map(orientation => ({\r\n                    value: orientation.value,\r\n                    label: orientation.label\r\n                })));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading orientations:', error);\r\n            // Fallback to hardcoded values\r\n            const currentWeight = profileData.weight_kg;\r\n            const targetWeight = profileData.target_weight_kg;\r\n            let applicableFor: 'weight_loss' | 'weight_gain' | 'both' = 'both';\r\n            \r\n            if (currentWeight > 0 && targetWeight > 0) {\r\n                if (targetWeight < currentWeight) {\r\n                    applicableFor = 'weight_loss';\r\n                } else if (targetWeight > currentWeight) {\r\n                    applicableFor = 'weight_gain';\r\n                }\r\n            }\r\n            \r\n            setOrientationOptions(getOrientationOptionsFallback(applicableFor));\r\n        }\r\n    };\r\n\r\n    const convertHeight = (feet: number, inches: number): number => {\r\n        return Math.round((feet * 30.48) + (inches * 2.54));\r\n    };\r\n\r\n    const convertWeight = (value: number, from: WeightUnit, to: WeightUnit): number => {\r\n        if (from === to) return value;\r\n        if (from === 'kg' && to === 'lbs') return Math.round(value * 2.20462 * 10) / 10;\r\n        if (from === 'lbs' && to === 'kg') return Math.round(value / 2.20462 * 10) / 10;\r\n        return value;\r\n    };\r\n\r\n    const handleHeightUnitToggle = () => {\r\n        setHeightUnit(prev => prev === 'cm' ? 'ft' : 'cm');\r\n    };\r\n\r\n    const handleWeightUnitToggle = () => {\r\n        setWeightUnit(prev => prev === 'kg' ? 'lbs' : 'kg');\r\n    };\r\n\r\n    const handleTargetWeightUnitToggle = () => {\r\n        setTargetWeightUnit(prev => prev === 'kg' ? 'lbs' : 'kg');\r\n    };\r\n\r\n    const handleInputChange = (field: keyof UserProfileData, value: number | string | string[]) => {\r\n        setProfileData(prev => ({ ...prev, [field]: value }));\r\n    };\r\n\r\n    const getOrientationOptionsFallback = (applicableFor: 'weight_loss' | 'weight_gain' | 'both'): { value: string; label: string }[] => {\r\n        if (applicableFor === 'weight_loss') {\r\n            return [\r\n                { value: 'energy_focused', label: 'Energy Focussed' },\r\n                { value: 'muscle_preservation', label: 'Muscle Preservation' }\r\n            ];\r\n        } else if (applicableFor === 'weight_gain') {\r\n            return [\r\n                { value: 'lean_muscle_building', label: 'Lean Muscle Building' },\r\n                { value: 'energetic_bulking', label: 'Energetic Bulking' }\r\n            ];\r\n        }\r\n        \r\n        // Default options when weights are equal or not set\r\n        return [\r\n            { value: 'energy_focused', label: 'Energy Focussed' },\r\n            { value: 'muscle_preservation', label: 'Muscle Preservation' },\r\n            { value: 'lean_muscle_building', label: 'Lean Muscle Building' },\r\n            { value: 'energetic_bulking', label: 'Energetic Bulking' }\r\n        ];\r\n    };\r\n\r\n    const validateInputs = (): boolean => {\r\n        if (heightUnit === 'ft') {\r\n            if (heightFeet < 0 || heightFeet > 8 || heightInches < 0 || heightInches >= 12) {\r\n                NotificationManager.getInstance().show('Please enter valid height (0-8 feet, 0-11 inches)', 'error');\r\n                return false;\r\n            }\r\n        } else {\r\n            if (profileData.height_cm < 0 || profileData.height_cm > 250) {\r\n                NotificationManager.getInstance().show('Please enter valid height (0-250 cm)', 'error');\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const weightInKg = weightUnit === 'kg' ? profileData.weight_kg : convertWeight(profileData.weight_kg, 'lbs', 'kg');\r\n        if (weightInKg < 0 || weightInKg > 500) {\r\n            NotificationManager.getInstance().show('Please enter valid weight', 'error');\r\n            return false;\r\n        }\r\n\r\n        const targetWeightInKg = targetWeightUnit === 'kg' ? profileData.target_weight_kg : convertWeight(profileData.target_weight_kg, 'lbs', 'kg');\r\n        if (targetWeightInKg < 0 || targetWeightInKg > 500) {\r\n            NotificationManager.getInstance().show('Please enter valid target weight', 'error');\r\n            return false;\r\n        }\r\n\r\n        if (profileData.target_duration <= 0) {\r\n            NotificationManager.getInstance().show('Please enter valid target duration', 'error');\r\n            return false;\r\n        }\r\n\r\n        if (!profileData.age || profileData.age < 1 || profileData.age > 120) {\r\n            NotificationManager.getInstance().show('Please enter valid age (1-120)', 'error');\r\n            return false;\r\n        }\r\n\r\n        if (!profileData.gender) {\r\n            NotificationManager.getInstance().show('Please select a gender', 'error');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const checkProfileComplete = (data: UserProfileData): boolean => {\r\n        return (\r\n            data.height_cm > 0 &&\r\n            data.weight_kg > 0 &&\r\n            data.target_weight_kg > 0 &&\r\n            data.target_duration > 0 &&\r\n            data.target_duration_unit.length > 0 &&\r\n            data.activity_level.length > 0 &&\r\n            data.age > 0 &&\r\n            data.gender.length > 0\r\n        );\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        if (!user || !validateInputs()) return;\r\n        \r\n        setIsLoading(true);\r\n        try {\r\n            const dataToSave: any = {};\r\n            \r\n            // Convert height to cm if in ft/in\r\n            if (heightUnit === 'ft') {\r\n                dataToSave.height_cm = convertHeight(heightFeet, heightInches);\r\n            } else {\r\n                dataToSave.height_cm = profileData.height_cm;\r\n            }\r\n            \r\n            // Convert weight to kg if in lbs\r\n            if (weightUnit === 'lbs') {\r\n                dataToSave.weight_kg = convertWeight(profileData.weight_kg, 'lbs', 'kg');\r\n            } else {\r\n                dataToSave.weight_kg = profileData.weight_kg;\r\n            }\r\n            \r\n            // Convert target weight to kg if in lbs\r\n            if (targetWeightUnit === 'lbs') {\r\n                dataToSave.target_weight_kg = convertWeight(profileData.target_weight_kg, 'lbs', 'kg');\r\n            } else {\r\n                dataToSave.target_weight_kg = profileData.target_weight_kg;\r\n            }\r\n            \r\n            // Add all fields that now exist in the database\r\n            dataToSave.activity_level = profileData.activity_level;\r\n            dataToSave.target_duration = profileData.target_duration;\r\n            dataToSave.target_duration_unit = profileData.target_duration_unit;\r\n            dataToSave.orientation = profileData.orientation;\r\n            dataToSave.age = profileData.age;\r\n            dataToSave.gender = profileData.gender;\r\n            \r\n            const { error } = await SupabaseService.updateUserProfile(user.id, dataToSave);\r\n            \r\n            if (error) {\r\n                throw error;\r\n            }\r\n            \r\n            NotificationManager.getInstance().show('Profile updated successfully!', 'success');\r\n            setIsEditing(false);\r\n            setHasProfile(true);\r\n            \r\n        } catch (error: any) {\r\n            console.error('Error saving profile:', error);\r\n            NotificationManager.getInstance().show(error.message || 'Failed to save profile', 'error');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        loadUserProfile();\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const handleSignOut = async () => {\r\n        try {\r\n            await signOut();\r\n        } catch (error) {\r\n            console.error('Sign out error:', error);\r\n            NotificationManager.getInstance().show('Failed to sign out', 'error');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__container\">\r\n                <div className=\"profile__header\">\r\n                    <div className=\"profile__user\">\r\n                        <div className=\"profile__avatar\">\r\n                            <span className=\"profile__initials\">\r\n                                {getUserInitials()}\r\n                            </span>\r\n                        </div>\r\n                        <ul className=\"profile__info\">\r\n                            <li className=\"profile__name\">{getUserName()}</li>\r\n                            <li className=\"profile__email\">{user?.email}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <button\r\n                        className=\"profile__signout-btn\"\r\n                        onClick={handleSignOut}\r\n                        type=\"button\"\r\n                    >\r\n                        Sign Out\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"profile__content\">\r\n                    <div className=\"profile__section\">\r\n                        <div className=\"profile__section-header\">\r\n                            <h2>Setup Profile</h2>\r\n                            {!isEditing && hasProfile && (\r\n                                <button\r\n                                    className=\"profile__edit-btn\"\r\n                                    onClick={() => setIsEditing(true)}\r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"profile__form\">\r\n                            <div className=\"profile__row\">\r\n                                <div className=\"profile__field-group\">\r\n                                    <div className=\"profile__field-header\">\r\n                                        <h3>Height</h3>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"profile__unit-toggle\"\r\n                                            onClick={handleHeightUnitToggle}\r\n                                            disabled={!isEditing}\r\n                                        >\r\n                                            {heightUnit === 'cm' ? 'ft/in' : 'cm'}\r\n                                        </button>\r\n                                    </div>\r\n                                    {heightUnit === 'cm' ? (\r\n                                        <div className=\"profile__input-group\">\r\n                                            <input\r\n                                                id=\"height-cm\"\r\n                                                name=\"height-cm\"\r\n                                                type=\"number\"\r\n                                                min=\"0\"\r\n                                                max=\"250\"\r\n                                                value={profileData.height_cm}\r\n                                                onChange={(e) => handleInputChange('height_cm', parseInt(e.target.value) || 0)}\r\n                                                disabled={!isEditing}\r\n                                                placeholder=\"Height in cm\"\r\n                                            />\r\n                                            <span className=\"profile__unit\">cm</span>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"profile__height-row\">\r\n                                            <div className=\"profile__input-group\">\r\n                                                <input\r\n                                                    id=\"height-feet\"\r\n                                                    name=\"height-feet\"\r\n                                                    type=\"number\"\r\n                                                    min=\"0\"\r\n                                                    max=\"8\"\r\n                                                    value={heightFeet}\r\n                                                    onChange={(e) => {\r\n                                                        const feet = parseInt(e.target.value) || 0;\r\n                                                        setHeightFeet(feet);\r\n                                                        handleInputChange('height_cm', convertHeight(feet, heightInches));\r\n                                                    }}\r\n                                                    disabled={!isEditing}\r\n                                                    placeholder=\"Feet\"\r\n                                                />\r\n                                                <span className=\"profile__unit\">ft</span>\r\n                                            </div>\r\n                                            <div className=\"profile__input-group\">\r\n                                                <input\r\n                                                    id=\"height-inches\"\r\n                                                    name=\"height-inches\"\r\n                                                    type=\"number\"\r\n                                                    min=\"0\"\r\n                                                    max=\"11\"\r\n                                                    value={heightInches}\r\n                                                    onChange={(e) => {\r\n                                                        const inches = parseInt(e.target.value) || 0;\r\n                                                        setHeightInches(inches);\r\n                                                        handleInputChange('height_cm', convertHeight(heightFeet, inches));\r\n                                                    }}\r\n                                                    disabled={!isEditing}\r\n                                                    placeholder=\"Inches\"\r\n                                                />\r\n                                                <span className=\"profile__unit\">in</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"profile__field-group\">\r\n                                    <div className=\"profile__field-header\">\r\n                                        <h3>Weight</h3>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"profile__unit-toggle\"\r\n                                            onClick={handleWeightUnitToggle}\r\n                                            disabled={!isEditing}\r\n                                        >\r\n                                            {weightUnit === 'kg' ? 'lbs' : 'kg'}\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"profile__input-group\">\r\n                                        <input\r\n                                            id=\"weight\"\r\n                                            name=\"weight\"\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            max={weightUnit === 'kg' ? '500' : '1100'}\r\n                                            step=\"0.1\"\r\n                                            value={weightUnit === 'kg' ? profileData.weight_kg : convertWeight(profileData.weight_kg, 'kg', 'lbs')}\r\n                                            onChange={(e) => {\r\n                                                const value = parseFloat(e.target.value) || 0;\r\n                                                handleInputChange('weight_kg', weightUnit === 'kg' ? value : convertWeight(value, 'lbs', 'kg'));\r\n                                            }}\r\n                                            disabled={!isEditing}\r\n                                            placeholder={`Weight in ${weightUnit}`}\r\n                                        />\r\n                                        <span className=\"profile__unit\">{weightUnit}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"profile__row\">\r\n                                <div className=\"profile__field-group\">\r\n                                    <div className=\"profile__field-header\">\r\n                                        <h3>Target Weight</h3>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"profile__unit-toggle\"\r\n                                            onClick={handleTargetWeightUnitToggle}\r\n                                            disabled={!isEditing}\r\n                                        >\r\n                                            {targetWeightUnit === 'kg' ? 'lbs' : 'kg'}\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"profile__input-group\">\r\n                                        <input\r\n                                            id=\"target-weight\"\r\n                                            name=\"target-weight\"\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            max={targetWeightUnit === 'kg' ? '500' : '1100'}\r\n                                            step=\"0.1\"\r\n                                            value={targetWeightUnit === 'kg' ? profileData.target_weight_kg : convertWeight(profileData.target_weight_kg, 'kg', 'lbs')}\r\n                                            onChange={(e) => {\r\n                                                const value = parseFloat(e.target.value) || 0;\r\n                                                handleInputChange('target_weight_kg', targetWeightUnit === 'kg' ? value : convertWeight(value, 'lbs', 'kg'));\r\n                                            }}\r\n                                            disabled={!isEditing}\r\n                                            placeholder={`Target weight in ${targetWeightUnit}`}\r\n                                        />\r\n                                        <span className=\"profile__unit\">{targetWeightUnit}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"profile__field-group\">\r\n                                    <div className=\"profile__field-header\">\r\n                                        <h3>Target Duration</h3>\r\n                                    </div>\r\n                                    <div className=\"profile__duration-row\">\r\n                                        <div className=\"profile__input-group\">\r\n                                            <input\r\n                                                id=\"target-duration\"\r\n                                                name=\"target-duration\"\r\n                                                type=\"number\"\r\n                                                min=\"1\"\r\n                                                max=\"999\"\r\n                                                value={profileData.target_duration}\r\n                                                onChange={(e) => handleInputChange('target_duration', parseInt(e.target.value) || 0)}\r\n                                                disabled={!isEditing}\r\n                                                placeholder=\"Duration\"\r\n                                            />\r\n                                        </div>\r\n                                        <select\r\n                                            id=\"target-duration-unit\"\r\n                                            name=\"target-duration-unit\"\r\n                                            value={profileData.target_duration_unit}\r\n                                            onChange={(e) => handleInputChange('target_duration_unit', e.target.value)}\r\n                                            disabled={!isEditing}\r\n                                            className=\"profile__select profile__duration-unit\"\r\n                                        >\r\n                                            <option value=\"days\">Days</option>\r\n                                            <option value=\"weeks\">Weeks</option>\r\n                                            <option value=\"months\">Months</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"profile__row\">\r\n                                <div className=\"profile__field-group\">\r\n                                    <div className=\"profile__field-header\">\r\n                                        <h3>Age</h3>\r\n                                    </div>\r\n                                    <div className=\"profile__input-group\">\r\n                                        <input\r\n                                            id=\"age\"\r\n                                            name=\"age\"\r\n                                            type=\"number\"\r\n                                            min=\"1\"\r\n                                            max=\"120\"\r\n                                            value={profileData.age}\r\n                                            onChange={(e) => handleInputChange('age', parseInt(e.target.value) || 0)}\r\n                                            disabled={!isEditing}\r\n                                            placeholder=\"Age\"\r\n                                        />\r\n                                        <span className=\"profile__unit\">years</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"profile__row\">\r\n                                <div className=\"profile__field-group\">\r\n                                    <div className=\"profile__field-header\">\r\n                                        <h3>Gender</h3>\r\n                                    </div>\r\n                                    <select\r\n                                        id=\"gender\"\r\n                                        name=\"gender\"\r\n                                        value={profileData.gender}\r\n                                        onChange={(e) => handleInputChange('gender', e.target.value)}\r\n                                        disabled={!isEditing}\r\n                                        className=\"profile__select\"\r\n                                    >\r\n                                        <option value=\"\">Select gender</option>\r\n                                        <option value=\"male\">Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                        <option value=\"other\">Other</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"profile__row\">\r\n                                <div className=\"profile__field-group\">\r\n                                    <div className=\"profile__field-header\">\r\n                                        <h3>Activity Level</h3>\r\n                                    </div>\r\n                                    <select\r\n                                        id=\"activity-level\"\r\n                                        name=\"activity-level\"\r\n                                        value={profileData.activity_level}\r\n                                        onChange={(e) => handleInputChange('activity_level', e.target.value)}\r\n                                        disabled={!isEditing}\r\n                                        className=\"profile__select\"\r\n                                    >\r\n                                        <option value=\"sedentary\">Sedentary</option>\r\n                                        <option value=\"light\">Light</option>\r\n                                        <option value=\"moderate\">Moderate</option>\r\n                                        <option value=\"active\">Active</option>\r\n                                        <option value=\"very_active\">Very Active</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"profile__field-group\">\r\n                                    <div className=\"profile__field-header\">\r\n                                        <h3>Orientation</h3>\r\n                                    </div>\r\n                                    <select\r\n                                        id=\"orientation\"\r\n                                        name=\"orientation\"\r\n                                        value={profileData.orientation}\r\n                                        onChange={(e) => handleInputChange('orientation', e.target.value)}\r\n                                        disabled={!isEditing}\r\n                                        className=\"profile__select\"\r\n                                    >\r\n                                        <option value=\"\">Select orientation</option>\r\n                                        {orientationOptions.map(option => (\r\n                                            <option key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"profile__actions\">\r\n                            {isEditing ? (\r\n                                <>\r\n                                    <button\r\n                                        className={`profile__save-btn ${isLoading ? 'profile__save-btn--loading' : ''}`}\r\n                                        onClick={handleSave}\r\n                                        disabled={isLoading}\r\n                                    >\r\n                                        {isLoading ? (\r\n                                            <>\r\n                                                <div className=\"profile__loading-spinner\"></div>\r\n                                                Updating...\r\n                                            </>\r\n                                        ) : (\r\n                                            hasProfile ? 'Update Profile' : 'Save Profile'\r\n                                        )}\r\n                                    </button>\r\n                                    {hasProfile && (\r\n                                        <button\r\n                                            className=\"profile__cancel-btn\"\r\n                                            onClick={handleCancel}\r\n                                            disabled={isLoading}\r\n                                        >\r\n                                            Cancel\r\n                                        </button>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                hasProfile && (\r\n                                    <button\r\n                                        className=\"profile__edit-btn\"\r\n                                        onClick={() => setIsEditing(true)}\r\n                                    >\r\n                                        Edit Profile\r\n                                    </button>\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","export const BREAKPOINTS = {\r\n    mobile: 480,\r\n    tablet: 768,\r\n    desktop: 992,\r\n    wide: 1200\r\n} as const;\r\n\r\nexport const COLORS = {\r\n    primary: '#007bff',\r\n    secondary: '#6c757d',\r\n    success: '#28a745',\r\n    danger: '#dc3545',\r\n    warning: '#ffc107',\r\n    info: '#17a2b8',\r\n    light: '#f8f9fa',\r\n    dark: '#343a40',\r\n    white: '#ffffff',\r\n    black: '#000000'\r\n} as const;\r\n\r\nexport const TYPOGRAPHY = {\r\n    fontFamily: {\r\n        primary: '\"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\r\n        mono: '\"JetBrains Mono\", \"Fira Code\", Monaco, Consolas, monospace'\r\n    },\r\n    fontSize: {\r\n        xs: '0.75rem',\r\n        sm: '0.875rem',\r\n        base: '1rem',\r\n        lg: '1.125rem',\r\n        xl: '1.25rem',\r\n        '2xl': '1.5rem',\r\n        '3xl': '1.875rem',\r\n        '4xl': '2.25rem',\r\n        '5xl': '3rem',\r\n        '6xl': '4rem'\r\n    },\r\n    fontWeight: {\r\n        thin: 100,\r\n        light: 300,\r\n        normal: 400,\r\n        medium: 500,\r\n        semibold: 600,\r\n        bold: 700,\r\n        black: 900\r\n    }\r\n} as const;\r\n\r\nexport const SPACING = {\r\n    0: '0',\r\n    1: '0.25rem',\r\n    2: '0.5rem',\r\n    3: '0.75rem',\r\n    4: '1rem',\r\n    5: '1.25rem',\r\n    6: '1.5rem',\r\n    8: '2rem',\r\n    10: '2.5rem',\r\n    12: '3rem',\r\n    16: '4rem',\r\n    20: '5rem',\r\n    24: '6rem'\r\n} as const;\r\n\r\nexport const SHADOWS = {\r\n    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n    base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\r\n    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n    lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n    xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)'\r\n} as const;\r\n\r\nexport const NUTRITION_CONSTANTS = {\r\n    caloriesPerGramProtein: 4,\r\n    caloriesPerGramCarbs: 4,\r\n    caloriesPerGramFat: 9,\r\n    caloriesPerGramAlcohol: 7,\r\n    defaultMacroDistribution: {\r\n        protein: 0.25,\r\n        carbs: 0.45,\r\n        fat: 0.30\r\n    },\r\n    mealTypeIcons: {\r\n        breakfast: '🌅',\r\n        lunch: '☀️',\r\n        dinner: '🌙',\r\n        snack: '🍿'\r\n    },\r\n    nutritionIcons: {\r\n        calories: '🔥',\r\n        protein: '💪',\r\n        carbs: '🌾',\r\n        fat: '🥑'\r\n    }\r\n} as const;","import React, { useEffect, useRef } from 'react';\r\nimport { useContentManager } from '../hooks/useContentManager';\r\nimport { useCalorieTracker } from '../hooks/useCalorieTracker';\r\nimport { \r\n    getProgressPercentage,\r\n    calculateAverageCaloriesPerMeal,\r\n    calculateMacroRatio\r\n} from '../utils/nutritionCalculations';\r\nimport { NUTRITION_CONSTANTS } from '../config/constants';\r\nimport './Journal.css';\r\n\r\ninterface MealEntry {\r\n    id: string;\r\n    name: string;\r\n    calories: number;\r\n    protein: number;\r\n    carbs: number;\r\n    fat: number;\r\n    mealType: 'breakfast' | 'lunch' | 'dinner' | 'snack';\r\n    time: string;\r\n}\r\n\r\nconst Journal: React.FC = () => {\r\n    const pageRef = useRef<HTMLElement>(null);\r\n    const { setCurrentSection } = useContentManager();\r\n    const { todaysMeals, calorieData } = useCalorieTracker();\r\n\r\n    // Calculate nutrition goals from calorieData\r\n    const nutritionGoals = {\r\n        goalCalories: calorieData.targetCalories,\r\n        goalProtein: Math.round(calorieData.targetCalories * 0.3 / 4), // 30% of calories from protein\r\n        goalCarbs: Math.round(calorieData.targetCalories * 0.45 / 4), // 45% of calories from carbs\r\n        goalFat: Math.round(calorieData.targetCalories * 0.25 / 9)    // 25% of calories from fat\r\n    };\r\n\r\n    // Calculate current nutrition from today's meals\r\n    const nutritionSummary = {\r\n        totalCalories: calorieData.currentCalories,\r\n        totalProtein: todaysMeals.reduce((sum, meal) => sum + meal.protein, 0),\r\n        totalCarbs: todaysMeals.reduce((sum, meal) => sum + meal.carbs, 0),\r\n        totalFat: todaysMeals.reduce((sum, meal) => sum + meal.fat, 0),\r\n        ...nutritionGoals\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCurrentSection('journal');\r\n    }, [setCurrentSection]);\r\n\r\n    const getMealsByType = (type: MealEntry['mealType']) => {\r\n        return todaysMeals.filter(meal => meal.mealType === type);\r\n    };\r\n\r\n\r\n    const getTotalMealsByType = (type: MealEntry['mealType']) => {\r\n        const typeMeals = getMealsByType(type);\r\n        return typeMeals.reduce((sum, meal) => sum + meal.calories, 0);\r\n    };\r\n\r\n    return (\r\n        <section ref={pageRef} id=\"journal\" className=\"journal\">\r\n            <div className=\"journal__container\">\r\n                <div className=\"journal__header\">\r\n                    <h1 className=\"journal__title\">📝 Today's Health Journal</h1>\r\n                    <div className=\"journal__date\">\r\n                        {new Date().toLocaleDateString('en-US', {\r\n                            weekday: 'long',\r\n                            year: 'numeric',\r\n                            month: 'long',\r\n                            day: 'numeric'\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Nutrition Overview */}\r\n                <div className=\"journal__nutrition-overview\">\r\n                    <h2 className=\"journal__section-title\">Daily Nutrition Summary</h2>\r\n                    <div className=\"journal__nutrition-grid\">\r\n                        <div className=\"journal__nutrition-card journal__nutrition-card--calories\">\r\n                            <div className=\"journal__nutrition-icon\">{NUTRITION_CONSTANTS.nutritionIcons.calories}</div>\r\n                            <div className=\"journal__nutrition-content\">\r\n                                <div className=\"journal__nutrition-value\">\r\n                                    {Math.round(nutritionSummary.totalCalories)} / {nutritionSummary.goalCalories}\r\n                                </div>\r\n                                <div className=\"journal__nutrition-label\">Calories</div>\r\n                                <div className=\"journal__progress-bar\">\r\n                                    <div \r\n                                        className=\"journal__progress-fill journal__progress-fill--calories\"\r\n                                        style={{ width: `${getProgressPercentage(nutritionSummary.totalCalories, nutritionSummary.goalCalories)}%` }}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"journal__nutrition-card journal__nutrition-card--protein\">\r\n                            <div className=\"journal__nutrition-icon\">{NUTRITION_CONSTANTS.nutritionIcons.protein}</div>\r\n                            <div className=\"journal__nutrition-content\">\r\n                                <div className=\"journal__nutrition-value\">\r\n                                    {Math.round(nutritionSummary.totalProtein)}g / {nutritionSummary.goalProtein}g\r\n                                </div>\r\n                                <div className=\"journal__nutrition-label\">Protein</div>\r\n                                <div className=\"journal__progress-bar\">\r\n                                    <div \r\n                                        className=\"journal__progress-fill journal__progress-fill--protein\"\r\n                                        style={{ width: `${getProgressPercentage(nutritionSummary.totalProtein, nutritionSummary.goalProtein)}%` }}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"journal__nutrition-card journal__nutrition-card--carbs\">\r\n                            <div className=\"journal__nutrition-icon\">{NUTRITION_CONSTANTS.nutritionIcons.carbs}</div>\r\n                            <div className=\"journal__nutrition-content\">\r\n                                <div className=\"journal__nutrition-value\">\r\n                                    {Math.round(nutritionSummary.totalCarbs)}g / {nutritionSummary.goalCarbs}g\r\n                                </div>\r\n                                <div className=\"journal__nutrition-label\">Carbs</div>\r\n                                <div className=\"journal__progress-bar\">\r\n                                    <div \r\n                                        className=\"journal__progress-fill journal__progress-fill--carbs\"\r\n                                        style={{ width: `${getProgressPercentage(nutritionSummary.totalCarbs, nutritionSummary.goalCarbs)}%` }}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"journal__nutrition-card journal__nutrition-card--fat\">\r\n                            <div className=\"journal__nutrition-icon\">{NUTRITION_CONSTANTS.nutritionIcons.fat}</div>\r\n                            <div className=\"journal__nutrition-content\">\r\n                                <div className=\"journal__nutrition-value\">\r\n                                    {Math.round(nutritionSummary.totalFat)}g / {nutritionSummary.goalFat}g\r\n                                </div>\r\n                                <div className=\"journal__nutrition-label\">Fat</div>\r\n                                <div className=\"journal__progress-bar\">\r\n                                    <div \r\n                                        className=\"journal__progress-fill journal__progress-fill--fat\"\r\n                                        style={{ width: `${getProgressPercentage(nutritionSummary.totalFat, nutritionSummary.goalFat)}%` }}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Detailed Meal Timeline */}\r\n                <div className=\"journal__meals-timeline\">\r\n                    <h2 className=\"journal__section-title\">Today's Detailed Meal Log</h2>\r\n                    \r\n                    {(['breakfast', 'lunch', 'dinner', 'snack'] as const).map(mealType => {\r\n                        const typeMeals = getMealsByType(mealType);\r\n                        const typeCalories = getTotalMealsByType(mealType);\r\n\r\n                        if (typeMeals.length === 0) return null;\r\n\r\n                        return (\r\n                            <div key={mealType} className=\"journal__meal-section\">\r\n                                <div className=\"journal__meal-header\">\r\n                                    <div className=\"journal__meal-type\">\r\n                                        <span className=\"journal__meal-icon\">\r\n                                            {NUTRITION_CONSTANTS.mealTypeIcons[mealType]}\r\n                                        </span>\r\n                                        <h3 className=\"journal__meal-title\">\r\n                                            {mealType.charAt(0).toUpperCase() + mealType.slice(1)}\r\n                                        </h3>\r\n                                    </div>\r\n                                    <div className=\"journal__meal-summary\">\r\n                                        <span className=\"journal__meal-count\">\r\n                                            {typeMeals.length} {typeMeals.length === 1 ? 'item' : 'items'}\r\n                                        </span>\r\n                                        <span className=\"journal__meal-calories\">\r\n                                            {Math.round(typeCalories)} cal\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"journal__meal-items\">\r\n                                    {typeMeals.map(meal => (\r\n                                        <div key={meal.id} className=\"journal__meal-item\">\r\n                                            <div className=\"journal__meal-time\">\r\n                                                {meal.time}\r\n                                            </div>\r\n                                            <div className=\"journal__meal-details\">\r\n                                                <div className=\"journal__meal-name\">{meal.name}</div>\r\n                                                <div className=\"journal__meal-nutrition\">\r\n                                                    <span className=\"journal__nutrition-item\">\r\n                                                        {NUTRITION_CONSTANTS.nutritionIcons.calories} {meal.calories} cal\r\n                                                    </span>\r\n                                                    <span className=\"journal__nutrition-item\">\r\n                                                        {NUTRITION_CONSTANTS.nutritionIcons.protein} {meal.protein}g protein\r\n                                                    </span>\r\n                                                    <span className=\"journal__nutrition-item\">\r\n                                                        {NUTRITION_CONSTANTS.nutritionIcons.carbs} {meal.carbs}g carbs\r\n                                                    </span>\r\n                                                    <span className=\"journal__nutrition-item\">\r\n                                                        {NUTRITION_CONSTANTS.nutritionIcons.fat} {meal.fat}g fat\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n                {/* Quick Stats */}\r\n                <div className=\"journal__quick-stats\">\r\n                    <h2 className=\"journal__section-title\">Today's Quick Stats</h2>\r\n                    <div className=\"journal__stats-grid\">\r\n                        <div className=\"journal__stat-card\">\r\n                            <div className=\"journal__stat-value\">{todaysMeals.length}</div>\r\n                            <div className=\"journal__stat-label\">Total Meals/Snacks</div>\r\n                        </div>\r\n                        <div className=\"journal__stat-card\">\r\n                            <div className=\"journal__stat-value\">\r\n                                {Math.round((nutritionSummary.totalCalories / nutritionSummary.goalCalories) * 100)}%\r\n                            </div>\r\n                            <div className=\"journal__stat-label\">Daily Goal Progress</div>\r\n                        </div>\r\n                        <div className=\"journal__stat-card\">\r\n                            <div className=\"journal__stat-value\">\r\n                                {calculateAverageCaloriesPerMeal(nutritionSummary.totalCalories, todaysMeals.length)}\r\n                            </div>\r\n                            <div className=\"journal__stat-label\">Avg Calories per Meal</div>\r\n                        </div>\r\n                        <div className=\"journal__stat-card\">\r\n                            <div className=\"journal__stat-value\">\r\n                                {calculateMacroRatio(nutritionSummary.totalProtein, nutritionSummary.totalCalories)}%\r\n                            </div>\r\n                            <div className=\"journal__stat-label\">Protein Ratio</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Journal;","// pages/AuthCallback.tsx - OAuth callback handler for both popup and redirect authentication\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SupabaseService from '../services/SupabaseService';\r\n\r\nconst AuthCallback: React.FC = () => {\r\n    const [status, setStatus] = useState<'processing' | 'success' | 'error'>('processing');\r\n    const [message, setMessage] = useState('Completing sign in...');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const handleCallback = async () => {\r\n            try {\r\n                console.log('Auth callback page loaded');\r\n                setStatus('processing');\r\n                setMessage('Completing sign in...');\r\n                \r\n                // Handle the OAuth callback\r\n                const result = await SupabaseService.handleOAuthCallback();\r\n                \r\n                if (result.success) {\r\n                    console.log('OAuth callback successful');\r\n                    setStatus('success');\r\n                    setMessage('Sign in successful! Redirecting...');\r\n                    \r\n                    // If this is NOT a popup (regular redirect), redirect to home after success\r\n                    if (!window.opener || window.opener === window) {\r\n                        setTimeout(() => {\r\n                            navigate('/', { replace: true });\r\n                        }, 1500);\r\n                    }\r\n                    // If it IS a popup, the SupabaseService will handle closing it\r\n                } else {\r\n                    console.error('OAuth callback failed:', result.error);\r\n                    setStatus('error');\r\n                    setMessage(result.error || 'Authentication failed. Please try again.');\r\n                    \r\n                    // If this is NOT a popup, redirect to home after error\r\n                    if (!window.opener || window.opener === window) {\r\n                        setTimeout(() => {\r\n                            navigate('/', { replace: true });\r\n                        }, 3000);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Auth callback error:', error);\r\n                setStatus('error');\r\n                setMessage('Authentication callback failed. Please try again.');\r\n                \r\n                // Send error message to parent window if this is a popup\r\n                if (window.opener && window.opener !== window) {\r\n                    window.opener.postMessage({\r\n                        type: 'SUPABASE_AUTH_ERROR',\r\n                        error: { message: 'Authentication callback failed' }\r\n                    }, window.location.origin);\r\n                    window.close();\r\n                } else {\r\n                    // If not a popup, redirect to home\r\n                    setTimeout(() => {\r\n                        navigate('/', { replace: true });\r\n                    }, 3000);\r\n                }\r\n            }\r\n        };\r\n\r\n        handleCallback();\r\n    }, [navigate]);\r\n\r\n    return (\r\n        <div style={{ \r\n            display: 'flex', \r\n            justifyContent: 'center', \r\n            alignItems: 'center', \r\n            minHeight: '100vh',\r\n            fontFamily: 'Arial, sans-serif',\r\n            backgroundColor: '#f5f5f5'\r\n        }}>\r\n            <div style={{\r\n                textAlign: 'center',\r\n                padding: '2rem',\r\n                backgroundColor: 'white',\r\n                borderRadius: '8px',\r\n                boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\r\n            }}>\r\n                {status === 'processing' && (\r\n                    <div style={{\r\n                        width: '40px',\r\n                        height: '40px',\r\n                        border: '3px solid #e3e3e3',\r\n                        borderTop: '3px solid #007bff',\r\n                        borderRadius: '50%',\r\n                        animation: 'spin 1s linear infinite',\r\n                        margin: '0 auto 1rem'\r\n                    }}></div>\r\n                )}\r\n                {status === 'success' && (\r\n                    <div style={{\r\n                        fontSize: '2rem',\r\n                        color: '#28a745',\r\n                        margin: '0 auto 1rem'\r\n                    }}>✓</div>\r\n                )}\r\n                {status === 'error' && (\r\n                    <div style={{\r\n                        fontSize: '2rem',\r\n                        color: '#dc3545',\r\n                        margin: '0 auto 1rem'\r\n                    }}>✗</div>\r\n                )}\r\n                <p style={{ \r\n                    margin: 0, \r\n                    color: status === 'error' ? '#dc3545' : status === 'success' ? '#28a745' : '#666' \r\n                }}>\r\n                    {message}\r\n                </p>\r\n                <style>{`\r\n                    @keyframes spin {\r\n                        0% { transform: rotate(0deg); }\r\n                        100% { transform: rotate(360deg); }\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthCallback;","interface LoadingSpinnerProps {\r\n    size?: 'sm' | 'md' | 'lg';\r\n    message?: string;\r\n}\r\n\r\nconst LoadingSpinner = ({ size = 'md', message = 'Loading...' }: LoadingSpinnerProps) => (\r\n    <div className={`loading-spinner loading-spinner--${size}`}>\r\n        <div className=\"loading-spinner__circle\"></div>\r\n        {message && <p className=\"loading-spinner__message\">{message}</p>}\r\n    </div>\r\n);\r\n\r\n\r\nexport { LoadingSpinner };","// components/auth/ProtectedRoute.tsx\r\nimport { ReactNode, useCallback } from 'react';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { LoadingSpinner } from '../../components/ui/LoadingSpinner';\r\nimport './ProtectedRoute.css';\r\n\r\ninterface ProtectedRouteProps {\r\n    children: ReactNode;\r\n    requireAdmin?: boolean;\r\n    fallback?: ReactNode;\r\n}\r\n\r\nconst ProtectedRoute = ({ children, requireAdmin = false, fallback = null }: ProtectedRouteProps) => {\r\n    const { loading, isAuthenticated, isAdmin, user, signInWithGoogle, authLoading } = useAuth();\r\n\r\n    const handleSignIn = useCallback(async () => {\r\n        if (authLoading) return;\r\n        \r\n        try {\r\n            const result = await signInWithGoogle();\r\n            if (!result.success) {\r\n                console.error('Sign in failed:', result.error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Sign in error:', error);\r\n        }\r\n    }, [signInWithGoogle, authLoading]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"protected-route protected-route--loading\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        return (\r\n            <div className=\"protected-route protected-route--unauthorized\">\r\n                <div className=\"protected-route__container\">\r\n                    <h2 className=\"protected-route__title\">Sign In Required</h2>\r\n                    <p className=\"protected-route__message\">\r\n                        Please sign in to access this page.\r\n                    </p>\r\n                    <button\r\n                        className=\"protected-route__signin-btn\"\r\n                        onClick={handleSignIn}\r\n                        disabled={authLoading}\r\n                        type=\"button\"\r\n                    >\r\n                        {authLoading ? (\r\n                            <>\r\n                                <span className=\"protected-route__signin-icon\">⏳</span>\r\n                                Signing in...\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <span className=\"protected-route__signin-icon\">🔐</span>\r\n                                Sign In with Google\r\n                            </>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (requireAdmin && !isAdmin) {\r\n        return (\r\n            <div className=\"protected-route protected-route--unauthorized\">\r\n                <div className=\"protected-route__container\">\r\n                    <h2 className=\"protected-route__title\">Access Denied</h2>\r\n                    <p className=\"protected-route__message\">\r\n                        You don't have admin privileges to access this area.\r\n                    </p>\r\n                    <p className=\"protected-route__user-info\">\r\n                        Signed in as: {user?.email}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <>{children}</>;\r\n};\r\n\r\ninterface AdminRouteProps {\r\n    children: ReactNode;\r\n    fallback?: ReactNode;\r\n}\r\n\r\nexport const AdminRoute = ({ children, fallback = null }: AdminRouteProps) => (\r\n    <ProtectedRoute requireAdmin={true} fallback={fallback}>\r\n        {children}\r\n    </ProtectedRoute>\r\n);\r\n\r\nexport default ProtectedRoute;","/**\r\n * Simplified useNavigation Hook - Works with centralized NavigationManager configuration\r\n */\r\n\r\nimport { useEffect, useState, useCallback, useRef, useMemo } from 'react';\r\nimport NavigationManager from '../managers/NavigationManager';\r\nimport type {\r\n    NavigationState,\r\n    NavigationConfig,\r\n    UseNavigationOptions,\r\n    UseNavigationReturn,\r\n    NavigationEvent\r\n} from '../types/navigation';\r\n\r\nconst useNavigation = (options: UseNavigationOptions = {}): UseNavigationReturn => {\r\n    const { autoInit = true, onStateChange } = options;\r\n\r\n    // Stable refs\r\n    const managerRef = useRef<NavigationManager | null>(null);\r\n    const unsubscribeRef = useRef<(() => void) | null>(null);\r\n    const onStateChangeRef = useRef(onStateChange);\r\n\r\n    // Update ref without causing re-render\r\n    onStateChangeRef.current = onStateChange;\r\n\r\n    const [state, setState] = useState<NavigationState>(() => {\r\n        const manager = NavigationManager.getInstance();\r\n        return manager.getState();\r\n    });\r\n\r\n    const [config, setConfig] = useState<NavigationConfig>(() => ({\r\n        items: [],\r\n        animationDuration: 300,\r\n        radius: 120,\r\n        centerSize: 60,\r\n        itemSize: 50,\r\n        autoClose: true,\r\n        closeDelay: 1000,\r\n        enableKeyboard: true,\r\n        enableTouch: true,\r\n        centerIcon: 'menu',\r\n        centerLabel: 'Menu'\r\n    }));\r\n\r\n    // Initialize manager once\r\n    useEffect(() => {\r\n        if (!autoInit) return;\r\n\r\n        managerRef.current = NavigationManager.getInstance();\r\n\r\n        // Get initial config and state from centralized manager\r\n        setConfig(managerRef.current.getConfig());\r\n        setState(managerRef.current.getState());\r\n\r\n        // Subscribe to state changes\r\n        unsubscribeRef.current = managerRef.current.subscribe((newState) => {\r\n            setState(newState);\r\n            onStateChangeRef.current?.(newState);\r\n        });\r\n\r\n        // Listen for config updates\r\n        const handleConfigUpdate = () => {\r\n            if (managerRef.current) {\r\n                setConfig(managerRef.current.getConfig());\r\n            }\r\n        };\r\n\r\n        document.addEventListener('navigation:config-updated', handleConfigUpdate);\r\n\r\n        return () => {\r\n            unsubscribeRef.current?.();\r\n            unsubscribeRef.current = null;\r\n            document.removeEventListener('navigation:config-updated', handleConfigUpdate);\r\n        };\r\n    }, [autoInit]);\r\n\r\n    // Memoized actions\r\n    const actions = useMemo(() => ({\r\n        open: () => managerRef.current?.open(),\r\n        close: () => managerRef.current?.close(),\r\n        toggle: () => managerRef.current?.toggle(),\r\n        navigate: (itemId: string) => managerRef.current?.navigate(itemId),\r\n        setHovered: (itemId: string | null) => managerRef.current?.setHoveredItem(itemId),\r\n        updateAuthState: (isAuthenticated: boolean) => managerRef.current?.updateAuthState(isAuthenticated)\r\n    }), []);\r\n\r\n    return { state, actions, config };\r\n};\r\n\r\n/**\r\n * Navigation Events Hook - No changes needed\r\n */\r\nexport const useNavigationEvents = (\r\n    eventType: NavigationEvent['type'] | 'all',\r\n    callback: (event: NavigationEvent) => void,\r\n    deps: React.DependencyList = []\r\n) => {\r\n    const callbackRef = useRef(callback);\r\n    callbackRef.current = callback;\r\n\r\n    useEffect(() => {\r\n        const handleEvent = (e: Event) => {\r\n            const customEvent = e as CustomEvent;\r\n            const event: NavigationEvent = {\r\n                type: customEvent.type.replace('navigation:', '') as NavigationEvent['type'],\r\n                item: customEvent.detail?.item,\r\n                state: customEvent.detail?.state || NavigationManager.getInstance().getState(),\r\n                timestamp: Date.now()\r\n            };\r\n\r\n            if (eventType === 'all' || event.type === eventType) {\r\n                callbackRef.current(event);\r\n            }\r\n        };\r\n\r\n        const events = eventType === 'all'\r\n            ? ['navigation:open', 'navigation:close', 'navigation:navigate', 'navigation:navigate-blocked', 'navigation:hover', 'navigation:focus', 'navigation:config-updated']\r\n            : [`navigation:${eventType}`];\r\n\r\n        events.forEach(eventName => {\r\n            document.addEventListener(eventName, handleEvent);\r\n        });\r\n\r\n        return () => {\r\n            events.forEach(eventName => {\r\n                document.removeEventListener(eventName, handleEvent);\r\n            });\r\n        };\r\n    }, [eventType, ...deps]);\r\n};\r\n\r\n/**\r\n * Navigation Item Hook - No changes needed\r\n */\r\nexport const useNavigationItem = (itemId: string) => {\r\n    const { state, actions } = useNavigation();\r\n\r\n    return useMemo(() => ({\r\n        isActive: state.activeItem === itemId,\r\n        isHovered: state.hoveredItem === itemId,\r\n        isFocused: state.focusedItem === itemId,\r\n        navigate: () => actions.navigate(itemId),\r\n        setHovered: (hovered: boolean) => actions.setHovered(hovered ? itemId : null)\r\n    }), [state.activeItem, state.hoveredItem, state.focusedItem, itemId, actions]);\r\n};\r\n\r\n/**\r\n * Auth-aware Navigation Hook - Simplified to work with centralized manager\r\n */\r\nexport const useAuthNavigation = (isAuthenticated: boolean, authLoading: boolean = false) => {\r\n    const navigation = useNavigation();\r\n\r\n    // Update auth state in NavigationManager when auth state changes\r\n    useEffect(() => {\r\n        if (!authLoading && navigation.actions.updateAuthState) {\r\n            navigation.actions.updateAuthState(isAuthenticated);\r\n        }\r\n    }, [isAuthenticated, authLoading, navigation.actions]);\r\n\r\n    return navigation;\r\n};\r\n\r\nexport default useNavigation;","// src/managers/ScrollManager.ts\r\n/**\r\n * ScrollManager - Handles all scroll-based animations and tracking\r\n * Implements bidirectional animations with 60fps optimization\r\n */\r\n\r\ninterface ScrollAnimationConfig {\r\n    threshold: number;\r\n    rootMargin: string;\r\n    triggerOnce: boolean;\r\n    reverse: boolean;\r\n}\r\n\r\ninterface AnimationElement {\r\n    element: HTMLElement;\r\n    animation: string;\r\n    config: ScrollAnimationConfig;\r\n    isVisible: boolean;\r\n    hasAnimated: boolean;\r\n}\r\n\r\nclass ScrollManager {\r\n    private static instance: ScrollManager;\r\n    private observer: IntersectionObserver | null = null;\r\n    private elements: Map<string, AnimationElement> = new Map();\r\n    private scrollPosition = 0;\r\n    private isScrolling = false;\r\n    private scrollTimeout: number | null = null;\r\n    private callbacks: Set<(position: number, direction: 'up' | 'down') => void> = new Set();\r\n\r\n    private readonly defaultConfig: ScrollAnimationConfig = {\r\n        threshold: 0.1,\r\n        rootMargin: '0px 0px -50px 0px',\r\n        triggerOnce: false,\r\n        reverse: true\r\n    };\r\n\r\n    private constructor() {\r\n        this.init();\r\n    }\r\n\r\n    static getInstance(): ScrollManager {\r\n        if (!ScrollManager.instance) {\r\n            ScrollManager.instance = new ScrollManager();\r\n        }\r\n        return ScrollManager.instance;\r\n    }\r\n\r\n    private init(): void {\r\n        this.setupIntersectionObserver();\r\n        this.setupScrollListener();\r\n        this.bindMethods();\r\n    }\r\n\r\n    private bindMethods(): void {\r\n        this.handleIntersection = this.handleIntersection.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n    }\r\n\r\n    private setupIntersectionObserver(): void {\r\n        const config = {\r\n            threshold: [0, 0.1, 0.25, 0.5, 0.75, 1],\r\n            rootMargin: this.defaultConfig.rootMargin\r\n        };\r\n\r\n        this.observer = new IntersectionObserver(this.handleIntersection, config);\r\n    }\r\n\r\n    private setupScrollListener(): void {\r\n        let ticking = false;\r\n\r\n        const scrollHandler = () => {\r\n            if (!ticking) {\r\n                requestAnimationFrame(() => {\r\n                    this.handleScroll();\r\n                    ticking = false;\r\n                });\r\n                ticking = true;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('scroll', scrollHandler, { passive: true });\r\n    }\r\n\r\n    private handleIntersection(entries: IntersectionObserverEntry[]): void {\r\n        entries.forEach(entry => {\r\n            const elementId = entry.target.getAttribute('data-scroll-id');\r\n            if (!elementId) return;\r\n\r\n            const animElement = this.elements.get(elementId);\r\n            if (!animElement) return;\r\n\r\n            const isVisible = entry.isIntersecting;\r\n            const wasVisible = animElement.isVisible;\r\n\r\n            // Update visibility state\r\n            animElement.isVisible = isVisible;\r\n\r\n            // Handle animation triggers\r\n            if (isVisible && !wasVisible) {\r\n                this.triggerAnimation(elementId, 'enter');\r\n            } else if (!isVisible && wasVisible && animElement.config.reverse) {\r\n                this.triggerAnimation(elementId, 'exit');\r\n            }\r\n        });\r\n    }\r\n\r\n    private handleScroll(): void {\r\n        const currentPosition = window.pageYOffset || document.documentElement.scrollTop;\r\n        const direction = currentPosition > this.scrollPosition ? 'down' : 'up';\r\n\r\n        // Update scroll state\r\n        this.scrollPosition = currentPosition;\r\n        this.isScrolling = true;\r\n\r\n        // Clear existing timeout\r\n        if (this.scrollTimeout) {\r\n            clearTimeout(this.scrollTimeout);\r\n        }\r\n\r\n        // Set scroll end timeout\r\n        this.scrollTimeout = window.setTimeout(() => {\r\n            this.isScrolling = false;\r\n        }, 150);\r\n\r\n        // Notify subscribers\r\n        this.callbacks.forEach(callback => {\r\n            callback(currentPosition, direction);\r\n        });\r\n    }\r\n\r\n    public register(\r\n        element: HTMLElement,\r\n        animation: string,\r\n        config: Partial<ScrollAnimationConfig> = {}\r\n    ): string {\r\n        const id = `scroll-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n        const finalConfig = { ...this.defaultConfig, ...config };\r\n\r\n        // Set data attribute for identification\r\n        element.setAttribute('data-scroll-id', id);\r\n\r\n        // Store element data\r\n        this.elements.set(id, {\r\n            element,\r\n            animation,\r\n            config: finalConfig,\r\n            isVisible: false,\r\n            hasAnimated: false\r\n        });\r\n\r\n        // Start observing\r\n        if (this.observer) {\r\n            this.observer.observe(element);\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    public unregister(id: string): void {\r\n        const animElement = this.elements.get(id);\r\n        if (animElement && this.observer) {\r\n            this.observer.unobserve(animElement.element);\r\n            animElement.element.removeAttribute('data-scroll-id');\r\n        }\r\n        this.elements.delete(id);\r\n    }\r\n\r\n    private triggerAnimation(id: string, type: 'enter' | 'exit'): void {\r\n        const animElement = this.elements.get(id);\r\n        if (!animElement) return;\r\n\r\n        const { element, animation, config } = animElement;\r\n\r\n        // Check if should animate\r\n        if (config.triggerOnce && animElement.hasAnimated && type === 'enter') {\r\n            return;\r\n        }\r\n\r\n        // Apply animation classes\r\n        const animationClass = type === 'enter' ? `${animation}-enter` : `${animation}-exit`;\r\n\r\n        // Remove existing animation classes\r\n        element.classList.remove(`${animation}-enter`, `${animation}-exit`);\r\n\r\n        // Force reflow to ensure class removal takes effect\r\n        void element.offsetHeight;\r\n\r\n        // Add new animation class\r\n        element.classList.add(animationClass);\r\n\r\n        // Mark as animated\r\n        if (type === 'enter') {\r\n            animElement.hasAnimated = true;\r\n        }\r\n\r\n        // Emit custom event for component-level handling\r\n        const event = new CustomEvent('scrollAnimation', {\r\n            detail: { id, type, animation, element }\r\n        });\r\n        element.dispatchEvent(event);\r\n    }\r\n\r\n    public onScroll(callback: (position: number, direction: 'up' | 'down') => void): () => void {\r\n        this.callbacks.add(callback);\r\n\r\n        // Return unsubscribe function\r\n        return () => {\r\n            this.callbacks.delete(callback);\r\n        };\r\n    }\r\n\r\n    public getScrollPosition(): number {\r\n        return this.scrollPosition;\r\n    }\r\n\r\n    public isCurrentlyScrolling(): boolean {\r\n        return this.isScrolling;\r\n    }\r\n\r\n    public scrollTo(target: number | HTMLElement, smooth = true): void {\r\n        const options: ScrollToOptions = {\r\n            behavior: smooth ? 'smooth' : 'auto'\r\n        };\r\n\r\n        if (typeof target === 'number') {\r\n            options.top = target;\r\n        } else {\r\n            const rect = target.getBoundingClientRect();\r\n            options.top = window.pageYOffset + rect.top;\r\n        }\r\n\r\n        window.scrollTo(options);\r\n    }\r\n\r\n    public destroy(): void {\r\n        if (this.observer) {\r\n            this.observer.disconnect();\r\n            this.observer = null;\r\n        }\r\n\r\n        if (this.scrollTimeout) {\r\n            clearTimeout(this.scrollTimeout);\r\n        }\r\n\r\n        this.elements.clear();\r\n        this.callbacks.clear();\r\n    }\r\n}\r\n\r\nexport default ScrollManager;","/**\r\n * PerformanceManager - Handles performance monitoring and optimization\r\n * Fixed TypeScript issues with proper type assertions\r\n */\r\n\r\n// Extended performance interfaces for better type safety\r\ninterface PerformanceEventTiming extends PerformanceEntry {\r\n    processingStart: number;\r\n    processingEnd: number;\r\n    cancelable?: boolean;\r\n}\r\n\r\ninterface PerformanceLayoutShiftEntry extends PerformanceEntry {\r\n    value: number;\r\n    hadRecentInput: boolean;\r\n    lastInputTime: number;\r\n    sources: any[];\r\n}\r\n\r\ninterface PerformanceLargestContentfulPaintEntry extends PerformanceEntry {\r\n    renderTime: number;\r\n    loadTime: number;\r\n    size: number;\r\n    id: string;\r\n    url: string;\r\n    element: Element | null;\r\n}\r\n\r\ninterface PerformanceMetrics {\r\n    fcp: number | null; // First Contentful Paint\r\n    lcp: number | null; // Largest Contentful Paint\r\n    fid: number | null; // First Input Delay\r\n    cls: number | null; // Cumulative Layout Shift\r\n    ttfb: number | null; // Time to First Byte\r\n}\r\n\r\nclass PerformanceManager {\r\n    private static instance: PerformanceManager;\r\n    private metrics: PerformanceMetrics = {\r\n        fcp: null,\r\n        lcp: null,\r\n        fid: null,\r\n        cls: null,\r\n        ttfb: null\r\n    };\r\n    private observers: Map<string, PerformanceObserver> = new Map();\r\n\r\n    private constructor() {\r\n        this.init();\r\n    }\r\n\r\n    static getInstance(): PerformanceManager {\r\n        if (!PerformanceManager.instance) {\r\n            PerformanceManager.instance = new PerformanceManager();\r\n        }\r\n        return PerformanceManager.instance;\r\n    }\r\n\r\n    private init(): void {\r\n        if (typeof window === 'undefined') return;\r\n\r\n        this.observeWebVitals();\r\n        this.observeResourceTiming();\r\n        this.setupErrorTracking();\r\n    }\r\n\r\n    private observeWebVitals(): void {\r\n        // Observe paint metrics (FCP)\r\n        if ('PerformanceObserver' in window) {\r\n            const paintObserver = new PerformanceObserver((list) => {\r\n                for (const entry of list.getEntries()) {\r\n                    if (entry.name === 'first-contentful-paint') {\r\n                        this.metrics.fcp = entry.startTime;\r\n                        this.reportMetric('fcp', entry.startTime);\r\n                    }\r\n                }\r\n            });\r\n            paintObserver.observe({ entryTypes: ['paint'] });\r\n            this.observers.set('paint', paintObserver);\r\n\r\n            // Observe LCP with proper typing\r\n            const lcpObserver = new PerformanceObserver((list) => {\r\n                const entries = list.getEntries();\r\n                const lastEntry = entries[entries.length - 1] as PerformanceLargestContentfulPaintEntry;\r\n                this.metrics.lcp = lastEntry.startTime;\r\n                this.reportMetric('lcp', lastEntry.startTime);\r\n            });\r\n            lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });\r\n            this.observers.set('lcp', lcpObserver);\r\n\r\n            // Observe FID with proper type assertion\r\n            const fidObserver = new PerformanceObserver((list) => {\r\n                for (const entry of list.getEntries()) {\r\n                    // Type assertion for PerformanceEventTiming\r\n                    const eventEntry = entry as PerformanceEventTiming;\r\n                    if (eventEntry.processingStart !== undefined) {\r\n                        this.metrics.fid = eventEntry.processingStart - eventEntry.startTime;\r\n                        this.reportMetric('fid', this.metrics.fid);\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Use try-catch for better error handling\r\n            try {\r\n                fidObserver.observe({ entryTypes: ['first-input'] });\r\n                this.observers.set('fid', fidObserver);\r\n            } catch (error) {\r\n                console.warn('First Input Delay observation not supported:', error);\r\n            }\r\n\r\n            // Observe CLS with proper typing\r\n            let clsValue = 0;\r\n            const clsObserver = new PerformanceObserver((list) => {\r\n                for (const entry of list.getEntries()) {\r\n                    const layoutShiftEntry = entry as PerformanceLayoutShiftEntry;\r\n                    if (!layoutShiftEntry.hadRecentInput) {\r\n                        clsValue += layoutShiftEntry.value;\r\n                    }\r\n                }\r\n                this.metrics.cls = clsValue;\r\n                this.reportMetric('cls', clsValue);\r\n            });\r\n\r\n            try {\r\n                clsObserver.observe({ entryTypes: ['layout-shift'] });\r\n                this.observers.set('cls', clsObserver);\r\n            } catch (error) {\r\n                console.warn('Cumulative Layout Shift observation not supported:', error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private observeResourceTiming(): void {\r\n        if ('PerformanceObserver' in window) {\r\n            const resourceObserver = new PerformanceObserver((list) => {\r\n                for (const entry of list.getEntries()) {\r\n                    this.analyzeResourceTiming(entry as PerformanceResourceTiming);\r\n                }\r\n            });\r\n            resourceObserver.observe({ entryTypes: ['resource'] });\r\n            this.observers.set('resource', resourceObserver);\r\n        }\r\n    }\r\n\r\n    private analyzeResourceTiming(entry: PerformanceResourceTiming): void {\r\n        const duration = entry.responseEnd - entry.startTime;\r\n\r\n        // Log slow resources (>1s)\r\n        if (duration > 1000) {\r\n            console.warn(`Slow resource detected: ${entry.name} took ${duration}ms`);\r\n        }\r\n\r\n        // Track TTFB for main document\r\n        if (entry.initiatorType === 'navigation') {\r\n            this.metrics.ttfb = entry.responseStart - entry.startTime;\r\n            this.reportMetric('ttfb', this.metrics.ttfb);\r\n        }\r\n    }\r\n\r\n    private setupErrorTracking(): void {\r\n        window.addEventListener('error', (event) => {\r\n            this.reportError({\r\n                type: 'javascript',\r\n                message: event.message,\r\n                filename: event.filename,\r\n                lineno: event.lineno,\r\n                colno: event.colno,\r\n                stack: event.error?.stack\r\n            });\r\n        });\r\n\r\n        window.addEventListener('unhandledrejection', (event) => {\r\n            this.reportError({\r\n                type: 'promise',\r\n                message: event.reason?.message || 'Unhandled Promise Rejection',\r\n                stack: event.reason?.stack\r\n            });\r\n        });\r\n    }\r\n\r\n    private reportMetric(name: string, value: number): void {\r\n        // In development, log to console\r\n        if (import.meta.env.MODE === 'development') {\r\n            console.log(`Performance Metric - ${name.toUpperCase()}: ${value}ms`);\r\n        }\r\n\r\n        // Report to analytics service\r\n        this.sendToAnalytics('performance_metric', {\r\n            metric_name: name,\r\n            metric_value: value,\r\n            url: window.location.href,\r\n            timestamp: Date.now()\r\n        });\r\n    }\r\n\r\n    private reportError(error: any): void {\r\n        console.error('Application Error:', error);\r\n\r\n        this.sendToAnalytics('error', {\r\n            ...error,\r\n            url: window.location.href,\r\n            userAgent: navigator.userAgent,\r\n            timestamp: Date.now()\r\n        });\r\n    }\r\n\r\n    private sendToAnalytics(eventName: string, data: any): void {\r\n        // Placeholder for analytics integration\r\n        // This will be implemented when AnalyticsManager is created\r\n        if (import.meta.env.MODE === 'development') {\r\n            console.log(`Analytics Event: ${eventName}`, data);\r\n        }\r\n    }\r\n\r\n    public getMetrics(): PerformanceMetrics {\r\n        return { ...this.metrics };\r\n    }\r\n\r\n    public startMark(name: string): void {\r\n        if ('performance' in window && performance.mark) {\r\n            performance.mark(`${name}-start`);\r\n        }\r\n    }\r\n\r\n    public endMark(name: string): number | null {\r\n        if ('performance' in window && performance.mark && performance.measure) {\r\n            performance.mark(`${name}-end`);\r\n            performance.measure(name, `${name}-start`, `${name}-end`);\r\n\r\n            const entries = performance.getEntriesByName(name, 'measure');\r\n            return entries.length > 0 ? entries[0].duration : null;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.observers.forEach(observer => observer.disconnect());\r\n        this.observers.clear();\r\n    }\r\n}\r\n\r\nexport default PerformanceManager;","/**\r\n * Application Configuration Manager\r\n * Simplified for development environment only\r\n */\r\n\r\nexport interface AppConfig {\r\n    // Environment\r\n    env: 'development' | 'production';\r\n    isDevelopment: boolean;\r\n    isProduction: boolean;\r\n\r\n    // App Info\r\n    name: string;\r\n    version: string;\r\n    description: string;\r\n\r\n    // API Configuration\r\n    api: {\r\n        baseUrl: string;\r\n        timeout: number;\r\n    };\r\n\r\n    // Supabase Configuration\r\n    supabase: {\r\n        url: string;\r\n        anonKey: string;\r\n    };\r\n\r\n    // Development Features\r\n    debug: {\r\n        enabled: boolean;\r\n        showPanel: boolean;\r\n        enableLogging: boolean;\r\n        enablePerformanceMonitoring: boolean;\r\n    };\r\n\r\n    // Feature Flags\r\n    features: {\r\n        experimentalFeatures: boolean;\r\n    };\r\n}\r\n\r\n/**\r\n * Get configuration value with type safety\r\n */\r\nconst getEnvVar = (key: string, defaultValue?: string): string => {\r\n    const value = import.meta.env[key];\r\n    if (value === undefined && defaultValue === undefined) {\r\n        console.warn(`Environment variable ${key} is not defined`);\r\n        return '';\r\n    }\r\n    return value || defaultValue || '';\r\n};\r\n\r\n/**\r\n * Get boolean environment variable\r\n */\r\nconst getBooleanEnvVar = (key: string, defaultValue = false): boolean => {\r\n    const value = import.meta.env[key];\r\n    if (value === undefined) return defaultValue;\r\n    return value === 'true' || value === '1' || value === 'yes';\r\n};\r\n\r\n/**\r\n * Get numeric environment variable\r\n */\r\nconst getNumericEnvVar = (key: string, defaultValue = 0): number => {\r\n    const value = import.meta.env[key];\r\n    if (value === undefined) return defaultValue;\r\n    const num = parseInt(value, 10);\r\n    return isNaN(num) ? defaultValue : num;\r\n};\r\n\r\n/**\r\n * Get current environment from build-time variables\r\n */\r\nconst getCurrentEnv = (): 'development' | 'production' => {\r\n    // Check NODE_ENV first (more reliable for Vite builds)\r\n    const nodeEnv = import.meta.env.NODE_ENV;\r\n    if (nodeEnv === 'production') return 'production';\r\n    if (nodeEnv === 'development') return 'development';\r\n    \r\n    // Fallback to Vite's mode\r\n    const viteMode = import.meta.env.MODE;\r\n    if (viteMode === 'production') return 'production';\r\n    \r\n    // Default fallback to development\r\n    return 'development';\r\n};\r\n\r\n/**\r\n * Application configuration instance\r\n * Environment-aware configuration\r\n */\r\nexport const appConfig: AppConfig = (() => {\r\n    const env = getCurrentEnv();\r\n    const isDev = env === 'development';\r\n    const isProd = env === 'production';\r\n    \r\n    return {\r\n    // Environment - dynamic based on build mode\r\n    env,\r\n    isDevelopment: isDev,\r\n    isProduction: isProd,\r\n\r\n    // App Info\r\n    name: getEnvVar('VITE_APP_NAME', 'Health Tracker Prototype'),\r\n    version: getEnvVar('VITE_APP_VERSION', isProd ? '1.0.0' : '1.0.0-dev'),\r\n    description: getEnvVar('VITE_APP_DESCRIPTION', 'Health and nutrition tracking prototype'),\r\n\r\n    // API Configuration\r\n    api: {\r\n        baseUrl: getEnvVar('VITE_API_BASE_URL', isProd ? '/api' : 'http://localhost:3001/api'),\r\n        timeout: getNumericEnvVar('VITE_API_TIMEOUT', 10000),\r\n    },\r\n\r\n    // Supabase Configuration\r\n    supabase: {\r\n        url: getEnvVar('VITE_SUPABASE_URL'),\r\n        anonKey: getEnvVar('VITE_SUPABASE_ANON_KEY'),\r\n    },\r\n\r\n    // Development Features - environment dependent\r\n    debug: {\r\n        enabled: getBooleanEnvVar('VITE_DEBUG_MODE', isDev),\r\n        showPanel: getBooleanEnvVar('VITE_ENABLE_DEBUG_PANEL', isDev),\r\n        enableLogging: getBooleanEnvVar('VITE_ENABLE_LOGGING', isDev),\r\n        enablePerformanceMonitoring: getBooleanEnvVar('VITE_ENABLE_PERFORMANCE_MONITORING', isDev),\r\n    },\r\n\r\n    // Feature Flags - experimental features enabled in development only\r\n    features: {\r\n        experimentalFeatures: getBooleanEnvVar('VITE_ENABLE_EXPERIMENTAL_FEATURES', isDev),\r\n    },\r\n    };\r\n})();\r\n\r\n/**\r\n * Validate required configuration\r\n */\r\nexport const validateConfig = (): void => {\r\n    const requiredFields = [\r\n        'VITE_SUPABASE_URL',\r\n        'VITE_SUPABASE_ANON_KEY',\r\n    ];\r\n\r\n    const missingFields = requiredFields.filter(field => !getEnvVar(field));\r\n\r\n    if (missingFields.length > 0) {\r\n        console.error('Missing required environment variables:', missingFields);\r\n        throw new Error(`Missing required environment variables: ${missingFields.join(', ')}`);\r\n    }\r\n\r\n    console.log('✅ Configuration validated successfully');\r\n    console.log('📊 App Config:', {\r\n        name: appConfig.name,\r\n        version: appConfig.version,\r\n        env: appConfig.env,\r\n        debug: appConfig.debug.enabled,\r\n    });\r\n};\r\n\r\n/**\r\n * Development helper functions\r\n */\r\nexport const devHelpers = {\r\n    /**\r\n     * Log configuration in development\r\n     */\r\n    logConfig: () => {\r\n        if (appConfig.debug.enableLogging) {\r\n            console.group('🔧 App Configuration');\r\n            console.log('Environment:', appConfig.env);\r\n            console.log('Version:', appConfig.version);\r\n            console.log('Debug Mode:', appConfig.debug.enabled);\r\n            console.log('Experimental Features:', appConfig.features.experimentalFeatures);\r\n            console.groupEnd();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a feature is enabled\r\n     */\r\n    isFeatureEnabled: (feature: keyof AppConfig['features']): boolean => {\r\n        return appConfig.features[feature];\r\n    },\r\n\r\n    /**\r\n     * Development mode checks\r\n     */\r\n    isDev: () => appConfig.isDevelopment,\r\n    debugEnabled: () => appConfig.debug.enabled,\r\n    loggingEnabled: () => appConfig.debug.enableLogging,\r\n};\r\n\r\n// Validate configuration on import\r\nif (typeof window !== 'undefined') {\r\n    validateConfig();\r\n    devHelpers.logConfig();\r\n}\r\n\r\nexport default appConfig;","import { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\r\nimport ModernNavigation from './components/navigation/ModernNavigation';\r\nimport Preloader from './components/ui/Preloader';\r\nimport Hero from './components/sections/Hero';\r\nimport AddMeals from './pages/AddMeals';\r\nimport Profile from './pages/Profile';\r\nimport Journal from './pages/Journal';\r\nimport AuthCallback from './pages/AuthCallback';\r\nimport ProtectedRoute from './components/auth/ProtectedRoute';\r\nimport { useAuthNavigation, useNavigationEvents } from './hooks/useNavigation';\r\nimport { useAuth } from './hooks/useAuth';\r\nimport ScrollManager from './managers/ScrollManager';\r\nimport PerformanceManager from './managers/PerformanceManager';\r\nimport { appConfig, devHelpers } from './config/AppConfig';\r\nimport './App.css';\r\n\r\n// Layout component to wrap pages with header and footer\r\nconst Layout: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const auth = useAuth();\r\n  const navigation = useAuthNavigation(auth.isAuthenticated, auth.loading);\r\n  const { isAuthenticated } = auth;\r\n  const { actions: navActions } = navigation;\r\n  const location = useLocation();\r\n\r\n  const handleNavigate = (sectionId: string) => {\r\n    navActions.navigate(sectionId);\r\n  };\r\n\r\n  // Only show footer on home page\r\n  const showFooter = location.pathname === '/';\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* Fixed Navigation - appears on all pages */}\r\n      <ModernNavigation\r\n        position=\"fixed-top\"\r\n        onNavigate={handleNavigate}\r\n        brand=\"Health Tracker\"\r\n        brandHref=\"/\"\r\n      />\r\n\r\n      {/* Main content - changes based on route */}\r\n      <main className=\"app__main\">\r\n        {children}\r\n      </main>\r\n\r\n      {/* Compact Footer - only on home page */}\r\n      {showFooter && (\r\n        <footer className=\"app__footer\">\r\n          <div className=\"app__footer-content\">\r\n            <div className=\"app__footer-main\">\r\n              <div className=\"app__footer-brand\">\r\n                <strong>{appConfig.name}</strong>\r\n                <span>Your health journey starts here</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"app__footer-bottom\">\r\n              <span>&copy; 2025 {appConfig.name}</span>\r\n              {appConfig.debug.enabled && (\r\n                <span className=\"app__footer-version\">\r\n                  v{appConfig.version}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Home Page Component\r\nconst HomePage: React.FC = () => {\r\n  const auth = useAuth();\r\n  const navigation = useAuthNavigation(auth.isAuthenticated, auth.loading);\r\n  const { isAuthenticated, authLoading } = auth;\r\n  const { actions: navActions } = navigation;\r\n\r\n  const handleNavigate = (sectionId: string) => {\r\n    navActions.navigate(sectionId);\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    // Use the auth hook's Google sign in method\r\n    await auth.signInWithGoogle();\r\n  };\r\n\r\n  // Show loading state during authentication\r\n  const primaryCtaText = authLoading \r\n    ? \"Signing in...\" \r\n    : isAuthenticated \r\n      ? \"Go to Add Meals\" \r\n      : \"Sign In with Google\";\r\n\r\n  return (\r\n    <section id=\"home\" className=\"app__section\">\r\n      <Hero\r\n        title={`Welcome to ${appConfig.name}`}\r\n        subtitle=\"Track your health and nutrition journey with ease\"\r\n        primaryCtaText={primaryCtaText}\r\n        onPrimaryCtaClick={() => {\r\n          if (authLoading) return; // Prevent clicks during loading\r\n          return isAuthenticated ? handleNavigate('add-meals') : handleSignIn();\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Always call hooks in the same order\r\n  const auth = useAuth();\r\n  const navigation = useAuthNavigation(auth.isAuthenticated, auth.loading);\r\n\r\n  // Extract values after hooks are called  \r\n  const { isAuthenticated, loading, authLoading } = auth;\r\n  const { state: navState } = navigation;\r\n\r\n  // Initialize managers once\r\n  useEffect(() => {\r\n    const scrollManager = ScrollManager.getInstance();\r\n    const performanceManager = PerformanceManager.getInstance();\r\n\r\n    // Start performance tracking if enabled\r\n    if (appConfig.debug.enablePerformanceMonitoring) {\r\n      performanceManager.startMark('app-init');\r\n    }\r\n\r\n    // Log app initialization in development\r\n    if (appConfig.debug.enableLogging) {\r\n      console.log('🚀 Health Tracker App initializing...');\r\n      console.log('📱 Version:', appConfig.version);\r\n      console.log('🔧 Environment:', appConfig.env);\r\n      console.log('🧭 Navigation items configured: Home, Add Meals, Journal');\r\n      console.log('🌐 Router-based navigation enabled');\r\n    }\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      scrollManager.destroy();\r\n      performanceManager.destroy();\r\n\r\n      if (appConfig.debug.enableLogging) {\r\n        console.log('🧹 App cleanup completed');\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Enhanced analytics tracking with auth-blocked events\r\n  useNavigationEvents('all', (event) => {\r\n    if (appConfig.debug.enableLogging) {\r\n      console.log('🧭 Navigation event:', event);\r\n    }\r\n\r\n    // Track auth-blocked navigation attempts\r\n    if (event.type === 'navigate-blocked') {\r\n      console.log('🔒 Navigation blocked - authentication required for:', event.item?.label);\r\n    }\r\n\r\n    // Development-specific tracking\r\n    if (devHelpers.isFeatureEnabled('experimentalFeatures')) {\r\n      console.log('📊 Experimental tracking enabled for:', event);\r\n    }\r\n  }, []);\r\n\r\n  // Listen for Google sign-in requests from NavigationManager\r\n  useEffect(() => {\r\n    const handleGoogleSigninRequest = async (event: CustomEvent) => {\r\n      const item = event.detail?.item;\r\n      if (appConfig.debug.enableLogging) {\r\n        console.log('🔐 Google sign-in requested for:', item?.label);\r\n      }\r\n      \r\n      try {\r\n        const result = await auth.signInWithGoogle();\r\n        if (result.success && item) {\r\n          // Navigate to the requested page after successful authentication\r\n          setTimeout(() => {\r\n            navigation.actions.navigate(item.id);\r\n          }, 1000); // Small delay to allow auth state to update\r\n        }\r\n      } catch (error) {\r\n        console.error('🔐 Google sign-in failed:', error);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('navigation:google-signin-requested', handleGoogleSigninRequest as EventListener);\r\n\r\n    return () => {\r\n      document.removeEventListener('navigation:google-signin-requested', handleGoogleSigninRequest as EventListener);\r\n    };\r\n  }, [auth, navigation.actions]);\r\n\r\n  const handlePreloaderComplete = () => {\r\n    setIsLoading(false);\r\n\r\n    // Trigger any post-load animations or effects here\r\n    document.body.classList.add('app-loaded');\r\n\r\n    // Log successful app load\r\n    if (appConfig.debug.enableLogging) {\r\n      console.log('✅ App loaded successfully');\r\n      console.log('🔐 Authentication state:', isAuthenticated ? 'authenticated' : 'not authenticated');\r\n\r\n      if (appConfig.debug.enablePerformanceMonitoring) {\r\n        const performanceManager = PerformanceManager.getInstance();\r\n        performanceManager.endMark('app-init');\r\n        console.log('⏱️ App initialization complete');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Early return after all hooks are called\r\n  // Don't show preloader if user is in the middle of authentication\r\n  if (isLoading && !authLoading) {\r\n    return (\r\n      <Preloader\r\n        onComplete={handlePreloaderComplete}\r\n        duration={1200}\r\n        minDisplayTime={800}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Routes>\r\n          {/* Home Route */}\r\n          <Route path=\"/\" element={<HomePage />} />\r\n\r\n          {/* Auth Callback Route - for OAuth popup handling */}\r\n          <Route path=\"/auth/callback\" element={<AuthCallback />} />\r\n\r\n          {/* Protected Add Meals Route */}\r\n          <Route\r\n            path=\"/add-meals\"\r\n            element={\r\n              <ProtectedRoute>\r\n                <AddMeals />\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n\r\n          {/* Profile Route */}\r\n          <Route\r\n            path=\"/profile\"\r\n            element={\r\n              <ProtectedRoute>\r\n                <Profile />\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n\r\n          {/* Journal Route */}\r\n          <Route\r\n            path=\"/journal\"\r\n            element={\r\n              <ProtectedRoute>\r\n                <Journal />\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n\r\n          {/* Redirect any unknown routes to home */}\r\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n        </Routes>\r\n\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { StrictMode } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport './index.css'\r\nimport './styles/variables.css'\r\nimport App from './App.tsx'\r\n\r\ncreateRoot(document.getElementById('root')!).render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n)"],"names":["item","useRef","SupabaseService","useState","useEffect","useCallback","config","useMemo","jsxDEV","this","_a","_b","Fragment","index","getProgressPercentage","Router","StrictMode"],"mappings":"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"}