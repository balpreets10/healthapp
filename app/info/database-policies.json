[
    {
        "schemaname": "public",
        "tablename": "foods",
        "policyname": "Allow service_role to manage foods",
        "permissive": "PERMISSIVE",
        "roles": "{public}",
        "cmd": "ALL",
        "qual": "(auth.role() = 'service_role'::text)",
        "with_check": null
    },
    {
        "schemaname": "public",
        "tablename": "foods",
        "policyname": "Allow authenticated users to read foods",
        "permissive": "PERMISSIVE",
        "roles": "{public}",
        "cmd": "SELECT",
        "qual": "(auth.role() = 'authenticated'::text)",
        "with_check": null
    },
    {
        "schemaname": "public",
        "tablename": "user_roles",
        "policyname": "Authenticated users can have roles",
        "permissive": "PERMISSIVE",
        "roles": "{public}",
        "cmd": "INSERT",
        "qual": null,
        "with_check": "(auth.uid() IS NOT NULL)"
    },
    {
        "schemaname": "public",
        "tablename": "user_roles",
        "policyname": "Users can view own role",
        "permissive": "PERMISSIVE",
        "roles": "{public}",
        "cmd": "SELECT",
        "qual": "(auth.uid() = user_id)",
        "with_check": null
    },
    {
        "schemaname": "public",
        "tablename": "user_profiles",
        "policyname": "Users can view own profile",
        "permissive": "PERMISSIVE",
        "roles": "{public}",
        "cmd": "ALL",
        "qual": "(auth.uid() = user_id)",
        "with_check": null
    },
    {
        "schemaname": "public",
        "tablename": "meals",
        "policyname": "Users can manage own meals",
        "permissive": "PERMISSIVE",
        "roles": "{public}",
        "cmd": "ALL",
        "qual": "(auth.uid() = user_id)",
        "with_check": null
    },
    {
        "schemaname": "public",
        "tablename": "health_journal_entries",
        "policyname": "Users can manage own journal entries",
        "permissive": "PERMISSIVE",
        "roles": "{public}",
        "cmd": "ALL",
        "qual": "(auth.uid() = user_id)",
        "with_check": null
    }
]